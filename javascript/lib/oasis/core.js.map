{"version":3,"file":"module.js","sources":["../src/asset/AssetPromise.ts","../src/base/Util.ts","../src/asset/ResourceManager.ts","../src/base/Event.ts","../src/clone/enums/CloneMode.ts","../src/clone/CloneManager.ts","../src/base/EngineObject.ts","../src/base/EventDispatcher.ts","../src/base/Logger.ts","../src/base/Time.ts","../src/base/Constant.ts","../src/DisorderedArray.ts","../src/shader/ShaderMacroCollection.ts","../src/ComponentsManager.ts","../src/clone/ComponentCloner.ts","../src/ComponentsDependencies.ts","../src/Layer.ts","../src/Component.ts","../src/UpdateFlag.ts","../src/Transform.ts","../src/Entity.ts","../src/FeatureManager.ts","../src/RenderPipeline/RenderElement.ts","../src/SceneFeature.ts","../src/shader/enums/BlendFactor.ts","../src/shader/enums/BlendOperation.ts","../src/shader/enums/ColorWriteMask.ts","../src/shader/enums/CompareFunction.ts","../src/shader/enums/CullMode.ts","../src/shader/enums/StencilOperation.ts","../src/material/enums/RenderQueueType.ts","../src/RenderPipeline/RenderQueue.ts","../src/shaderlib/pbr/index.ts","../src/shaderlib/ShaderLib.ts","../src/shaderlib/ShaderFactory.ts","../src/shader/ShaderMacro.ts","../src/shader/enums/ShaderDataGroup.ts","../src/shader/ShaderUniform.ts","../src/shader/ShaderUniformBlock.ts","../src/shader/ShaderProgram.ts","../src/shader/ShaderProperty.ts","../src/shader/Shader.ts","../src/lighting/Light.ts","../src/lighting/AmbientLight.ts","../src/lighting/DirectLight.ts","../src/lighting/EnvironmentMapLight.ts","../src/lighting/PointLight.ts","../src/lighting/SpotLight.ts","../src/lighting/LightFeature.ts","../src/asset/RefObject.ts","../src/material/type.ts","../src/texture/enums/RenderBufferColorFormat.ts","../src/texture/enums/RenderBufferDepthFormat.ts","../src/texture/enums/TextureFilterMode.ts","../src/texture/enums/TextureFormat.ts","../src/texture/enums/TextureWrapMode.ts","../src/texture/Texture.ts","../src/shader/ShaderData.ts","../src/Scene.ts","../src/SceneManager.ts","../src/shader/ShaderPool.ts","../src/shader/ShaderProgramPool.ts","../src/shader/state/RenderTargetBlendState.ts","../src/shader/state/BlendState.ts","../src/shader/state/DepthState.ts","../src/shader/state/RasterState.ts","../src/shader/state/StencilState.ts","../src/shader/state/RenderState.ts","../src/Engine.ts","../src/SystemInfo.ts","../src/EngineFeature.ts","../src/Script.ts","../src/Renderer.ts","../src/material/Material.ts","../src/RenderPipeline/RenderPass.ts","../src/RenderPipeline/SeparateSpritePass.ts","../src/RenderPipeline/BasicRenderPipeline.ts","../src/RenderPipeline/RenderContext.ts","../src/Camera.ts","../src/asset/request.ts","../src/asset/Loader.ts","../src/asset/AssetType.ts","../src/collider/ColliderFeature.ts","../src/collider/Collider.ts","../src/collider/ABoxCollider.ts","../src/collider/ASphereCollider.ts","../src/collider/PlaneCollider.ts","../src/raycast/RaycastHit.ts","../src/raycast/index.ts","../src/mesh/Mesh.ts","../src/mesh/Skin.ts","../src/mesh/MeshRenderer.ts","../src/texture/Texture2D.ts","../src/mesh/SkinnedMeshRenderer.ts","../src/mesh/LODGroup.ts","../src/material/enums/AlphaMode.ts","../src/material/BlinnPhongMaterial.ts","../src/material/PBRMaterial.ts","../src/texture/enums/TextureCubeFace.ts","../src/texture/TextureCubeMap.ts","../src/texture/RenderDepthTexture.ts","../src/texture/RenderTarget.ts","../src/texture/RenderColorTexture.ts","../src/graphic/enums/BufferUsage.ts","../src/graphic/enums/VertexElementFormat.ts","../src/graphic/enums/IndexFormat.ts","../src/graphic/BufferUtil.ts","../src/graphic/enums/BufferBindFlag.ts","../src/graphic/enums/SetDataOptions.ts","../src/graphic/Buffer.ts","../src/graphic/enums/PrimitiveTopology.ts","../src/graphic/IndexBufferBinding.ts","../src/graphic/VertexBufferBinding.ts","../src/graphic/Primitive.ts","../src/graphic/VertexElement.ts","../src/graphic/SubPrimitive.ts","../src/2d/SpriteRenderer.ts","../src/animation/AnimationConst.ts","../src/animation/AnimationClip.ts","../src/animation/AnimationLayer.ts","../src/animation/Animation.ts","../src/geometry/BufferGeometry.ts","../src/geometry/GeometryRenderer.ts","../src/geometry-shape/ShapeGeometry.ts","../src/geometry-shape/CuboidGeometry.ts","../src/geometry-shape/SphereGeometry.ts","../src/geometry-shape/PlaneGeometry.ts","../src/geometry-shape/CylinderGeometry.ts","../src/geometry-shape/CircleGeometry.ts","../src/geometry-shape/ScreenQuadGeometry.ts","../src/geometry-shape/TorusGeometry.ts","../src/geometry-shape/Model.ts","../src/skybox/SkyBoxMaterial.ts","../src/skybox/SkyBox.ts","../src/particle/particleRenderer.ts","../src/trail/TrailMaterial.ts","../src/trail/TrailRenderer.ts","../src/collider/BoxCollider.ts","../src/collider/SphereCollider.ts","../src/collider/index.ts","../src/collision/intersect.ts","../src/collision/CollisionDetection.ts","../src/fog/Fog.ts","../src/fog/EXP2Fog.ts","../src/fog/LinearFog.ts","../src/env-probe/Probe.ts","../src/env-probe/CubeProbe.ts","../src/shadow/LightShadow.ts","../src/shadow/Extension.ts","../src/shadow/ShadowMapMaterial.ts","../src/shadow/ShadowMapPass.ts","../src/shadow/ShadowMaterial.ts","../src/shadow/ShadowPass.ts","../src/shadow/ShadowFeature.ts","../src/shadow/index.ts","../src/index.ts"],"sourcesContent":["type PromiseNotifier = (progress: number) => void;\n\n/**\n * Asset Promise Status\n */\nexport enum AssetPromiseStatus {\n  /** Success. */\n  Success,\n  /** Pending. */\n  Pending,\n  /** Failed. */\n  Failed\n}\n/**\n * Asset Loading Promise.\n */\nexport class AssetPromise<T> extends Promise<T> {\n  static all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>,\n      T10 | PromiseLike<T10>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>,\n      T9 | PromiseLike<T9>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7, T8>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>,\n      T8 | PromiseLike<T8>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7, T8]>;\n\n  static all<T1, T2, T3, T4, T5, T6, T7>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>,\n      T7 | PromiseLike<T7>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6, T7]>;\n\n  static all<T1, T2, T3, T4, T5, T6>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>,\n      T6 | PromiseLike<T6>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5, T6]>;\n\n  static all<T1, T2, T3, T4, T5>(\n    values: readonly [\n      T1 | PromiseLike<T1>,\n      T2 | PromiseLike<T2>,\n      T3 | PromiseLike<T3>,\n      T4 | PromiseLike<T4>,\n      T5 | PromiseLike<T5>\n    ]\n  ): AssetPromise<[T1, T2, T3, T4, T5]>;\n\n  static all<T1, T2, T3, T4>(\n    values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]\n  ): AssetPromise<[T1, T2, T3, T4]>;\n\n  static all<T1, T2, T3>(\n    values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]\n  ): AssetPromise<[T1, T2, T3]>;\n\n  static all<T1, T2>(values: readonly [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): AssetPromise<[T1, T2]>;\n\n  static all<T>(values: readonly (T | PromiseLike<T>)[]): AssetPromise<T[]>;\n\n  /**\n   * Return a new resource Promise through the provided asset promise collection.\n   * The resolved of the new AssetPromise will be triggered when all the Promises in the provided set are completed.\n   * @param - AssetPromise Collection\n   * @returns AssetPromise\n   */\n  static all<T>(promises: T | PromiseLike<T>[]): AssetPromise<T[]> {\n    return new AssetPromise((resolve, reject, setProgress) => {\n      if (!Array.isArray(promises)) {\n        return resolve([promises]);\n      }\n\n      let completed = 0;\n      let total = promises.length;\n      let results = new Array<T>(total);\n\n      promises.forEach((value, index) => {\n        Promise.resolve(value)\n          .then((result) => {\n            results[index] = result;\n\n            completed += 1;\n            setProgress(completed / total);\n\n            if (completed == total) {\n              resolve(results);\n            }\n          })\n          .catch((err) => reject(err));\n      });\n    });\n  }\n\n  private _status: AssetPromiseStatus;\n  private _progress: number;\n  private _reject: (reason?: any) => void;\n  private _listeners: Set<PromiseNotifier>;\n\n  /**\n   * Current promise state.\n   */\n  get status(): AssetPromiseStatus {\n    return this._status;\n  }\n\n  /**\n   * Loading progress.\n   */\n  get progress(): number {\n    return this._progress;\n  }\n\n  /**\n   * Progress callback.\n   * @param callback - Progress callback\n   * @returns Asset Promise\n   */\n  onProgress(callback: (progress?: number) => any): AssetPromise<T> {\n    this._listeners.add(callback);\n    return this;\n  }\n\n  /**\n   * Cancel promise request.\n   * @returns Asset promise\n   */\n  cancel(): AssetPromise<T> {\n    if (this._status !== AssetPromiseStatus.Pending) {\n      return this;\n    }\n    this._reject(\"Promise Canceled\");\n    return this;\n  }\n\n  /**\n   * Create an asset loading Promise.\n   * @param executor - A callback used to initialize the promise. This callback is passed two arguments:\n   * a resolve callback used to resolve the promise with a value or the result of another promise,\n   * and a reject callback used to reject the promise with a provided reason or error.\n   * and a setProgress callback used to set promise progress with a percent.\n   */\n  constructor(\n    executor: (\n      resolve: (value?: T | PromiseLike<T>) => void,\n      reject?: (reason?: any) => void,\n      setProgress?: PromiseNotifier\n    ) => void\n  ) {\n    let newReject: (reason?: any) => void;\n\n    const setProgress = (progress: number) => {\n      if (progress <= this._progress) {\n        return;\n      }\n      this._progress = progress;\n\n      for (const listener of this._listeners) {\n        listener(progress);\n      }\n    };\n\n    super((resolve, reject) => {\n      newReject = (reason?: any) => {\n        // Add it to the micro task to avoid reporting an error when calling this directly.\n        Promise.resolve().then(() => {\n          this._status = AssetPromiseStatus.Failed;\n          reject(reason);\n        });\n      };\n      executor(\n        (value: T) => {\n          // Add it to the micro task to avoid reporting an error when calling this directly.\n          Promise.resolve().then(() => {\n            setProgress(1);\n            this._status = AssetPromiseStatus.Success;\n            resolve(value);\n          });\n        },\n        newReject,\n        (progress: number) => {\n          // Add it to the micro task to avoid reporting an error when calling this directly\n          Promise.resolve().then(() => {\n            setProgress(progress);\n          });\n        }\n      );\n    });\n    this._reject = newReject;\n    this._listeners = new Set();\n    this._progress = 0;\n    this._status = AssetPromiseStatus.Pending;\n  }\n}\n","export const Util = {\n  isArray:\n    \"isArray\" in Array\n      ? Array.isArray\n      : (value: any): boolean => {\n          return toString.call(value) === \"[object Array]\";\n        },\n  isArrayLike(x: any): boolean {\n    return !!x && typeof x.length === \"number\" && typeof x !== \"function\";\n  },\n  clone<T>(obj: T): T {\n    if (typeof obj !== \"object\" || obj === null) {\n      return obj;\n    }\n    let rst;\n    if (Util.isArrayLike(obj)) {\n      rst = (obj as any).slice();\n      for (let i = 0, l = (obj as any).length; i < l; i++) {\n        rst[i] = Util.clone(obj[i]);\n      }\n    } else {\n      rst = {};\n      for (const k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          rst[k] = Util.clone(obj[k]);\n        }\n      }\n    }\n\n    return rst;\n  },\n\n  downloadBlob(blob: Blob, fileName: string = \"\") {\n    if (navigator && navigator.msSaveBlob) {\n      navigator.msSaveBlob(blob, fileName);\n      return;\n    }\n\n    let url = window.URL.createObjectURL(blob);\n    let a = document.createElement(\"a\");\n    document.body.appendChild(a);\n    a.style.display = \"none\";\n    a.href = url;\n    a.download = fileName;\n    a.addEventListener(\"click\", () => {\n      if (a.parentElement) {\n        a.parentElement.removeChild(a);\n      }\n    });\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n};\n\nexport const isArrayLike = <T>(x: any): x is ArrayLike<T> =>\n  x && typeof x.length === \"number\" && typeof x !== \"function\";\n\n/**\n * Fastly remove an element from array.\n * @param array - Array\n * @param item - Element\n */\nexport function removeFromArray(array: any[], item: any): boolean {\n  const index = array.indexOf(item);\n  if (index < 0) {\n    return false;\n  }\n  const last = array.length - 1;\n  if (index !== last) {\n    const end = array[last];\n    array[index] = end;\n  }\n  array.length--;\n  return true;\n}\n\nexport function ObjectValues(obj: any) {\n  return Object.keys(obj).map((key: any) => obj[key]);\n}\n","import { AssetPromise } from \"./AssetPromise\";\nimport { LoadItem } from \"./LoadItem\";\nimport { RefObject } from \"./RefObject\";\nimport { Engine } from \"..\";\nimport { Loader } from \"./Loader\";\nimport { AssetType } from \"./AssetType\";\nimport { ObjectValues } from \"../base/Util\";\n\n/**\n * ResourceManager\n */\nexport class ResourceManager {\n  /** Loader collection. */\n  private static _loaders: { [key: number]: Loader<any> } = {};\n  private static _extTypeMapping: { [key: string]: AssetType } = {};\n\n  /**\n   * @internal\n   */\n  static _addLoader(type: AssetType, loader: Loader<any>, extnames: string[]) {\n    this._loaders[type] = loader;\n    for (let i = 0, len = extnames.length; i < len; i++) {\n      this._extTypeMapping[extnames[i]] = type;\n    }\n  }\n\n  private static _getTypeByUrl(url: string): AssetType {\n    const path = url.split(\"?\")[0];\n    return this._extTypeMapping[path.substring(path.lastIndexOf(\".\") + 1)];\n  }\n\n  /** The number of retries after failing to load assets. */\n  retryCount: number = 1;\n  /** Retry delay time after failed to load assets, in milliseconds. */\n  retryInterval: number = 0;\n  /** The default timeout period for loading assets, in milliseconds. */\n  timeout: number = 20000;\n\n  /** Asset path pool, key is asset ID, value is asset path */\n  private _assetPool: { [key: number]: string } = Object.create(null);\n  /** Asset pool, the key is the asset path and the value is the asset. */\n  private _assetUrlPool: { [key: string]: Object } = Object.create(null);\n  /** Reference counted object pool, key is the object ID, and reference counted objects are put into this pool. */\n  private _refObjectPool: { [key: number]: RefObject } = Object.create(null);\n  /** Loading assets. */\n  private _loadingPromises: { [url: string]: AssetPromise<any> } = {};\n\n  /**\n   * Create a ResourceManager.\n   * @param engine - Engine to which the current ResourceManager belongs\n   */\n  constructor(public readonly engine: Engine) {}\n\n  /**\n   * Load asset asynchronously through the path.\n   * @param path - Path\n   * @returns Asset promise\n   */\n  load<T>(path: string): AssetPromise<T>;\n\n  /**\n   * Load asset collection asynchronously through urls.\n   * @param path - Path collections\n   * @returns Asset Promise\n   */\n  load(pathes: string[]): AssetPromise<Object[]>;\n\n  /**\n   * Load the asset asynchronously by asset item information.\n   * @param assetItem - AssetItem\n   * @returns AssetPromise\n   */\n  load<T>(assetItem: LoadItem): AssetPromise<T>;\n\n  /**\n   * Load the asset collection asynchronously by loading the information collection.\n   * @param assetItems - Asset collection\n   * @returns AssetPromise\n   */\n  load(assetItems: LoadItem[]): AssetPromise<Object[]>;\n\n  load<T>(assetInfo: string | LoadItem | (LoadItem | string)[]): AssetPromise<T | Object[]> {\n    // single item\n    if (!Array.isArray(assetInfo)) {\n      return this._loadSingleItem(assetInfo);\n    }\n    // multi items\n    const promises = assetInfo.map((item) => this._loadSingleItem<T>(item));\n    return AssetPromise.all(promises);\n  }\n\n  /**\n   * Cancel all assets that have not finished loading.\n   */\n  cancelNotLoaded(): void;\n\n  /**\n   * Cancel assets whose url has not finished loading.\n   * @param url - Resource url\n   */\n  cancelNotLoaded(url: string): void;\n\n  /**\n   * Cancel the incompletely loaded assets in urls.\n   * @param urls - Resource urls\n   */\n  cancelNotLoaded(urls: string[]): void;\n\n  cancelNotLoaded(url?: string | string[]): void {\n    if (!url) {\n      ObjectValues(this._loadingPromises).forEach((promise) => {\n        promise.cancel();\n      });\n    } else if (typeof url === \"string\") {\n      this._loadingPromises[url]?.cancel();\n    } else {\n      url.forEach((p) => {\n        this._loadingPromises[p]?.cancel();\n      });\n    }\n  }\n\n  /**\n   * Garbage collection will release resource objects managed by reference counting.\n   * @remarks The release principle is that it is not referenced by the components, including direct and indirect reference.\n   */\n  gc(): void {\n    const objects = ObjectValues(this._refObjectPool);\n    for (let i = 0, len = objects.length; i < len; i++) {\n      if (!objects[i].isGCIgnored) {\n        objects[i].destroy();\n      }\n    }\n  }\n\n  /**\n   * Get asset url from instanceId.\n   * @param instanceId - Engine instance id\n   * @returns Asset url\n   */\n  getAssetPath(instanceId: number): string {\n    return this._assetPool[instanceId];\n  }\n\n  /**\n   * @internal\n   */\n  _addAsset(path: string, asset: RefObject): void {\n    this._assetPool[asset.instanceId] = path;\n    this._assetUrlPool[path] = asset;\n  }\n\n  /**\n   * @internal\n   */\n  _deleteAsset(asset: RefObject): void {\n    const id = asset.instanceId;\n    const path = this._assetPool[id];\n    if (path) {\n      delete this._assetPool[id];\n      delete this._assetUrlPool[path];\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _addRefObject(id: number, asset: RefObject): void {\n    this._refObjectPool[id] = asset;\n  }\n\n  /**\n   * @internal\n   */\n  _deleteRefObject(id: number): void {\n    delete this._refObjectPool[id];\n  }\n\n  private _assignDefaultOptions(assetInfo: LoadItem): LoadItem | never {\n    assetInfo.type = assetInfo.type ?? ResourceManager._getTypeByUrl(assetInfo.url);\n    if (assetInfo.type === undefined) {\n      throw `asset type should be specified: ${assetInfo.url}`;\n    }\n    assetInfo.retryCount = assetInfo.retryCount ?? this.retryCount;\n    assetInfo.timeout = assetInfo.timeout ?? this.timeout;\n    assetInfo.retryInterval = assetInfo.retryInterval ?? this.retryInterval;\n    assetInfo.url = assetInfo.url ?? assetInfo.urls.join(\",\");\n    return assetInfo;\n  }\n\n  private _loadSingleItem<T>(item: LoadItem | string): AssetPromise<T> {\n    const info = this._assignDefaultOptions(typeof item === \"string\" ? { url: item } : item);\n    const url = info.url;\n    // has cache\n    if (this._assetUrlPool[url]) {\n      return new AssetPromise((resolve) => {\n        resolve(this._assetUrlPool[url] as T);\n      });\n    }\n    // loading\n    if (this._loadingPromises[url]) {\n      return this._loadingPromises[info.url];\n    }\n    const loader = ResourceManager._loaders[info.type];\n    const promise = loader.load(info, this);\n    this._loadingPromises[url] = promise;\n    promise\n      .then((res) => {\n        if (loader.useCache) this._addAsset(url, res);\n        delete this._loadingPromises[url];\n      })\n      .catch(() => {});\n    return promise;\n  }\n}\n\n/**\n * Declare ResourceLoader's decorator.\n * @param assetType - Type of asset\n * @param extnames - Name of file extension\n */\nexport function resourceLoader(assetType: AssetType, extnames: string[], useCache: boolean = true) {\n  return <T extends Loader<any>>(Target: { new (useCache: boolean): T }) => {\n    const loader = new Target(useCache);\n    ResourceManager._addLoader(assetType, loader, extnames);\n  };\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\n\nexport type Listener = ((e: Event) => any) & { once?: boolean };\n\n/** Event Object. * @class */\nexport class Event {\n  get propagationStopped(): boolean {\n    return this._propagationStopped;\n  }\n\n  get target(): EventDispatcher {\n    return this._target;\n  }\n\n  set target(t) {\n    this._target = t;\n  }\n\n  get timeStamp(): number {\n    return this._timeStamp;\n  }\n\n  get currentTarget(): EventDispatcher {\n    return this._currentTarget;\n  }\n\n  set currentTarget(t) {\n    this._currentTarget = t;\n  }\n\n  get bubbles(): boolean {\n    return this._bubbles;\n  }\n\n  get type(): string | number {\n    return this._type;\n  }\n\n  public data: any;\n\n  private _timeStamp: number;\n\n  private _target: EventDispatcher;\n\n  private _currentTarget: any;\n\n  private _bubbles: boolean;\n\n  private _propagationStopped: boolean;\n\n  private _type: string | number;\n\n  constructor(type: string | number, target: EventDispatcher = null, data: any = {}, bubbles: boolean = true) {\n    this._timeStamp = new Date().getTime();\n    this._target = target;\n    this.data = data;\n    this._currentTarget = null;\n    this._bubbles = bubbles;\n    this._propagationStopped = false;\n    this._type = type;\n  }\n\n  public stopPropagation(): void {\n    this._propagationStopped = true;\n  }\n}\n","/**\n * Clone mode.\n */\nexport enum CloneMode {\n  /** Ignore clone. */\n  Ignore,\n  /** Assignment clone. */\n  Assignment,\n  /** Shallow clone. */\n  Shallow,\n  /** Deep clone. */\n  Deep\n}\n","import { IClone } from \"@oasis-engine/design\";\nimport { CloneMode } from \"./enums/CloneMode\";\n\ntype TypeArray =\n  | Uint8Array\n  | Uint16Array\n  | Uint32Array\n  | Int8Array\n  | Int16Array\n  | Int32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Property decorator, ignore the property when cloning.\n */\nexport function ignoreClone(target: Object, propertyKey: string): void {\n  CloneManager.registerCloneMode(target, propertyKey, CloneMode.Ignore);\n}\n\n/**\n * Property decorator, assign value to the property when cloning.\n *\n * @remarks\n * If it's a primitive type, the value will be copied.\n * If it's a class type, the reference will be copied.\n */\nexport function assignmentClone(target: Object, propertyKey: string): void {\n  CloneManager.registerCloneMode(target, propertyKey, CloneMode.Assignment);\n}\n\n/**\n * Property decorator, shallow clone the property when cloning.\n * After cloning, it will keep its own reference independent, and use the method of assignment to clone all its internal properties.\n * if the internal property is a primitive type, the value will be copied, if the internal property is a reference type, its reference address will be copied.。\n *\n * @remarks\n * Applicable to Object, Array, TypedArray and Class types.\n */\nexport function shallowClone(target: Object, propertyKey: string): void {\n  CloneManager.registerCloneMode(target, propertyKey, CloneMode.Shallow);\n}\n\n/**\n * Property decorator, deep clone the property when cloning.\n * After cloning, it will maintain its own reference independence, and all its internal deep properties will remain completely independent.\n *\n * @remarks\n * Applicable to Object, Array, TypedArray and Class types.\n * If Class is encountered during the deep cloning process, the custom cloning function of the object will be called first. Custom cloning requires the object to implement the IClone interface.\n */\nexport function deepClone(target: Object, propertyKey: string): void {\n  CloneManager.registerCloneMode(target, propertyKey, CloneMode.Deep);\n}\n\n/**\n * @internal\n * Clone manager.\n */\nexport class CloneManager {\n  /** @internal */\n  static _subCloneModeMap = new Map<Object, Object>();\n  /** @internal */\n  static _cloneModeMap = new Map<Object, Object>();\n\n  private static _obejctType = Object.getPrototypeOf(Object);\n\n  /**\n   * Register clone mode.\n   * @param target - Clone target\n   * @param propertyKey - Clone property name\n   * @param mode - Clone mode\n   */\n  static registerCloneMode(target: Object, propertyKey: string, mode: CloneMode): void {\n    let targetMap = CloneManager._subCloneModeMap.get(target.constructor);\n    if (!targetMap) {\n      targetMap = Object.create(null);\n      CloneManager._subCloneModeMap.set(target.constructor, targetMap);\n    }\n    targetMap[propertyKey] = mode;\n  }\n\n  /**\n   * Get the clone mode according to the prototype chain.\n   */\n  static getCloneMode(type: Function): Object {\n    let cloneModes = CloneManager._cloneModeMap.get(type);\n    if (!cloneModes) {\n      cloneModes = Object.create(null);\n      CloneManager._cloneModeMap.set(type, cloneModes);\n      const obejctType = CloneManager._obejctType;\n      const cloneModeMap = CloneManager._subCloneModeMap;\n      while (type !== obejctType) {\n        const subCloneModes = cloneModeMap.get(type);\n        if (subCloneModes) {\n          Object.assign(cloneModes, subCloneModes);\n        }\n        type = Object.getPrototypeOf(type);\n      }\n    }\n    return cloneModes;\n  }\n\n  /**\n   * Deep clone the object.\n   * @param source - Clone source\n   * @param target - Clone target\n   */\n  static deepCloneObject(source: Object, target: Object): void {\n    const type = source.constructor;\n    switch (type) {\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Int8Array:\n      case Int16Array:\n      case Int32Array:\n      case Float32Array:\n      case Float64Array:\n        // Type array clone.\n        (<TypeArray>target).set(<TypeArray>source);\n        break;\n      case Array:\n        // Array clone.\n        for (let i = 0, n = (<[]>source).length; i < n; i++) {\n          CloneManager._deepCloneObjectItem(source, target, i);\n        }\n        break;\n      default:\n        const customSource = <IClone>source;\n        if (customSource.clone && customSource.cloneTo) {\n          // Custom clone.\n          customSource.cloneTo(target);\n        } else {\n          // Object or other class not implments custom clone.\n          const keys = Object.keys(source);\n          for (let i = 0, n = keys.length; i < n; i++) {\n            CloneManager._deepCloneObjectItem(source, target, keys[i]);\n          }\n        }\n    }\n  }\n\n  private static _deepCloneObjectItem(source: object, target: object, k: number | string): void {\n    const sourceItem = source[k];\n    if (sourceItem instanceof Object) {\n      const itemType = (<Object>sourceItem).constructor;\n      switch (itemType) {\n        case Uint8Array:\n        case Uint16Array:\n        case Uint32Array:\n        case Int8Array:\n        case Int16Array:\n        case Int32Array:\n        case Float32Array:\n        case Float64Array:\n          // Type array clone.\n          const sourceTypeArrayItem = <TypeArray>sourceItem;\n          let targetTypeArrayItem = <TypeArray>target[k];\n          if (targetTypeArrayItem == null) {\n            target[k] = sourceTypeArrayItem.slice();\n          } else {\n            targetTypeArrayItem.set(sourceTypeArrayItem);\n          }\n          break;\n        case Array:\n          // Array clone.\n          const sourceArryItem = <[]>sourceItem;\n          let targetArrayItem = <[]>target[k];\n          if (targetArrayItem == null) {\n            target[k] = new Array(sourceArryItem.length);\n          } else {\n            targetArrayItem.length = sourceArryItem.length;\n          }\n          CloneManager.deepCloneObject(sourceArryItem, targetArrayItem);\n          break;\n        default:\n          if (sourceItem.clone && sourceItem.cloneTo) {\n            // Custom clone.\n            let sourceCustomItem = <IClone>sourceItem;\n            let targetCustomItem = <IClone>target[k];\n            if (targetCustomItem) {\n              sourceCustomItem.cloneTo(targetCustomItem);\n            } else {\n              target[k] = sourceCustomItem.clone();\n            }\n          } else {\n            // Object or other class not implments custom clone.\n            let targetItem = <Object>target[k];\n            targetItem == null && (target[k] = targetItem = new sourceItem.constructor());\n            CloneManager.deepCloneObject(sourceItem, targetItem);\n            break;\n          }\n      }\n    } else {\n      // Null or undefine and primitive type.\n      target[k] = sourceItem;\n    }\n  }\n}\n","import { ignoreClone } from \"../clone/CloneManager\";\nimport { Engine } from \"../Engine\";\n\n/**\n * EngineObject.\n */\nexport abstract class EngineObject {\n  private static _instanceIdCounter: number = 0;\n\n  /** Engine unique id. */\n  @ignoreClone\n  readonly instanceId: number = ++EngineObject._instanceIdCounter;\n\n  /** Engine to which the object belongs. */\n  @ignoreClone\n  protected _engine: Engine;\n\n  constructor(engine: Engine) {\n    this._engine = engine;\n  }\n}\n","import { EngineObject } from \"./EngineObject\";\nimport { Event } from \"./Event\";\nimport { ignoreClone } from \"../clone/CloneManager\";\n\n/**\n * EventDispatcher, which can be inherited as a base class.\n */\nexport class EventDispatcher extends EngineObject {\n  @ignoreClone\n  private _evts = Object.create(null);\n  private _evtCount = 0;\n\n  /**\n   * Determine whether there is event listening.\n   * @param event - Event name\n   * @returns Returns whether there is a corresponding event\n   */\n  hasEvent(event: string): boolean {\n    return this._evts[event] != null;\n  }\n\n  /**\n   * Returns the names of all registered events.\n   * @returns All event names\n   */\n  eventNames(): string[] {\n    if (this._evtCount === 0) return [];\n    return Object.keys(this._evts);\n  }\n\n  /**\n   * Returns the number of listeners with the specified event name.\n   * @param event - Event name\n   * @returns The count of listeners\n   */\n  listenerCount(event: string): number {\n    const listeners = this._evts[event];\n\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n  }\n\n  /**\n   * Dispatch the event with the specified event name.\n   * @param event - Event name\n   * @param data - Data\n   * @returns - Whether the dispatching is successful\n   */\n  dispatch(event: string, data?: any): boolean {\n    if (!this._evts[event]) {\n      return false;\n    }\n\n    const listeners = this._evts[event];\n\n    if (listeners.fn) {\n      if (listeners.once) this.removeEventListener(event, listeners.fn);\n      listeners.fn(data);\n    } else {\n      const l = listeners.length;\n      for (let i = 0; i < l; i++) {\n        if (listeners[i].once) this.removeEventListener(event, listeners[i].fn);\n        listeners[i].fn(data);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Add a listener/\n   * @param event - Event name\n   * @param fn - Function\n   * @returns This\n   */\n  on(event: string, fn: Function): EventDispatcher {\n    return this.addEventListener(event, fn);\n  }\n\n  /**\n   * Add a one-time listener.\n   * @param event - Event name\n   * @param fn - Function\n   * @returns This\n   */\n  once(event: string, fn: Function): EventDispatcher {\n    return this.addEventListener(event, fn, true);\n  }\n\n  /**\n   * @deprecated Use `on/once` instead.\n   * Add a listener function with the specified event name.\n   * @param event - Event name\n   * @param fn - Function\n   * @param once - Is it a one-time listener\n   * @returns this\n   */\n  addEventListener(event: string, fn: Function, once?: boolean): EventDispatcher {\n    const listener = { fn, once };\n    const events = this._evts;\n    if (!events[event]) {\n      events[event] = listener;\n      this._evtCount++;\n    } else if (!events[event].fn) {\n      events[event].push(listener);\n    } else {\n      events[event] = [events[event], listener];\n    }\n    return this;\n  }\n\n  /**\n   * Remove the event listener(s) of the specified event name.\n   * @param event - Event name\n   * @param fn - Function, If is undefined, delete all corresponding event listeners.\n   */\n  off(event: string, fn?: Function): EventDispatcher {\n    if (!this._evts[event]) return this;\n    if (!fn) {\n      this._clearEvent(event);\n      return this;\n    }\n\n    const listeners = this._evts[event];\n\n    if (listeners.fn && listeners.fn === fn) {\n      this._clearEvent(event);\n    } else {\n      const index = listeners.indexOf(fn);\n      if (index > -1) {\n        const temp = listeners[listeners.length - 1];\n        listeners[index] = temp;\n        listeners.length--;\n        if (listeners.length === 1) {\n          this._evts[event] = listeners[0];\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * @deprecated Use `off` instead.\n   * Remove the event listener(s) of the specified event name.\n   * @param event - Event name\n   * @param fn - Function, If is undefined, delete all corresponding event listeners.\n   */\n  removeEventListener(event: string, fn?: Function): EventDispatcher {\n    return this.off(event, fn);\n  }\n\n  /**\n   * Remove all event listeners.\n   * @param event - Event name, delete all events if not passed\n   */\n  removeAllEventListeners(event?: string): void {\n    if (event) {\n      if (this._evts[event]) this._clearEvent(event);\n    } else {\n      this._evts = Object.create(null);\n      this._evtCount = 0;\n    }\n  }\n\n  /**\n   * @deprecated Use `dispatch` instead.\n   */\n  trigger(e: Event) {\n    this.dispatch(e.type as string, e.data);\n  }\n\n  private _clearEvent(event: string) {\n    if (--this._evtCount === 0) {\n      this._evts = Object.create(null);\n    } else {\n      delete this._evts[event];\n    }\n  }\n}\n","/**\n * @class\n * @private\n */\n/* tslint:disable */\nconst noop = (message?: any, ...optionalParams: any[]) => {};\nconst debug = console.log.bind(console);\nconst info = console.info.bind(console);\nconst warn = console.warn.bind(console);\nconst error = console.error.bind(console);\n\nexport const Logger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop,\n  isEnabled: false,\n\n  /** Turn on log */\n  enable() {\n    this.debug = debug;\n    this.info = info;\n    this.warn = warn;\n    this.error = error;\n    this.isEnabled = true;\n  },\n\n  /** Turn off log */\n  disable() {\n    this.debug = noop;\n    this.info = noop;\n    this.warn = noop;\n    this.error = noop;\n    this.isEnabled = false;\n  }\n};\n","/**\n * Tools for calculating the time per frame.\n */\nexport class Time {\n  private _clock: { now: () => number };\n\n  private _timeScale: number;\n\n  private _deltaTime: number;\n\n  private _startTime: number;\n\n  private _lastTickTime: number;\n  /**\n   * Constructor of the Time.\n   */\n  constructor() {\n    this._clock = performance ? performance : Date;\n\n    this._timeScale = 1.0;\n    this._deltaTime = 0.0001;\n\n    const now = this._clock.now();\n    this._startTime = now;\n    this._lastTickTime = now;\n  }\n\n  reset() {\n    this._lastTickTime = this._clock.now();\n  }\n\n  /**\n   * Current Time\n   * @readonly\n   */\n  get nowTime(): number {\n    return this._clock.now();\n  }\n\n  /**\n   * Time between two ticks\n   * @readonly\n   */\n  get deltaTime(): number {\n    return this._deltaTime;\n  }\n\n  /**\n   * Scaled delta time.\n   */\n  get timeScale(): number {\n    return this._timeScale;\n  }\n  set timeScale(s) {\n    this._timeScale = s;\n  }\n\n  /**\n   * Unscaled delta time.\n   * @readonly\n   */\n  get unscaledDeltaTime(): number {\n    return this._deltaTime / this._timeScale;\n  }\n\n  /**\n   * The elapsed time, after the clock is initialized.\n   */\n  get timeSinceStartup(): number {\n    return this.nowTime - this._startTime;\n  }\n\n  /**\n   * Call every frame, update delta time and other data.\n   */\n  public tick(): void {\n    const now = this.nowTime;\n    this._deltaTime = (now - this._lastTickTime) * this._timeScale;\n    this._lastTickTime = now;\n  }\n}\n","/**\n * The type of resource, mainly used to deal with the recovery of GL objects associated with the resource object.\n */\nexport enum InternalAssetType {\n  /** Belonging to the current scene, GL resources will be automatically released when the scene is switched. */\n  Scene = 1,\n  /** Cache automatically handles, if not used in a period of time, GL resources will be released. */\n  Cache = 2\n}\n\n/**\n * Camera's clear mode enumeration\n * @readonly\n */\nexport enum ClearMode {\n  /** Do not perform any operations to clear the background */\n  DONT_CLEAR = 0,\n  /** Clear the background color and depth buffer */\n  SOLID_COLOR = 1,\n  /** Only clear the depth buffer */\n  DEPTH_ONLY = 2,\n  /** Only clear colors */\n  COLOR_ONLY = 3,\n  /** Only clear the template buffer */\n  STENCIL_ONLY = 4,\n  /** Clear all buffers */\n  ALL_CLEAR = 5\n}\n\n/**\n * Material type enumeration\n * @readonly\n */\nexport enum MaterialType {\n  /** Opaque */\n  OPAQUE = 1000,\n  /** Transparent */\n  TRANSPARENT = 2000\n}\n\n/**\n * Rendering state that can be turned on or off.\n * @readonly\n */\nexport enum RenderState {\n  /** Color blend calculation of fragments */\n  BLEND = 3042,\n  /** Front and back culling */\n  CULL_FACE = 2884,\n  /** Depth test */\n  DEPTH_TEST = 2929,\n  /** Alpha test */\n  ALPHA_TEST = 3008,\n  /** Offset of the depth value of the polygon fragment. */\n  POLYGON_OFFSET_FILL = 32823,\n  /** Calculation of temporary coverage value determined by alpha value. */\n  SAMPLE_ALPHA_TO_COVERAGE = 32926,\n  /** Clipping test, discarding the fragments outside the clipping rectangle. */\n  SCISSOR_TEST = 3089\n}\n\n/**\n * Face enumeration\n * @readonly\n */\nexport enum FrontFace {\n  /** Clockwise */\n  CW = 0x0900,\n  /** Counterclockwise */\n  CCW = 0x0901\n}\n\n/**\n * Face culling enum\n * @readonly\n */\nexport enum CullFace {\n  /** Front */\n  FRONT = 1028,\n  /** Back */\n  BACK = 1029,\n  /** Front and back */\n  FRONT_AND_BACK = 1032\n}\n\n/**\n * Display surface enumeration\n * @readonly\n * */\nexport enum Side {\n  /** Cull the back, only show the front */\n  FRONT,\n  /** Cull the front, only show the back */\n  BACK,\n  /** Cull out before smoothing, without showing any surface */\n  NONE,\n  /** Turn off culling, display the front and back */\n  DOUBLE\n}\n\n/**\n * Comparison function enum\n * @readonly\n */\nexport enum CompFunc {\n  /** Never pass */\n  NEVER = 0x0200,\n  /** Pass when less than the reference value */\n  LESS = 0x0201,\n  /** Pass when equal to reference value */\n  EQUAL = 0x0202,\n  /** Pass when less than or equal to the reference value */\n  LEQUAL = 0x0203,\n  /** Pass when greater than the reference value */\n  GREATER = 0x0204,\n  /** Pass when not equal to reference value */\n  NOTEQUAL = 0x0205,\n  /** Pass when greater than or equal to the reference value */\n  GEQUAL = 0x0206,\n  /** Always pass */\n  ALWAYS = 0x0207\n}\n\n/**\n * Data type enumeration\n */\nexport enum DataType {\n  /** Float */\n  FLOAT = 5126, // gl.FLOAT\n  /** Floating-point two-dimensional vector */\n  FLOAT_VEC2 = 35664, // gl.FLOAT_VEC2\n  /** Floating-point three-dimensional vector */\n  FLOAT_VEC3 = 35665, // gl.FLOAT_VEC3\n  /** Floating-point four-dimensional vector */\n  FLOAT_VEC4 = 35666, // gl.FLOAT_VEC4\n\n  /** Integer */\n  INT = 5124, // gl.INT\n  /** Integer two-dimensional vector */\n  INT_VEC2 = 35667, // gl.INT_VEC2\n  /** Integer three-dimensional vector */\n  INT_VEC3 = 35668, // gl.INT_VEC3\n  /** Integer four-dimensional vector */\n  INT_VEC4 = 35669, // gl.INT_VEC4\n\n  /** Boolean */\n  BOOL = 35670, // gl.BOOL\n  /** Boolean two-dimensional vector */\n  BOOL_VEC2 = 35671, // gl.BOOL_VEC2\n  /** Boolean three-dimensional vector */\n  BOOL_VEC3 = 35672, // gl.BOOL_VEC3\n  /** Boolean four-dimensional vector */\n  BOOL_VEC4 = 35673, // gl.BOOL_VEC4\n\n  /** Second-order matrix */\n  FLOAT_MAT2 = 35674, // gl.FLOAT_MAT2\n  /** Third-order matrix */\n  FLOAT_MAT3 = 35675, // gl.FLOAT_MAT3\n  /** Fourth-order matrix */\n  FLOAT_MAT4 = 35676, // gl.FLOAT_MAT4\n\n  /** Float array */\n  FLOAT_ARRAY = 35677, // gl.FLOAT_ARRAY\n  /** Floating-point two-dimensional vector array */\n  FLOAT_VEC2_ARRAY = 100000,\n  /** Floating-point three-dimensional vector array */\n  FLOAT_VEC3_ARRAY,\n  /** Floating-point four-dimensional vector array */\n  FLOAT_VEC4_ARRAY,\n\n  /** Integer array */\n  INT_ARRAY,\n  /** Integer two-dimensional vector array */\n  INT_VEC2_ARRAY,\n  /** Integer three-dimensional vector array */\n  INT_VEC3_ARRAY,\n  /** Integer four-dimensional vector array */\n  INT_VEC4_ARRAY,\n\n  /** Second-order matrix array */\n  FLOAT_MAT2_ARRAY,\n  /** Third-order matrix array */\n  FLOAT_MAT3_ARRAY,\n  /** Fourth-order matrix array */\n  FLOAT_MAT4_ARRAY,\n\n  /** 2D texture sampler array */\n  SAMPLER_2D_ARRAY,\n  /** Cube map texture sampler array */\n  SAMPLER_CUBE_ARRAY,\n\n  /** 2D sampler */\n  SAMPLER_2D = 35678, // gl.SAMPLER_2D\n  /** Cube map Texture sampler */\n  SAMPLER_CUBE = 35680, // gl.SAMPLER_CUBE\n\n  /** Byte */\n  BYTE = 5120, // gl.BYTE\n  /** Unsigned byte */\n  UNSIGNED_BYTE = 5121, // gl.UNSIGNED_BYTE\n  /** Short */\n  SHORT = 5122, // gl.SHORT\n  /** Unsigned short */\n  UNSIGNED_SHORT = 5123, // gl.UNSIGNED_SHORT\n  /** Unsigned int */\n  UNSIGNED_INT = 5125 // gl.UNSIGNED_INT\n}\n\n/**\n * Uniform Semantic and Oasis3D extension supported by glTF 1.0\n * @readonly\n */\nexport enum UniformSemantic {\n  // -- GLTF\n  /** Local matrix */\n  LOCAL = 1,\n  /** Model matrix */\n  MODEL = 2,\n  /** View matrix */\n  VIEW = 3,\n  /** Project matrix */\n  PROJECTION = 4,\n  /** Model View matrix */\n  MODELVIEW = 5,\n  /** View Projection matrix */\n  VIEWPROJECTION = 21,\n  /** Model View Project matrix */\n  MODELVIEWPROJECTION = 6,\n  /** Model matrix's inverse matrix */\n  MODELINVERSE = 7,\n  /** View matrix's inverse matrix */\n  VIEWINVERSE = 8,\n  /** Projection matrix's inverse matrix */\n  PROJECTIONINVERSE = 9,\n  /** Model View matrix's inverse matrix */\n  MODELVIEWINVERSE = 10,\n  /** Model View Project matrix's inverse matrix */\n  MODELVIEWPROJECTIONINVERSE = 11,\n  /** The inverse transpose matrix of Model matrix, which can be used to transform Normal */\n  MODELINVERSETRANSPOSE = 12,\n  /** Model View matrix's inverse transpose matrix */\n  MODELVIEWINVERSETRANSPOSE = 13,\n  /** Viewport parameter */\n  VIEWPORT = 14,\n  /** Joint matrix array */\n  JOINTMATRIX = 15,\n  /** MorphTarget weights */\n  MORPHWEIGHTS = 16,\n\n  // --\n  /** Current camera position */\n  EYEPOS = 17,\n  /** How long the current program is running */\n  TIME = 18,\n  /** Joint matrix texture */\n  JOINTTEXTURE = 19,\n  /** Joint count */\n  JOINTCOUNT = 20\n}\n\n/**\n * Color blending method enumeration\n */\nexport enum BlendFunc {\n  /** Multiply all channels by 0 */\n  ZERO = 0,\n  /** Multiply all channels by 1 */\n  ONE = 1,\n  /** Multiply all channels by source color */\n  SRC_COLOR = 768,\n  /** Multiply all channels by 1 minus source color */\n  ONE_MINUS_SRC_COLOR = 769,\n  /** Multiply all channels by source alpha */\n  SRC_ALPHA = 770,\n  /** Multiply all channels by 1 minus source alpha */\n  ONE_MINUS_SRC_ALPHA = 771,\n  /** Multiply all channels by destination alpha */\n  DST_ALPHA = 772,\n  /** Multiply all channels by 1 minus destination alpha */\n  ONE_MINUS_DST_ALPHA = 773,\n  /** Multiply all channels by destination color */\n  DST_COLOR = 774,\n  /** Multiply all channels by 1 minus destination color */\n  ONE_MINUS_DST_COLOR = 775,\n  /**\n   * Multiplies the RGB colors by the smaller of either the source alpha value or the value of 1 minus the destination alpha value. The alpha value is multiplied by 1.\n   */\n  SRC_ALPHA_SATURATE = 776,\n  /**\n   * Multiply all channels by a color constant.\n   */\n  enumANT_COLOR = 32769,\n  /** Multiply all channels by 1 minus the color constant. */\n  ONE_MINUS_enumANT_COLOR = 32770,\n  /**\n   * Multiply all channels by an alpha constant.\n   */\n  enumANT_ALPHA = 32771,\n  /**\n   * Multiply all channels by one minus the Alpha constant.\n   */\n  ONE_MINUS_enumANT_ALPHA = 32772\n}\n\n/**\n * Probe rendering rate.\n * */\nexport enum RefreshRate {\n  /** Only render once */\n  ONCE = 1,\n  /** Render every frame. */\n  EVERYFRAME = 2\n}\n\n/**\n * GL Capabilities\n * Some capabilities can be smoothed out by extension, and some capabilities must use WebGL 2.0.\n * */\nexport enum GLCapabilityType {\n  standardDerivatives = \"OES_standard_derivatives\",\n  shaderTextureLod = \"EXT_shader_texture_lod\",\n  elementIndexUint = \"OES_element_index_uint\",\n  depthTexture = \"WEBGL_depth_texture\",\n  drawBuffers = \"WEBGL_draw_buffers\",\n  vertexArrayObject = \"OES_vertex_array_object\",\n  instancedArrays = \"ANGLE_instanced_arrays\",\n  multipleSample = \"multipleSampleOnlySupportedInWebGL2\",\n  textureFloat = \"OES_texture_float\",\n  textureFloatLinear = \"OES_texture_float_linear\",\n  textureHalfFloat = \"OES_texture_half_float\",\n  textureHalfFloatLinear = \"OES_texture_half_float_linear\",\n  WEBGL_colorBufferFloat = \"WEBGL_color_buffer_float\",\n  colorBufferFloat = \"EXT_color_buffer_float\",\n  colorBufferHalfFloat = \"EXT_color_buffer_half_float\",\n  textureFilterAnisotropic = \"EXT_texture_filter_anisotropic\",\n\n  astc = \"WEBGL_compressed_texture_astc\",\n  astc_webkit = \"WEBKIT_WEBGL_compressed_texture_astc\",\n  etc = \"WEBGL_compressed_texture_etc\",\n  etc_webkit = \"WEBKIT_WEBGL_compressed_texture_etc\",\n  etc1 = \"WEBGL_compressed_texture_etc1\",\n  etc1_webkit = \"WEBKIT_WEBGL_compressed_texture_etc1\",\n  pvrtc = \"WEBGL_compressed_texture_pvrtc\",\n  pvrtc_webkit = \"WEBKIT_WEBGL_compressed_texture_pvrtc\",\n  s3tc = \"WEBGL_compressed_texture_s3tc\",\n  s3tc_webkit = \"WEBKIT_WEBGL_compressed_texture_s3tc\"\n  // atc = \"WEBGL_compressed_texture_atc\",\n  // s3tc_srgb = \"WEBGL_compressed_texture_s3tc_srgb\"\n}\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray\n  | Float32Array\n  | Float64Array;\n","/**\n * High-performance unordered array, delete uses exchange method to improve performance, internal capacity only increases.\n */\nexport class DisorderedArray<T> {\n  _elements: T[];\n\n  length: number = 0;\n\n  constructor(count: number = 0) {\n    this._elements = new Array<T>(count);\n  }\n\n  add(element: T): void {\n    if (this.length === this._elements.length) this._elements.push(element);\n    else this._elements[this.length] = element;\n    this.length++;\n  }\n\n  delete(element: T): void {\n    //TODO: It can be optimized for custom binary search and other algorithms, currently this._elements>=this.length wastes performance.\n    const index = this._elements.indexOf(element);\n    this.deleteByIndex(index);\n  }\n  /**\n   *\n   * @param index\n   * @returns The replaced item is used to reset its index.\n   */\n  deleteByIndex(index: number): T {\n    var elements: T[] = this._elements;\n    let end: T = null;\n    const lastIndex = this.length - 1;\n    if (index !== lastIndex) {\n      end = elements[lastIndex];\n      elements[index] = end;\n    }\n    this.length--;\n    return end;\n  }\n\n  garbageCollection(): void {\n    this._elements.length = this.length;\n  }\n}\n","import { ShaderMacro } from \"./ShaderMacro\";\n\n/**\n * Shader macro collection.\n * @internal\n */\nexport class ShaderMacroCollection {\n  /**\n   * Union of two macro collection.\n   * @param left - input macro collection\n   * @param right - input macro collection\n   * @param out - union output macro collection\n   */\n  static unionCollection(left: ShaderMacroCollection, right: ShaderMacroCollection, out: ShaderMacroCollection): void {\n    const outMask = out._mask;\n    let minSize: number, maxSize: number;\n    let minMask: number[], maxMask: number[];\n    if (left._length < right._length) {\n      minSize = left._length;\n      maxSize = right._length;\n      minMask = left._mask;\n      maxMask = right._mask;\n    } else {\n      minSize = right._length;\n      maxSize = left._length;\n      minMask = right._mask;\n      maxMask = left._mask;\n    }\n\n    let i = 0;\n    outMask.length < maxSize && (outMask.length = maxSize);\n    for (; i < minSize; i++) {\n      outMask[i] = minMask[i] | maxMask[i];\n    }\n    for (; i < maxSize; i++) {\n      outMask[i] = maxMask[i];\n    }\n    out._length = maxSize;\n  }\n\n  /** @internal */\n  _mask: number[] = [];\n  /** @internal */\n  _length: number = 0;\n\n  /**\n   * Enable one macro in this macro collection.\n   * @param macro - ShaderMacro\n   */\n  enable(macro: ShaderMacro): void {\n    const index = macro._index;\n    const size = index + 1;\n    const mask = this._mask;\n    let maskStart = this._length; // must from this._length because this._length maybe less than mask.length and have dirty data should clear.\n    if (maskStart < size) {\n      mask.length < size && (mask.length = size); // mask.length maybe small than size,maybe not.\n      for (; maskStart < index; maskStart++) {\n        mask[maskStart] = 0;\n      }\n      mask[index] = macro._value;\n      this._length = size;\n    } else {\n      mask[index] |= macro._value;\n    }\n  }\n\n  /**\n   * Disable one macro in this macro collection.\n   * @param macro - ShaderMacro\n   */\n  disable(macro: ShaderMacro): void {\n    const index = macro._index;\n    const mask = this._mask;\n    const endIndex = this._length - 1;\n    if (index > endIndex) {\n      return;\n    }\n    const newValue = mask[index] & ~macro._value;\n    if (index == endIndex && newValue === 0) {\n      this._length--;\n    } else {\n      mask[index] = newValue;\n    }\n  }\n\n  /**\n   * Union of this and other macro collection.\n   * @param macroCollection - macro collection\n   */\n  unionCollection(macroCollection: ShaderMacroCollection): void {\n    const addMask = macroCollection._mask;\n    const addSize = macroCollection._length;\n    const mask = this._mask;\n    const maskSize = this._length;\n    if (maskSize < addSize) {\n      mask.length < addSize && (mask.length = addSize);\n      let i = 0;\n      for (; i < maskSize; i++) {\n        mask[i] |= addMask[i];\n      }\n      for (; i < addSize; i++) {\n        mask[i] = addMask[i];\n      }\n      this._length = addSize;\n    } else {\n      for (let i = 0; i < addSize; i++) {\n        mask[i] |= addMask[i];\n      }\n    }\n  }\n\n  /**\n   * Complementarity of this and other macro collection.\n   * @param macroCollection - macro collection\n   */\n  complementaryCollection(macroCollection: ShaderMacroCollection): void {\n    const removeMask = macroCollection._mask;\n    const mask = this._mask;\n    let endIndex = this._length - 1;\n    let i = Math.min(macroCollection._length - 1, endIndex);\n    for (; i >= 0; i--) {\n      const newValue = mask[i] & ~removeMask[i];\n      if (i == endIndex && newValue === 0) {\n        endIndex--;\n        this._length--;\n      } else {\n        mask[i] = newValue;\n      }\n    }\n  }\n\n  /**\n   * Intersection of this and other macro collection.\n   * @param macroCollection - macro collection\n   */\n  intersectionCollection(macroCollection: ShaderMacroCollection): void {\n    const unionMask = macroCollection._mask;\n    const mask = this._mask;\n    for (let i = this._length - 1; i >= 0; i--) {\n      const value = mask[i] & unionMask[i];\n      if (value == 0 && i == this._length - 1) {\n        this._length--;\n      } else {\n        mask[i] = value;\n      }\n    }\n  }\n\n  /**\n   * Whether macro is enabled in this macro collection.\n   * @param macro - ShaderMacro\n   */\n  isEnable(macro: ShaderMacro): boolean {\n    const index = macro._index;\n    if (index >= this._length) {\n      return false;\n    }\n    return (this._mask[index] & macro._value) !== 0;\n  }\n\n  /**\n   * Clear this macro collection.\n   */\n  clear(): void {\n    this._length = 0;\n  }\n}\n","import { Camera } from \"./Camera\";\nimport { DisorderedArray } from \"./DisorderedArray\";\nimport { Component } from \"./Component\";\nimport { Renderer } from \"./Renderer\";\nimport { Script } from \"./Script\";\nimport { ShaderMacroCollection } from \"./shader/ShaderMacroCollection\";\nimport { RenderContext } from \"./RenderPipeline/RenderContext\";\n\n/**\n * The manager of the components.\n */\nexport class ComponentsManager {\n  // Script\n  private _onStartScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _onUpdateScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _onLateUpdateScripts: DisorderedArray<Script> = new DisorderedArray();\n  private _destoryComponents: Script[] = [];\n\n  // Animation\n  private _onUpdateAnimations: DisorderedArray<Component> = new DisorderedArray();\n\n  // Render\n  private _renderers: DisorderedArray<Renderer> = new DisorderedArray();\n  private _onUpdateRenderers: DisorderedArray<Renderer> = new DisorderedArray();\n\n  // Delay dispose active/inActive Pool\n  private _componentsContainerPool: Component[][] = [];\n\n  addRenderer(renderer: Renderer) {\n    renderer._rendererIndex = this._renderers.length;\n    this._renderers.add(renderer);\n  }\n\n  removeRenderer(renderer: Renderer) {\n    const replaced = this._renderers.deleteByIndex(renderer._rendererIndex);\n    replaced && (replaced._rendererIndex = renderer._rendererIndex);\n    renderer._rendererIndex = -1;\n  }\n\n  addOnStartScript(script: Script) {\n    script._onStartIndex = this._onStartScripts.length;\n    this._onStartScripts.add(script);\n  }\n\n  removeOnStartScript(script: Script): void {\n    const replaced = this._onStartScripts.deleteByIndex(script._onStartIndex);\n    replaced && (replaced._onStartIndex = script._onStartIndex);\n    script._onStartIndex = -1;\n  }\n\n  addOnUpdateScript(script: Script) {\n    script._onUpdateIndex = this._onUpdateScripts.length;\n    this._onUpdateScripts.add(script);\n  }\n\n  removeOnUpdateScript(script: Script): void {\n    const replaced = this._onUpdateScripts.deleteByIndex(script._onUpdateIndex);\n    replaced && (replaced._onUpdateIndex = script._onUpdateIndex);\n    script._onUpdateIndex = -1;\n  }\n\n  addOnLateUpdateScript(script: Script): void {\n    script._onLateUpdateIndex = this._onLateUpdateScripts.length;\n    this._onLateUpdateScripts.add(script);\n  }\n\n  removeOnLateUpdateScript(script: Script): void {\n    const replaced = this._onLateUpdateScripts.deleteByIndex(script._onLateUpdateIndex);\n    replaced && (replaced._onLateUpdateIndex = script._onLateUpdateIndex);\n    script._onLateUpdateIndex = -1;\n  }\n\n  addOnUpdateAnimations(animation: Component): void {\n    //@ts-ignore\n    animation._onUpdateIndex = this._onUpdateAnimations.length;\n    this._onUpdateAnimations.add(animation);\n  }\n\n  removeOnUpdateAnimations(animation: Component): void {\n    //@ts-ignore\n    const replaced = this._onUpdateAnimations.deleteByIndex(animation._onUpdateIndex);\n    //@ts-ignore\n    replaced && (replaced._onUpdateIndex = animation._onUpdateIndex);\n    //@ts-ignore\n    animation._onUpdateIndex = -1;\n  }\n\n  addOnUpdateRenderers(renderer: Renderer): void {\n    renderer._onUpdateIndex = this._onUpdateRenderers.length;\n    this._onUpdateRenderers.add(renderer);\n  }\n\n  removeOnUpdateRenderers(renderer: Renderer): void {\n    const replaced = this._onUpdateRenderers.deleteByIndex(renderer._onUpdateIndex);\n    replaced && (replaced._onUpdateIndex = renderer._onUpdateIndex);\n    renderer._onUpdateIndex = -1;\n  }\n\n  addDestoryComponent(component): void {\n    this._destoryComponents.push(component);\n  }\n\n  callScriptOnStart(): void {\n    const onStartScripts = this._onStartScripts;\n    if (onStartScripts.length > 0) {\n      const elements = onStartScripts._elements;\n      // The 'onStartScripts.length' maybe add if you add some Script with addComponent() in some Script's onStart()\n      for (let i = 0; i < onStartScripts.length; i++) {\n        const script = elements[i];\n        script._started = true;\n        script._onStartIndex = -1;\n        script.onStart();\n      }\n      onStartScripts.length = 0;\n    }\n  }\n\n  callScriptOnUpdate(deltaTime): void {\n    const elements = this._onUpdateScripts._elements;\n    for (let i = this._onUpdateScripts.length - 1; i >= 0; --i) {\n      const element = elements[i];\n      if (element._started) {\n        element.onUpdate(deltaTime);\n      }\n    }\n  }\n\n  callScriptOnLateUpdate(deltaTime): void {\n    const elements = this._onLateUpdateScripts._elements;\n    for (let i = this._onLateUpdateScripts.length - 1; i >= 0; --i) {\n      const element = elements[i];\n      if (element._started) {\n        element.onLateUpdate(deltaTime);\n      }\n    }\n  }\n\n  callAnimationUpdate(deltaTime): void {\n    const elements = this._onUpdateAnimations._elements;\n    for (let i = this._onUpdateAnimations.length - 1; i >= 0; --i) {\n      //@ts-ignore\n      elements[i].update(deltaTime);\n    }\n  }\n\n  callRendererOnUpdate(deltaTime: number): void {\n    const elements = this._onUpdateRenderers._elements;\n    for (let i = this._onUpdateRenderers.length - 1; i >= 0; --i) {\n      elements[i].update(deltaTime);\n    }\n  }\n\n  callRender(context: RenderContext): void {\n    const camera = context._camera;\n    const elements = this._renderers._elements;\n    for (let i = this._renderers.length - 1; i >= 0; --i) {\n      const element = elements[i];\n\n      // filter by camera culling mask.\n      if (!(camera.cullingMask & element._entity.layer)) {\n        continue;\n      }\n\n      // filter by camera frustm.\n      if (camera.enableFrustumCulling) {\n        element.isCulled = !camera._frustum.intersectsBox(element.bounds);\n        if (element.isCulled) {\n          continue;\n        }\n      }\n\n      element._updateShaderData(context);\n\n      // union camera global macro and renderer macro.\n      ShaderMacroCollection.unionCollection(\n        camera._globalShaderMacro,\n        element.shaderData._macroCollection,\n        element._globalShaderMacro\n      );\n\n      element._render(camera);\n    }\n  }\n\n  callComponentDestory(): void {\n    const destoryComponents = this._destoryComponents;\n    const length = destoryComponents.length;\n    if (length > 0) {\n      for (let i = length - 1; i >= 0; --i) {\n        destoryComponents[i].onDestroy();\n      }\n      destoryComponents.length = 0;\n    }\n  }\n\n  callCameraOnBeginRender(camera: Camera) {\n    const camComps = camera.entity._components;\n    for (let i = camComps.length - 1; i >= 0; --i) {\n      const camComp = camComps[i];\n      (camComp as any).onBeginRender && (camComp as any).onBeginRender(camera);\n    }\n  }\n\n  callCameraOnEndRender(camera: Camera) {\n    const camComps = camera.entity._components;\n    for (let i = camComps.length - 1; i >= 0; --i) {\n      const camComp = camComps[i];\n      (camComp as any).onBeginRender && (camComp as any).onEndRender(camera);\n    }\n  }\n\n  getActiveChangedTempList(): Component[] {\n    return this._componentsContainerPool.length ? this._componentsContainerPool.pop() : [];\n  }\n\n  putActiveChangedTempList(componentContainer: Component[]): void {\n    componentContainer.length = 0;\n    this._componentsContainerPool.push(componentContainer);\n  }\n}\n","import { Component } from \"../Component\";\nimport { CloneManager } from \"./CloneManager\";\nimport { CloneMode } from \"./enums/CloneMode\";\n\nexport class ComponentCloner {\n  /**\n   * Clone component.\n   * @param source - Clone source\n   * @param target - Clone target\n   */\n  static cloneComponent(source: Component, target: Component): void {\n    const cloneModes = CloneManager.getCloneMode(source.constructor);\n    const keys = Object.keys(source);\n    for (let i = 0, n = keys.length; i < n; i++) {\n      const k = keys[i];\n      const cloneMode = cloneModes[k];\n      switch (cloneMode) {\n        case undefined:\n        case CloneMode.Assignment:\n          target[k] = source[k];\n          break;\n        case CloneMode.Shallow:\n          const sourcePropS: Object = source[k];\n          if (sourcePropS instanceof Object) {\n            let tarProp = <Object>target[k];\n            tarProp == null && (tarProp = target[k] = sourcePropS.constructor());\n            Object.assign(tarProp, sourcePropS);\n          } else {\n            // Null or undefine and primitive type.\n            target[k] = sourcePropS;\n          }\n          break;\n        case CloneMode.Deep:\n          const sourcePropD: Object = source[k];\n          if (sourcePropD instanceof Object) {\n            let tarProp = <Object>target[k];\n            tarProp == null && (tarProp = target[k] = sourcePropD.constructor());\n            CloneManager.deepCloneObject(sourcePropD, tarProp);\n          } else {\n            // Null or undefine and primitive type.\n            target[k] = sourcePropD;\n          }\n          break;\n      }\n    }\n  }\n}\n","import { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\n\ntype ComponentConstructor = new (entity: Entity) => Component;\n\n/**\n * Used for component dependency registration.\n */\nexport class ComponentsDependencies {\n  /**\n   * @internal\n   */\n  private static _dependenciesMap = new Map<ComponentConstructor, ComponentConstructor[]>();\n  private static _invDependenciesMap = new Map<ComponentConstructor, ComponentConstructor[]>();\n\n  /**\n   * Register component dependencies.\n   * @param currentComponent - The component you want to be register.\n   * @param dependentComponent - The component's dependencies.\n   */\n  static register(currentComponent: ComponentConstructor, dependentComponent: ComponentConstructor) {\n    this._addDependency(currentComponent, dependentComponent, this._dependenciesMap);\n    this._addDependency(dependentComponent, currentComponent, this._invDependenciesMap);\n  }\n\n  /**\n   * @internal\n   */\n  static _addCheck(entity: Entity, type: ComponentConstructor) {\n    // Check if there are dependent components.\n    const dependencies = ComponentsDependencies._dependenciesMap.get(type);\n    if (dependencies) {\n      for (let i = 0, len = dependencies.length; i < len; i++) {\n        if (!entity.getComponent(dependencies[i])) {\n          throw `you should add ${dependencies[i]} before adding ${type}`;\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _removeCheck(entity: Entity, type: ComponentConstructor) {\n    const invDenpendencies = ComponentsDependencies._invDependenciesMap.get(type);\n    if (invDenpendencies) {\n      for (let i = 0, len = invDenpendencies.length; i < len; i++) {\n        if (entity.getComponent(invDenpendencies[i])) {\n          throw `you should remove ${invDenpendencies[i]} before adding ${type}`;\n        }\n      }\n    }\n  }\n\n  private static _addDependency(\n    currentComponent: ComponentConstructor,\n    dependentComponent: ComponentConstructor,\n    map: Map<any, any>\n  ) {\n    let components = map.get(currentComponent);\n    if (!components) {\n      components = [];\n      map.set(currentComponent, components);\n    }\n    if (components.indexOf(dependentComponent) === -1) {\n      components.push(dependentComponent);\n    }\n  }\n\n  private constructor() {}\n}\n\nexport function dependencies(...abilityClass: ComponentConstructor[]) {\n  return function <T extends ComponentConstructor>(target: T): void {\n    abilityClass.forEach((ability) => ComponentsDependencies.register(target, ability));\n  };\n}\n","/**\n * Layer, used for bit operations.\n */\nexport enum Layer {\n  Layer0 = 0x1,\n  Layer1 = 0x2,\n  Layer2 = 0x4,\n  Layer3 = 0x8,\n  Layer4 = 0x10,\n  Layer5 = 0x20,\n  Layer6 = 0x40,\n  Layer7 = 0x80,\n  Layer8 = 0x100,\n  Layer9 = 0x200,\n  Layer10 = 0x400,\n  Layer11 = 0x800,\n  Layer12 = 0x1000,\n  Layer13 = 0x2000,\n  Layer14 = 0x4000,\n  Layer15 = 0x8000,\n  Layer16 = 0x10000,\n  Layer17 = 0x20000,\n  Layer18 = 0x40000,\n  Layer19 = 0x80000,\n  Layer20 = 0x100000,\n  Layer21 = 0x200000,\n  Layer22 = 0x400000,\n  Layer23 = 0x800000,\n  Layer24 = 0x1000000,\n  Layer25 = 0x2000000,\n  Layer26 = 0x4000000,\n  Layer27 = 0x8000000,\n  Layer28 = 0x10000000,\n  Layer29 = 0x20000000,\n  Layer30 = 0x40000000,\n  Layer31 = 0x80000000,\n  Everything = 0xffffffff,\n  Nothing = 0x0\n}\n","import { EngineObject } from \"./base\";\nimport { assignmentClone, ignoreClone } from \"./clone/CloneManager\";\nimport { Engine } from \"./Engine\";\nimport { Entity } from \"./Entity\";\nimport { Scene } from \"./Scene\";\n\n/**\n * The base class of the components.\n */\nexport abstract class Component extends EngineObject {\n  /** @internal */\n  @ignoreClone\n  _entity: Entity;\n  /** @internal */\n  @ignoreClone\n  _destroyed: boolean = false;\n\n  @assignmentClone\n  private _enabled: boolean = true;\n  @ignoreClone\n  private _awaked: boolean = false;\n\n  /**\n   * Enabled getter, 'enabled' indicates whether the component is enabled.\n   */\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  /**\n   * Enabled setter, indicates whether the component is enabled.\n   */\n  set enabled(value: boolean) {\n    if (value === this._enabled) {\n      return;\n    }\n    this._enabled = value;\n    if (value) {\n      this._entity.isActiveInHierarchy && this._onEnable();\n    } else {\n      this._entity.isActiveInHierarchy && this._onDisable();\n    }\n  }\n\n  /**\n   * Destroyed getter, 'destroyed' indicates whether the component is destroyed.\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  /**\n   * The entitiy which the component belongs to.\n   */\n  get entity(): Entity {\n    return this._entity;\n  }\n\n  /**\n   * The scene which the component's entity belongs to.\n   */\n  get scene(): Scene {\n    return this._entity.scene;\n  }\n\n  /**\n   * The engine which the component's entity belongs to.\n   */\n  get engine(): Engine {\n    return this._entity.engine;\n  }\n\n  constructor(entity: Entity) {\n    super(entity.engine);\n    this._entity = entity;\n  }\n\n  /**\n   * Destory this instance.\n   */\n  destroy(): void {\n    if (this._destroyed) {\n      return;\n    }\n    this._entity._removeComponent(this);\n    if (this._entity.isActiveInHierarchy) {\n      this._enabled && this._onDisable();\n      this._onInActive();\n    }\n    this._destroyed = true;\n    this._onDestroy();\n  }\n\n  /**\n   * @internal\n   */\n  _onAwake(): void {}\n\n  /**\n   * @internal\n   */\n  _onEnable(): void {}\n\n  /**\n   * @internal\n   */\n  _onDisable(): void {}\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {}\n\n  /**\n   * @internal\n   */\n  _onActive(): void {}\n\n  /**\n   * @internal\n   */\n  _onInActive(): void {}\n\n  /**\n   * @internal\n   */\n  _setActive(value: boolean): void {\n    if (value) {\n      if (!this._awaked) {\n        this._awaked = true;\n        this._onAwake();\n      }\n      // You can do isActive = false in onAwake function.\n      if (this._entity._isActiveInHierarchy) {\n        this._onActive();\n        this._enabled && this._onEnable();\n      }\n    } else {\n      this._enabled && this._onDisable();\n      this._onInActive();\n    }\n  }\n\n  //---------------------------------------------Deprecated-----------------------------------------------------------------\n\n  private _renderPriority: number = 0;\n\n  /**\n   * @deprecated\n   * Rendering priority.\n   */\n  get renderPriority(): number {\n    return this._renderPriority;\n  }\n  set renderPriority(val: number) {\n    this._renderPriority = val;\n  }\n}\n","import { removeFromArray } from \"./base/Util\";\n\n/**\n * Used to update tags.\n */\nexport class UpdateFlag {\n  /** Flag. */\n  flag = true;\n\n  constructor(private _flags: UpdateFlag[] = []) {}\n\n  /**\n   * Destroy.\n   */\n  destroy(): void {\n    const flags = this._flags;\n    removeFromArray(flags, this);\n    this._flags = null;\n  }\n}\n","import { MathUtil, Matrix, Matrix3x3, Quaternion, Vector3 } from \"@oasis-engine/math\";\nimport { assignmentClone, deepClone, ignoreClone } from \"./clone/CloneManager\";\nimport { Component } from \"./Component\";\nimport { UpdateFlag } from \"./UpdateFlag\";\n\n/**\n * Used to implement transformation related functions.\n */\nexport class Transform extends Component {\n  private static _tempQuat0: Quaternion = new Quaternion();\n  private static _tempVec3: Vector3 = new Vector3();\n  private static _tempMat30: Matrix3x3 = new Matrix3x3();\n  private static _tempMat31: Matrix3x3 = new Matrix3x3();\n  private static _tempMat32: Matrix3x3 = new Matrix3x3();\n  private static _tempMat40: Matrix = new Matrix();\n  private static _tempMat41: Matrix = new Matrix();\n  private static _tempMat42: Matrix = new Matrix();\n  private static _tempMat43: Matrix = new Matrix();\n\n  private static _LOCAL_EULER_FLAG: number = 0x1;\n  private static _LOCAL_QUAT_FLAG: number = 0x2;\n  private static _WORLD_POSITION_FLAG: number = 0x4;\n  private static _WORLD_EULER_FLAG: number = 0x8;\n  private static _WORLD_QUAT_FLAG: number = 0x10;\n  private static _WORLD_SCALE_FLAG: number = 0x20;\n  private static _LOCAL_MATRIX_FLAG: number = 0x40;\n  private static _WORLD_MATRIX_FLAG: number = 0x80;\n\n  /** _WORLD_MATRIX_FLAG | _WORLD_POSITION_FLAG */\n  private static _WM_WP_FLAGS: number = 0x84;\n  /** _WORLD_MATRIX_FLAG | _WORLD_EULER_FLAG | _WORLD_QUAT_FLAG */\n  private static _WM_WE_WQ_FLAGS: number = 0x98;\n  /** _WORLD_MATRIX_FLAG | _WORLD_POSITION_FLAG | _WORLD_EULER_FLAG | _WORLD_QUAT_FLAG */\n  private static _WM_WP_WE_WQ_FLAGS: number = 0x9c;\n  /** Transform._WORLD_MATRIX_FLAG | Transform._WORLD_SCALE_FLAG */\n  private static _WM_WS_FLAGS: number = 0xa0;\n  /** Transform._WORLD_MATRIX_FLAG | Transform._WORLD_POSITION_FLAG | Transform._WORLD_SCALE_FLAG */\n  private static _WM_WP_WS_FLAGS: number = 0xa4;\n  /** Transform._WORLD_MATRIX_FLAG | Transform._WORLD_POSITION_FLAG | Transform._WORLD_EULER_FLAG | Transform._WORLD_QUAT_FLAG | Transform._WORLD_SCALE_FLAG */\n  private static _WM_WP_WE_WQ_WS_FLAGS: number = 0xbc;\n\n  @deepClone\n  private _position: Vector3 = new Vector3();\n  @deepClone\n  private _rotation: Vector3 = new Vector3();\n  @deepClone\n  private _rotationQuaternion: Quaternion = new Quaternion();\n  @deepClone\n  private _scale: Vector3 = new Vector3(1, 1, 1);\n  @deepClone\n  private _worldPosition: Vector3 = new Vector3();\n  @deepClone\n  private _worldRotation: Vector3 = new Vector3();\n  @deepClone\n  private _worldRotationQuaternion: Quaternion = new Quaternion();\n  @deepClone\n  private _lossyWorldScale: Vector3 = new Vector3(1, 1, 1);\n  @deepClone\n  private _localMatrix: Matrix = new Matrix();\n  @deepClone\n  private _worldMatrix: Matrix = new Matrix();\n  @ignoreClone\n  private _changeFlags: UpdateFlag[] = [];\n  @ignoreClone\n  private _isParentDirty: boolean = true;\n  @ignoreClone\n  private _parentTransformCache: Transform = null;\n\n  private _dirtyFlag: number = Transform._WM_WP_WE_WQ_WS_FLAGS;\n\n  /**\n   * Local position.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get position(): Vector3 {\n    return this._position;\n  }\n\n  set position(value: Vector3) {\n    if (this._position !== value) {\n      value.cloneTo(this._position);\n    }\n    this._setDirtyFlagTrue(Transform._LOCAL_MATRIX_FLAG);\n    this._updateWorldPositionFlag();\n  }\n\n  /**\n   * World position.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get worldPosition(): Vector3 {\n    if (this._isContainDirtyFlag(Transform._WORLD_POSITION_FLAG)) {\n      if (this._getParentTransform()) {\n        this.worldMatrix.getTranslation(this._worldPosition);\n      } else {\n        this._position.cloneTo(this._worldPosition);\n      }\n      this._setDirtyFlagFalse(Transform._WORLD_POSITION_FLAG);\n    }\n    return this._worldPosition;\n  }\n\n  set worldPosition(value: Vector3) {\n    if (this._worldPosition !== value) {\n      value.cloneTo(this._worldPosition);\n    }\n    const parent = this._getParentTransform();\n    if (parent) {\n      Matrix.invert(parent.worldMatrix, Transform._tempMat41);\n      Vector3.transformCoordinate(value, Transform._tempMat41, this._position);\n    } else {\n      value.cloneTo(this._position);\n    }\n    this.position = this._position;\n    this._setDirtyFlagFalse(Transform._WORLD_POSITION_FLAG);\n  }\n\n  /**\n   * Local rotation, defining the rotation value in degrees, Yaw/Pitch/Roll sequence.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get rotation(): Vector3 {\n    if (this._isContainDirtyFlag(Transform._LOCAL_EULER_FLAG)) {\n      this._rotationQuaternion.toEuler(this._rotation);\n      this._rotation.scale(MathUtil.radToDegreeFactor); // radians to degrees\n\n      this._setDirtyFlagFalse(Transform._LOCAL_EULER_FLAG);\n    }\n    return this._rotation;\n  }\n\n  set rotation(value: Vector3) {\n    if (this._rotation !== value) {\n      value.cloneTo(this._rotation);\n    }\n    this._setDirtyFlagTrue(Transform._LOCAL_MATRIX_FLAG | Transform._LOCAL_QUAT_FLAG);\n    this._setDirtyFlagFalse(Transform._LOCAL_EULER_FLAG);\n    this._updateWorldRotationFlag();\n  }\n\n  /**\n   * World rotation, defining the rotation value in degrees, Yaw/Pitch/Roll sequence.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get worldRotation(): Vector3 {\n    if (this._isContainDirtyFlag(Transform._WORLD_EULER_FLAG)) {\n      this.worldRotationQuaternion.toEuler(this._worldRotation);\n      this._worldRotation.scale(MathUtil.radToDegreeFactor); // Radian to angle\n      this._setDirtyFlagFalse(Transform._WORLD_EULER_FLAG);\n    }\n    return this._worldRotation;\n  }\n\n  set worldRotation(value: Vector3) {\n    if (this._worldRotation !== value) {\n      value.cloneTo(this._worldRotation);\n    }\n    Quaternion.rotationEuler(\n      MathUtil.degreeToRadian(value.x),\n      MathUtil.degreeToRadian(value.y),\n      MathUtil.degreeToRadian(value.z),\n      this._worldRotationQuaternion\n    );\n    this.worldRotationQuaternion = this._worldRotationQuaternion;\n    this._setDirtyFlagFalse(Transform._WORLD_EULER_FLAG);\n  }\n\n  /**\n   * Local rotaion, defining the rotation by using a unit quaternion.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get rotationQuaternion(): Quaternion {\n    if (this._isContainDirtyFlag(Transform._LOCAL_QUAT_FLAG)) {\n      Quaternion.rotationEuler(\n        MathUtil.degreeToRadian(this._rotation.x),\n        MathUtil.degreeToRadian(this._rotation.y),\n        MathUtil.degreeToRadian(this._rotation.z),\n        this._rotationQuaternion\n      );\n      this._setDirtyFlagFalse(Transform._LOCAL_QUAT_FLAG);\n    }\n    return this._rotationQuaternion;\n  }\n\n  set rotationQuaternion(value: Quaternion) {\n    if (this._rotationQuaternion !== value) {\n      value.cloneTo(this._rotationQuaternion);\n    }\n    this._setDirtyFlagTrue(Transform._LOCAL_MATRIX_FLAG | Transform._LOCAL_EULER_FLAG);\n    this._setDirtyFlagFalse(Transform._LOCAL_QUAT_FLAG);\n    this._updateWorldRotationFlag();\n  }\n\n  /**\n   * World rotaion, defining the rotation by using a unit quaternion.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get worldRotationQuaternion(): Quaternion {\n    if (this._isContainDirtyFlag(Transform._WORLD_QUAT_FLAG)) {\n      const parent = this._getParentTransform();\n      if (parent != null) {\n        Quaternion.multiply(parent.worldRotationQuaternion, this.rotationQuaternion, this._worldRotationQuaternion);\n      } else {\n        this.rotationQuaternion.cloneTo(this._worldRotationQuaternion);\n      }\n      this._setDirtyFlagFalse(Transform._WORLD_QUAT_FLAG);\n    }\n    return this._worldRotationQuaternion;\n  }\n\n  set worldRotationQuaternion(value: Quaternion) {\n    if (this._worldRotationQuaternion !== value) {\n      value.cloneTo(this._worldRotationQuaternion);\n    }\n    const parent = this._getParentTransform();\n    if (parent) {\n      Quaternion.invert(parent.worldRotationQuaternion, Transform._tempQuat0);\n      Quaternion.multiply(value, Transform._tempQuat0, this._rotationQuaternion);\n    } else {\n      value.cloneTo(this._rotationQuaternion);\n    }\n    this.rotationQuaternion = this._rotationQuaternion;\n    this._setDirtyFlagFalse(Transform._WORLD_QUAT_FLAG);\n  }\n\n  /**\n   * Local scaling.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get scale(): Vector3 {\n    return this._scale;\n  }\n\n  set scale(value: Vector3) {\n    if (this._scale !== value) {\n      value.cloneTo(this._scale);\n    }\n    this._setDirtyFlagTrue(Transform._LOCAL_MATRIX_FLAG);\n    this._updateWorldScaleFlag();\n  }\n\n  /**\n   * Local lossy scaling.\n   * @remarks The value obtained may not be correct under certain conditions(for example, the parent node has scaling, and the child node has a rotation), the scaling will be tilted. Vector3 cannot be used to correctly represent the scaling. Must use Matrix3x3.\n   */\n  get lossyWorldScale(): Vector3 {\n    if (this._isContainDirtyFlag(Transform._WORLD_SCALE_FLAG)) {\n      if (this._getParentTransform()) {\n        const scaleMat = this._getScaleMatrix();\n        const e = scaleMat.elements;\n        this._lossyWorldScale.setValue(e[0], e[4], e[8]);\n      } else {\n        this._scale.cloneTo(this._lossyWorldScale);\n      }\n      this._setDirtyFlagFalse(Transform._WORLD_SCALE_FLAG);\n    }\n    return this._lossyWorldScale;\n  }\n\n  /**\n   * Local matrix.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get localMatrix(): Matrix {\n    if (this._isContainDirtyFlag(Transform._LOCAL_MATRIX_FLAG)) {\n      Matrix.affineTransformation(this._scale, this.rotationQuaternion, this._position, this._localMatrix);\n      this._setDirtyFlagFalse(Transform._LOCAL_MATRIX_FLAG);\n    }\n    return this._localMatrix;\n  }\n\n  set localMatrix(value: Matrix) {\n    if (this._localMatrix !== value) {\n      value.cloneTo(this._localMatrix);\n    }\n    this._localMatrix.decompose(this._position, this._rotationQuaternion, this._scale);\n    this._setDirtyFlagTrue(Transform._LOCAL_EULER_FLAG);\n    this._setDirtyFlagFalse(Transform._LOCAL_MATRIX_FLAG);\n    this._updateAllWorldFlag();\n  }\n\n  /**\n   * World matrix.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get worldMatrix(): Matrix {\n    if (this._isContainDirtyFlag(Transform._WORLD_MATRIX_FLAG)) {\n      const parent = this._getParentTransform();\n      if (parent) {\n        Matrix.multiply(parent.worldMatrix, this.localMatrix, this._worldMatrix);\n      } else {\n        this.localMatrix.cloneTo(this._worldMatrix);\n      }\n      this._setDirtyFlagFalse(Transform._WORLD_MATRIX_FLAG);\n    }\n    return this._worldMatrix;\n  }\n\n  set worldMatrix(value: Matrix) {\n    if (this._worldMatrix !== value) {\n      value.cloneTo(this._worldMatrix);\n    }\n    const parent = this._getParentTransform();\n    if (parent) {\n      Matrix.invert(parent.worldMatrix, Transform._tempMat42);\n      Matrix.multiply(value, Transform._tempMat42, this._localMatrix);\n    } else {\n      value.cloneTo(this._localMatrix);\n    }\n    this.localMatrix = this._localMatrix;\n    this._setDirtyFlagFalse(Transform._WORLD_MATRIX_FLAG);\n  }\n\n  /**\n   * Set local position by X, Y, Z value.\n   * @param x - X coordinate\n   * @param y - Y coordinate\n   * @param z - Z coordinate\n   */\n  setPosition(x: number, y: number, z: number): void {\n    this._position.setValue(x, y, z);\n    this.position = this._position;\n  }\n\n  /**\n   * Set local rotaion by the X, Y, Z components of the euler angle, unit in degrees, Yaw/Pitch/Roll sequence.\n   * @param x - The angle of rotation around the X axis\n   * @param y - The angle of rotation around the Y axis\n   * @param z - The angle of rotation around the Z axis\n   */\n  setRotation(x: number, y: number, z: number): void {\n    this._rotation.setValue(x, y, z);\n    this.rotation = this._rotation;\n  }\n\n  /**\n   * Set local rotaion by the X, Y, Z, and W components of the quaternion.\n   * @param x - X component of quaternion\n   * @param y - Y component of quaternion\n   * @param z - Z component of quaternion\n   * @param w - W component of quaternion\n   */\n  setRotationQuaternion(x: number, y: number, z: number, w: number): void {\n    this._rotationQuaternion.setValue(x, y, z, w);\n    this.rotationQuaternion = this._rotationQuaternion;\n  }\n\n  /**\n   * Set local scaling by scaling values along X, Y, Z axis.\n   * @param x - Scaling along X axis\n   * @param y - Scaling along Y axis\n   * @param z - Scaling along Z axis\n   */\n  setScale(x: number, y: number, z: number): void {\n    this._scale.setValue(x, y, z);\n    this.scale = this._scale;\n  }\n\n  /**\n   * Set world position by X, Y, Z value.\n   * @param x - X coordinate\n   * @param y - Y coordinate\n   * @param z - Z coordinate\n   */\n  setWorldPosition(x: number, y: number, z: number): void {\n    this._worldPosition.setValue(x, y, z);\n    this.worldPosition = this._worldPosition;\n  }\n\n  /**\n   * Set world rotaion by the X, Y, Z components of the euler angle, unit in degrees, Yaw/Pitch/Roll sequence.\n   * @param x - The angle of rotation around the X axis\n   * @param y - The angle of rotation around the Y axis\n   * @param z - The angle of rotation around the Z axis\n   */\n  setWorldRotation(x: number, y: number, z: number): void {\n    this._worldRotation.setValue(x, y, z);\n    this.worldRotation = this._worldRotation;\n  }\n\n  /**\n   * Set local rotaion by the X, Y, Z, and W components of the quaternion.\n   * @param x - X component of quaternion\n   * @param y - Y component of quaternion\n   * @param z - Z component of quaternion\n   * @param w - W component of quaternion\n   */\n  setWorldRotationQuaternion(x: number, y: number, z: number, w: number): void {\n    this._worldRotationQuaternion.setValue(x, y, z, w);\n    this.worldRotationQuaternion = this._worldRotationQuaternion;\n  }\n\n  /**\n   * Get the forward direction in world space.\n   * @param forward - Forward vector\n   * @returns Forward vector\n   */\n  getWorldForward(forward: Vector3): Vector3 {\n    const e = this.worldMatrix.elements;\n    forward.setValue(-e[8], -e[9], -e[10]);\n    return forward.normalize();\n  }\n\n  /**\n   * Get the right direction in world space.\n   * @param right - Right vector\n   * @returns Right vector\n   */\n  getWorldRight(right: Vector3): Vector3 {\n    const e = this.worldMatrix.elements;\n    right.setValue(e[0], e[1], e[2]);\n    return right.normalize();\n  }\n\n  /**\n   * Get the up direction in world space.\n   * @param up - Up vector\n   * @returns Up vector\n   */\n  getWorldUp(up: Vector3): Vector3 {\n    const e = this.worldMatrix.elements;\n    up.setValue(e[4], e[5], e[6]);\n    return up.normalize();\n  }\n\n  /**\n   * Translate along the passed Vector3.\n   * @param translation - Direction and distance of translation\n   * @param relativeToLocal - Relative to local space\n   */\n  translate(translation: Vector3, relativeToLocal?: boolean): void;\n\n  /**\n   * Translate along the passed X, Y, Z value.\n   * @param x - Translate direction and distance along x axis\n   * @param y - Translate direction and distance along y axis\n   * @param z - Translate direction and distance along z axis\n   * @param relativeToLocal - Relative to local space\n   */\n  translate(x: number, y: number, z: number, relativeToLocal?: boolean): void;\n\n  translate(\n    translationOrX: Vector3 | number,\n    relativeToLocalOrY?: boolean | number,\n    z?: number,\n    relativeToLocal?: boolean\n  ): void {\n    if (typeof translationOrX === \"number\") {\n      const translate = Transform._tempVec3;\n      translate.setValue(translationOrX, <number>relativeToLocalOrY, z);\n      this._translate(translate, relativeToLocal);\n    } else {\n      this._translate(translationOrX, <boolean>relativeToLocalOrY);\n    }\n  }\n\n  /**\n   * Rotate around the passed Vector3.\n   * @param rotation - Euler angle in degrees\n   * @param relativeToLocal - Relative to local space\n   */\n  rotate(rotation: Vector3, relativeToLocal?: boolean): void;\n\n  /**\n   * Rotate around the passed Vector3.\n   * @param x - Rotation along x axis, in degrees\n   * @param y - Rotation along y axis, in degrees\n   * @param z - Rotation along z axis, in degrees\n   * @param relativeToLocal - Relative to local space\n   */\n  rotate(x: number, y: number, z: number, relativeToLocal?: boolean): void;\n\n  rotate(\n    rotationOrX: Vector3 | number,\n    relativeToLocalOrY?: boolean | number,\n    z?: number,\n    relativeToLocal?: boolean\n  ): void {\n    if (typeof rotationOrX === \"number\") {\n      this._rotateXYZ(rotationOrX, <number>relativeToLocalOrY, z, relativeToLocal);\n    } else {\n      this._rotateXYZ(rotationOrX.x, rotationOrX.y, rotationOrX.z, <boolean>relativeToLocalOrY);\n    }\n  }\n\n  /**\n   * Rotate around the specified axis according to the specified angle.\n   * @param axis - Rotate axis\n   * @param angle - Rotate angle in degrees\n   * @param relativeToLocal - Relative to local space\n   */\n  rotateByAxis(axis: Vector3, angle: number, relativeToLocal: boolean = true): void {\n    const rad = angle * MathUtil.degreeToRadFactor;\n    Quaternion.rotationAxisAngle(axis, rad, Transform._tempQuat0);\n    this._rotateByQuat(Transform._tempQuat0, relativeToLocal);\n  }\n\n  /**\n   * Rotate and ensure that the world front vector points to the target world position.\n   * @param worldPosition - Target world position\n   * @param worldUp - Up direciton in world space, defalut is Vector3(0, 1, 0)\n   */\n  lookAt(worldPosition: Vector3, worldUp?: Vector3): void {\n    const position = this.worldPosition;\n    const EPSILON = MathUtil.zeroTolerance;\n    if (\n      Math.abs(position.x - worldPosition.x) < EPSILON &&\n      Math.abs(position.y - worldPosition.y) < EPSILON &&\n      Math.abs(position.z - worldPosition.z) < EPSILON\n    ) {\n      return;\n    }\n    const rotMat = Transform._tempMat43;\n    const worldRotationQuaternion = this._worldRotationQuaternion;\n\n    worldUp = worldUp ?? Transform._tempVec3.setValue(0, 1, 0);\n    Matrix.lookAt(position, worldPosition, worldUp, rotMat);\n    rotMat.getRotation(worldRotationQuaternion).invert();\n    this.worldRotationQuaternion = worldRotationQuaternion;\n  }\n\n  /**\n   * Register world transform change flag.\n   * @returns Change flag\n   */\n  registerWorldChangeFlag(): UpdateFlag {\n    const flag = new UpdateFlag(this._changeFlags);\n    this._changeFlags.push(flag);\n    return flag;\n  }\n\n  /**\n   * @internal\n   */\n  _parentChange(): void {\n    this._isParentDirty = true;\n    this._updateAllWorldFlag();\n  }\n\n  /**\n   * Get worldMatrix: Will trigger the worldMatrix update of itself and all parent entities.\n   * Get worldPosition: Will trigger the worldMatrix, local position update of itself and the worldMatrix update of all parent entities.\n   * In summary, any update of related variables will cause the dirty mark of one of the full process (worldMatrix or worldRotationQuaternion) to be false.\n   */\n  private _updateWorldPositionFlag(): void {\n    if (!this._isContainDirtyFlags(Transform._WM_WP_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WP_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateWorldPositionFlag();\n      }\n    }\n  }\n\n  /**\n   * Get worldMatrix: Will trigger the worldMatrix update of itself and all parent entities.\n   * Get worldPosition: Will trigger the worldMatrix, local position update of itself and the worldMatrix update of all parent entities.\n   * Get worldRotationQuaternion: Will trigger the world rotation (in quaternion) update of itself and all parent entities.\n   * Get worldRotation: Will trigger the world rotation(in euler and quaternion) update of itself and world rotation(in quaternion) update of all parent entities.\n   * In summary, any update of related variables will cause the dirty mark of one of the full process (worldMatrix or worldRotationQuaternion) to be false.\n   */\n  private _updateWorldRotationFlag() {\n    if (!this._isContainDirtyFlags(Transform._WM_WE_WQ_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WE_WQ_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateWorldPositionAndRotationFlag(); // Rotation update of parent entity will trigger world position and rotation update of all child entity.\n      }\n    }\n  }\n\n  /**\n   * Get worldMatrix: Will trigger the worldMatrix update of itself and all parent entities.\n   * Get worldPosition: Will trigger the worldMatrix, local position update of itself and the worldMatrix update of all parent entities.\n   * Get worldRotationQuaternion: Will trigger the world rotation (in quaternion) update of itself and all parent entities.\n   * Get worldRotation: Will trigger the world rotation(in euler and quaternion) update of itself and world rotation(in quaternion) update of all parent entities.\n   * In summary, any update of related variables will cause the dirty mark of one of the full process (worldMatrix or worldRotationQuaternion) to be false.\n   */\n  private _updateWorldPositionAndRotationFlag() {\n    if (!this._isContainDirtyFlags(Transform._WM_WP_WE_WQ_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WP_WE_WQ_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateWorldPositionAndRotationFlag();\n      }\n    }\n  }\n\n  /**\n   * Get worldMatrix: Will trigger the worldMatrix update of itself and all parent entities.\n   * Get worldPosition: Will trigger the worldMatrix, local position update of itself and the worldMatrix update of all parent entities.\n   * Get worldScale: Will trigger the scaling update of itself and all parent entities.\n   * In summary, any update of related variables will cause the dirty mark of one of the full process (worldMatrix) to be false.\n   */\n  private _updateWorldScaleFlag() {\n    if (!this._isContainDirtyFlags(Transform._WM_WS_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WS_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateWorldPositionAndScaleFlag();\n      }\n    }\n  }\n\n  /**\n   * Get worldMatrix: Will trigger the worldMatrix update of itself and all parent entities.\n   * Get worldPosition: Will trigger the worldMatrix, local position update of itself and the worldMatrix update of all parent entities.\n   * Get worldScale: Will trigger the scaling update of itself and all parent entities.\n   * In summary, any update of related variables will cause the dirty mark of one of the full process (worldMatrix) to be false.\n   */\n  private _updateWorldPositionAndScaleFlag(): void {\n    if (!this._isContainDirtyFlags(Transform._WM_WP_WS_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WP_WS_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateWorldPositionAndScaleFlag();\n      }\n    }\n  }\n\n  /**\n   * Update all world transform property dirty flag, the principle is the same as above.\n   */\n  private _updateAllWorldFlag(): void {\n    if (!this._isContainDirtyFlags(Transform._WM_WP_WE_WQ_WS_FLAGS)) {\n      this._worldAssociatedChange(Transform._WM_WP_WE_WQ_WS_FLAGS);\n      const nodeChildren = this._entity._children;\n      for (let i: number = 0, n: number = nodeChildren.length; i < n; i++) {\n        nodeChildren[i].transform?._updateAllWorldFlag();\n      }\n    }\n  }\n\n  private _getParentTransform(): Transform | null {\n    if (!this._isParentDirty) {\n      return this._parentTransformCache;\n    }\n    let parentCache: Transform = null;\n    let parent = this._entity.parent;\n    while (parent) {\n      const transform = parent.transform;\n      if (transform) {\n        parentCache = transform;\n        break;\n      } else {\n        parent = parent.parent;\n      }\n    }\n    this._parentTransformCache = parentCache;\n    this._isParentDirty = false;\n    return parentCache;\n  }\n\n  private _getScaleMatrix(): Matrix3x3 {\n    const invRotation = Transform._tempQuat0;\n    const invRotationMat = Transform._tempMat30;\n    const worldRotScaMat = Transform._tempMat31;\n    const scaMat = Transform._tempMat32;\n    worldRotScaMat.setValueByMatrix(this.worldMatrix);\n    Quaternion.invert(this.worldRotationQuaternion, invRotation);\n    Matrix3x3.rotationQuaternion(invRotation, invRotationMat);\n    Matrix3x3.multiply(invRotationMat, worldRotScaMat, scaMat);\n    return scaMat;\n  }\n\n  private _isContainDirtyFlags(targetDirtyFlags: number): boolean {\n    return (this._dirtyFlag & targetDirtyFlags) === targetDirtyFlags;\n  }\n\n  private _isContainDirtyFlag(type: number): boolean {\n    return (this._dirtyFlag & type) != 0;\n  }\n\n  private _setDirtyFlagTrue(type: number) {\n    this._dirtyFlag |= type;\n  }\n\n  private _setDirtyFlagFalse(type: number) {\n    this._dirtyFlag &= ~type;\n  }\n\n  private _worldAssociatedChange(type: number): void {\n    this._dirtyFlag |= type;\n    const len = this._changeFlags.length;\n    for (let i = len - 1; i >= 0; i--) {\n      this._changeFlags[i].flag = true;\n    }\n  }\n\n  private _rotateByQuat(rotateQuat: Quaternion, relativeToLocal: boolean) {\n    if (relativeToLocal) {\n      Quaternion.multiply(this.rotationQuaternion, rotateQuat, this._rotationQuaternion);\n      this.rotationQuaternion = this._rotationQuaternion;\n    } else {\n      Quaternion.multiply(this.worldRotationQuaternion, rotateQuat, this._worldRotationQuaternion);\n      this.worldRotationQuaternion = this._worldRotationQuaternion;\n    }\n  }\n\n  private _translate(translation: Vector3, relativeToLocal: boolean = true): void {\n    if (relativeToLocal) {\n      const rotationMat = Transform._tempMat40;\n      Matrix.rotationQuaternion(this.rotationQuaternion, rotationMat);\n      Vector3.transformCoordinate(translation, rotationMat, Transform._tempVec3);\n      this.position = this._position.add(Transform._tempVec3);\n    } else {\n      this.worldPosition = this._worldPosition.add(translation);\n    }\n  }\n\n  private _rotateXYZ(x: number, y: number, z: number, relativeToLocal: boolean = true): void {\n    const radFactor = MathUtil.degreeToRadFactor;\n    const rotQuat = Transform._tempQuat0;\n    Quaternion.rotationEuler(x * radFactor, y * radFactor, z * radFactor, rotQuat);\n    this._rotateByQuat(rotQuat, relativeToLocal);\n  }\n\n  /**\n   * @deprecated Please use translate() function instead.\n   * Translate in the specified direction and distance.\n   * @param x - The direction and distance of translation in x axis\n   * @param y - The direction and distance of translation in y axis\n   * @param z - The direction and distance of translation in z axis\n   * @param relativeToLocal - Whether relative local space\n   */\n  translateXYZ(x: number, y: number, z: number, relativeToLocal: boolean = true): void {\n    this.translate(x, y, z, relativeToLocal);\n  }\n\n  /**\n   * @deprecated please use rotate() function instead.\n   * Rotate according to the specified Euler angle.\n   * @param x - The angle that rotate around of x axis (uint: angle)\n   * @param y - The angle that rotate around of y axis (uint: angle)\n   * @param z - The angle that rotate around of z axis (uint: angle)\n   * @param relativeToLocal - Whether relative local space\n   */\n  rotateXYZ(x: number, y: number, z: number, relativeToLocal: boolean = true): void {\n    this.rotate(x, y, z, relativeToLocal);\n  }\n}\n","import { Matrix, Quaternion, Vector3 } from \"@oasis-engine/math\";\nimport { EngineObject } from \"./base\";\nimport { ComponentCloner } from \"./clone/ComponentCloner\";\nimport { Component } from \"./Component\";\nimport { ComponentsDependencies } from \"./ComponentsDependencies\";\nimport { DisorderedArray } from \"./DisorderedArray\";\nimport { Engine } from \"./Engine\";\nimport { Layer } from \"./Layer\";\nimport { Scene } from \"./Scene\";\nimport { Transform } from \"./Transform\";\nimport { UpdateFlag } from \"./UpdateFlag\";\n\n/**\n * Entity, be used as components container.\n */\nexport class Entity extends EngineObject {\n  private static _entitys: DisorderedArray<Entity> = new DisorderedArray();\n\n  /**\n   * Find entity globally by name.\n   * @param name - The name of the entity which want to be finded.\n   * @returns The entity which be finded.\n   */\n  static findByName(name: string): Entity {\n    const entitys = Entity._entitys;\n    const elements = entitys._elements;\n    for (let i = entitys.length - 1; i >= 0; i--) {\n      const entity = elements[i];\n      if (entity.name === name) {\n        return entity;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find entity globally by path, use the ‘/’ symbol as the path separator.\n   * @deprecated Use scene find by path instead.\n   * @param scene - The scene be finded in.\n   * @param path - The path fo the entity eg: /root/entity.\n   * @returns The entity which be finded.\n   */\n  static findByPath(scene: Scene, path: string): Entity | null {\n    return scene.findEntityByPath(path);\n  }\n\n  /**\n   * @internal\n   */\n  static _findChildByName(root: Entity, name: string): Entity {\n    const children = root._children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (child.name === name) {\n        return child;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @internal\n   */\n  static _traverseSetOwnerScene(entity: Entity, scene: Scene): void {\n    entity._scene = scene;\n    const children = entity._children;\n    for (let i = entity.childCount - 1; i >= 0; i--) {\n      this._traverseSetOwnerScene(children[i], scene);\n    }\n  }\n\n  name: string;\n  /** The layer the entity belongs to. */\n  layer: Layer = Layer.Layer0;\n  readonly transform: Transform;\n\n  /** @internal */\n  _isActiveInHierarchy: boolean = false;\n  /** @internal */\n  _components: Component[] = [];\n  /** @internal */\n  _children: Entity[] = [];\n  /** @internal */\n  _scene: Scene;\n  /** @internal */\n  _isRoot: boolean = false;\n  /** @internal */\n  _isActive: boolean = true;\n\n  private _parent: Entity = null;\n  private _activeChangedComponents: Component[];\n\n  /**\n   * Whether to activate locally.\n   */\n  get isActive(): boolean {\n    return this._isActive;\n  }\n\n  set isActive(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      if (value) {\n        const parent = this._parent;\n        if (parent?._isActiveInHierarchy || (this._isRoot && this._scene._isActiveInEngine)) {\n          this._processActive();\n        }\n      } else {\n        if (this._isActiveInHierarchy) {\n          this._processInActive();\n        }\n      }\n    }\n  }\n\n  /**\n   * Whether it is active in the hierarchy.\n   */\n  get isActiveInHierarchy(): boolean {\n    return this._isActiveInHierarchy;\n  }\n\n  /**\n   * The parent entity.\n   */\n  get parent(): Entity {\n    return this._parent;\n  }\n\n  set parent(entity: Entity) {\n    if (entity !== this._parent) {\n      const oldParent = this._removeFromParent();\n      const newParent = (this._parent = entity);\n      if (newParent) {\n        newParent._children.push(this);\n        const parentScene = newParent._scene;\n        if (this._scene !== parentScene) {\n          Entity._traverseSetOwnerScene(this, parentScene);\n        }\n\n        if (newParent._isActiveInHierarchy) {\n          !this._isActiveInHierarchy && this._isActive && this._processActive();\n        } else {\n          this._isActiveInHierarchy && this._processInActive();\n        }\n      } else {\n        this._isActiveInHierarchy && this._processInActive();\n        if (oldParent) {\n          Entity._traverseSetOwnerScene(this, null);\n        }\n      }\n      this._setTransformDirty();\n    }\n  }\n\n  /**\n   * The children entities\n   */\n  get children(): Readonly<Entity[]> {\n    return this._children;\n  }\n\n  /**\n   * Number of the children entities\n   */\n  get childCount(): number {\n    return this._children.length;\n  }\n\n  /**\n   * The scene the entity belongs to.\n   */\n  get scene(): Scene {\n    return this._scene;\n  }\n\n  /**\n   * The engine the entity belongs to.\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * Create a entity.\n   * @param engine - The engine the entity belongs to.\n   */\n  constructor(engine: Engine, name?: string) {\n    super(engine);\n    Entity._entitys.add(this);\n    this.name = name;\n    this.transform = this.addComponent(Transform);\n    this._inverseWorldMatFlag = this.transform.registerWorldChangeFlag();\n  }\n\n  /**\n   * Add component based on the component type.\n   * @param type - The type of the component.\n   * @returns\tThe component which has been added.\n   */\n  addComponent<T extends Component>(type: new (entity: Entity) => T): T {\n    ComponentsDependencies._addCheck(this, type);\n    const component = new type(this);\n    this._components.push(component);\n    if (this._isActiveInHierarchy) {\n      component._setActive(true);\n    }\n    return component;\n  }\n\n  /**\n   * Get component which match the type.\n   * @param type - The type of the component.\n   * @returns\tThe first component which match type.\n   */\n  getComponent<T extends Component>(type: new (entity: Entity) => T): T {\n    for (let i = this._components.length - 1; i >= 0; i--) {\n      const component = this._components[i];\n      if (component instanceof type) {\n        return component;\n      }\n    }\n  }\n\n  /**\n   * Get components which match the type.\n   * @param type - The type of the component.\n   * @param results - The components which match type.\n   * @returns\tThe components which match type.\n   */\n  getComponents<T extends Component>(type: new (entity: Entity) => T, results: T[]): T[] {\n    results.length = 0;\n    for (let i = this._components.length - 1; i >= 0; i--) {\n      const component = this._components[i];\n      if (component instanceof type) {\n        results.push(component);\n      }\n    }\n    return results;\n  }\n\n  /**\n   * Get the components which match the type of the entity and it's children.\n   * @param type - The component type.\n   * @param results - The components collection.\n   * @returns\tThe components collection which match the type.\n   */\n  getComponentsIncludeChildren<T extends Component>(type: new (entity: Entity) => T, results: T[]): T[] {\n    results.length = 0;\n    this._getComponentsInChildren<T>(type, results);\n    return results;\n  }\n\n  /**\n   * Add child entity.\n   * @param child - The child entity which want to be added.\n   */\n  addChild(child: Entity): void {\n    child.parent = this;\n  }\n\n  /**\n   * Remove child entitiy.\n   * @param child - The child entity which want to be removed.\n   */\n  removeChild(child: Entity): void {\n    child.parent = null;\n  }\n\n  /**\n   * Find child entity by index.\n   * @param index - The index of the child entity.\n   * @returns\tThe component which be finded.\n   */\n  getChild(index: number): Entity {\n    return this._children[index];\n  }\n\n  /**\n   * Find child entity by name.\n   * @param name - The name of the entity which want to be finded.\n   * @returns The component which be finded.\n   */\n  findByName(name: string): Entity {\n    const children = this._children;\n    const child = Entity._findChildByName(this, name);\n    if (child) return child;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      const grandson = child.findByName(name);\n      if (grandson) {\n        return grandson;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find the entity by path.\n   * @param path - The path fo the entity eg: /entity.\n   * @returns The component which be finded.\n   */\n  findByPath(path: string): Entity {\n    const splits = path.split(\"/\");\n    let entity: Entity = this;\n    for (let i = 0, length = splits.length; i < length; ++i) {\n      const split = splits[i];\n      if (split) {\n        entity = Entity._findChildByName(entity, split);\n        if (!entity) {\n          return null;\n        }\n      }\n    }\n    return entity;\n  }\n\n  /**\n   * Create child entity.\n   * @param name - The child entity's name.\n   * @returns The child entity.\n   */\n  createChild(name?: string): Entity {\n    const child = new Entity(this.engine, name);\n    child.layer = this.layer;\n    child.parent = this;\n    return child;\n  }\n\n  /**\n   * Clear children entities.\n   */\n  clearChildren(): void {\n    const children = this._children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      child._parent = null;\n      child._isActiveInHierarchy && child._processInActive();\n      Entity._traverseSetOwnerScene(child, null); // Must after child._processInActive().\n    }\n    children.length = 0;\n  }\n\n  /**\n   * Clone\n   * @returns Cloned entity.\n   */\n  clone(): Entity {\n    const cloneEntity = new Entity(this._engine, this.name);\n\n    cloneEntity._isActive = this._isActive;\n    cloneEntity.transform.localMatrix = this.transform.localMatrix;\n\n    const children = this._children;\n    for (let i = 0, len = this._children.length; i < len; i++) {\n      const child = children[i];\n      cloneEntity.addChild(child.clone());\n    }\n\n    const components = this._components;\n    for (let i = 0, n = components.length; i < n; i++) {\n      const sourceComp = components[i];\n      if (!(sourceComp instanceof Transform)) {\n        const targetComp = cloneEntity.addComponent(<new (entity: Entity) => Component>sourceComp.constructor);\n        ComponentCloner.cloneComponent(sourceComp, targetComp);\n      }\n    }\n\n    return cloneEntity;\n  }\n\n  /**\n   * Destroy self.\n   */\n  destroy(): void {\n    const abilityArray = this._components;\n    for (let i = abilityArray.length - 1; i >= 0; i--) {\n      abilityArray[i].destroy();\n    }\n    this._components.length = 0;\n\n    const children = this._children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      children[i].destroy();\n    }\n    this._children.length = 0;\n\n    if (this._parent != null) {\n      const parentChildren = this._parent._children;\n      parentChildren.splice(parentChildren.indexOf(this), 1);\n    }\n    this._parent = null;\n    Entity._entitys.delete(this);\n  }\n\n  /**\n   * @internal\n   */\n  _removeComponent(component: Component): void {\n    ComponentsDependencies._removeCheck(this, component.constructor as any);\n    const components = this._components;\n    components.splice(components.indexOf(component), 1);\n  }\n\n  /**\n   * @internal\n   */\n  _removeFromParent(): Entity {\n    const oldParent = this._parent;\n    if (oldParent != null) {\n      const oldParentChildren = oldParent._children;\n      oldParentChildren.splice(oldParentChildren.indexOf(this), 1);\n      this._parent = null;\n    }\n    return oldParent;\n  }\n\n  /**\n   * @internal\n   */\n  _processActive(): void {\n    if (this._activeChangedComponents) {\n      throw \"Note: can't set the 'main inActive entity' active in hierarchy, if the operation is in main inActive entity or it's children script's onDisable Event.\";\n    }\n    this._activeChangedComponents = this._engine._componentsManager.getActiveChangedTempList();\n    this._setActiveInHierarchy(this._activeChangedComponents);\n    this._setActiveComponents(true);\n  }\n\n  /**\n   * @internal\n   */\n  _processInActive(): void {\n    if (this._activeChangedComponents) {\n      throw \"Note: can't set the 'main active entity' inActive in hierarchy, if the operation is in main active entity or it's children script's onEnable Event.\";\n    }\n    this._activeChangedComponents = this._engine._componentsManager.getActiveChangedTempList();\n    this._setInActiveInHierarchy(this._activeChangedComponents);\n    this._setActiveComponents(false);\n  }\n\n  private _getComponentsInChildren<T extends Component>(type: new (entity: Entity) => T, results: T[]): void {\n    for (let i = this._components.length - 1; i >= 0; i--) {\n      const component = this._components[i];\n      if (component instanceof type) {\n        results.push(component);\n      }\n    }\n    for (let i = this._children.length - 1; i >= 0; i--) {\n      this._children[i]._getComponentsInChildren<T>(type, results);\n    }\n  }\n\n  private _setActiveComponents(isActive: boolean): void {\n    const activeChangedComponents = this._activeChangedComponents;\n    for (let i = 0, length = activeChangedComponents.length; i < length; ++i) {\n      activeChangedComponents[i]._setActive(isActive);\n    }\n    this._engine._componentsManager.putActiveChangedTempList(activeChangedComponents);\n    this._activeChangedComponents = null;\n  }\n\n  private _setActiveInHierarchy(activeChangedComponents: Component[]): void {\n    this._isActiveInHierarchy = true;\n    const components = this._components;\n    for (let i = components.length - 1; i >= 0; i--) {\n      activeChangedComponents.push(components[i]);\n    }\n    const children = this._children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child: Entity = children[i];\n      child.isActive && child._setActiveInHierarchy(activeChangedComponents);\n    }\n  }\n\n  private _setInActiveInHierarchy(activeChangedComponents: Component[]): void {\n    this._isActiveInHierarchy = false;\n    const components = this._components;\n    for (let i = components.length - 1; i >= 0; i--) {\n      activeChangedComponents.push(components[i]);\n    }\n    const children = this._children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child: Entity = children[i];\n      child.isActive && child._setInActiveInHierarchy(activeChangedComponents);\n    }\n  }\n\n  private _setTransformDirty() {\n    if (this.transform) {\n      this.transform._parentChange();\n    } else {\n      for (let i = 0, len = this._children.length; i < len; i++) {\n        this._children[i]._setTransformDirty();\n      }\n    }\n  }\n\n  //--------------------------------------------------------------deprecated----------------------------------------------------------------\n  private _invModelMatrix: Matrix = new Matrix();\n  private _inverseWorldMatFlag: UpdateFlag;\n\n  /**\n   * @deprecated\n   * Use transform.position instead.\n   */\n  get position(): Vector3 {\n    return this.transform.position;\n  }\n\n  set position(val: Vector3) {\n    this.transform.position = val;\n  }\n\n  /**\n   * @deprecated\n   * Use transform.worldPosition instead.\n   */\n  get worldPosition(): Vector3 {\n    return this.transform.worldPosition;\n  }\n\n  set worldPosition(val: Vector3) {\n    this.transform.worldPosition = val;\n  }\n\n  /**\n   * @deprecated\n   * Use transform.rotationQuaternion instead.\n   */\n  get rotation(): Quaternion {\n    return this.transform.rotationQuaternion;\n  }\n\n  set rotation(val: Quaternion) {\n    this.transform.rotationQuaternion = val;\n  }\n\n  /**\n   * @deprecated\n   * Use transform.scale instead.\n   */\n  get scale(): Vector3 {\n    return this.transform.scale;\n  }\n\n  set scale(val: Vector3) {\n    this.transform.scale = val;\n  }\n\n  /**\n   * @deprecated\n   */\n  getInvModelMatrix(): Matrix {\n    if (this._inverseWorldMatFlag.flag) {\n      Matrix.invert(this.transform.worldMatrix, this._invModelMatrix);\n      this._inverseWorldMatFlag.flag = false;\n    }\n    return this._invModelMatrix;\n  }\n}\n","import { SceneFeature } from \"./SceneFeature\";\nimport { EngineFeature } from \"./EngineFeature\";\nimport { Scene } from \"./Scene\";\nimport { Engine } from \"./Engine\";\n\n/**\n * Manage a set of feature objects.\n */\nexport class FeatureManager<T extends EngineFeature | SceneFeature> {\n  private _features: Array<new (engine: Engine) => T> = [];\n\n  private _objects = [];\n\n  /**\n   * Register a feature.\n   * @param {SceneFeature|EngineFeature} Feature\n   */\n  public registerFeature(IFeature: new () => T): void {\n    const featureArray = this._features;\n\n    // Search by type, avoid adding\n    for (let i = 0, len = featureArray.length; i < len; i++) {\n      if (featureArray[i] === IFeature) {\n        return;\n      }\n    }\n\n    // Add to global array\n    featureArray.push(IFeature);\n\n    // Add to existing scene\n    const objectArray = this._objects;\n    for (let i = 0, len = objectArray.length; i < len; i++) {\n      objectArray[i].features.push(new IFeature());\n    }\n  }\n\n  /**\n   * Add an feature with functional characteristics.\n   * @param {Scene|Engine} obj - Scene or engine\n   */\n  public addObject(obj: Scene | Engine): void {\n    obj.features = [];\n    for (let i = 0, len = this._features.length; i < len; i++) {\n      obj.features.push(new this._features[i]((<any>obj).engine ?? <any>obj) as any);\n    }\n    this._objects.push(obj);\n  }\n\n  /**\n   * Call the specified method of the feature.\n   * @param obj - Scene or engine\n   * @param method - Method name\n   * @param args - Function args\n   */\n  public callFeatureMethod(obj: Scene | Engine, method: string, args: any[]): void {\n    const features = obj.features;\n    const count = features.length;\n\n    for (let i = 0; i < count; i++) {\n      const feature = features[i];\n      if (feature[method]) {\n        feature[method].apply(feature, args);\n      }\n    }\n  }\n\n  /**\n   * Find feature.\n   * @param obj - Scene or engine\n   * @param feature - plug-in\n   */\n\n  public findFeature(obj: Scene | Engine, IFeature: new () => T): T {\n    const features = obj.features;\n    const count = features.length;\n\n    for (let i = 0; i < count; i++) {\n      const feature = features[i];\n      if (feature.constructor === (IFeature as any)) {\n        return feature as any;\n      }\n    }\n    return undefined;\n  }\n}\n","import { Primitive } from \"../graphic\";\nimport { SubPrimitive } from \"../graphic/SubPrimitive\";\nimport { Material } from \"../material/Material\";\nimport { Renderer } from \"../Renderer\";\n\n/**\n * Render element.\n */\nexport class RenderElement {\n  private static _elementPoolIndex: number = 0;\n  private static _elementPool: RenderElement[] = [];\n\n  /**\n   * Get render element from pool.\n   * @remark The return value is only valid for the current frame, and the next frame will be automatically recycled for reuse.\n   */\n  static getFromPool(): RenderElement {\n    const { _elementPoolIndex: index, _elementPool: pool } = RenderElement;\n    RenderElement._elementPoolIndex++;\n    if (pool.length === index) {\n      const element = new RenderElement();\n      pool.push(element);\n      return element;\n    } else {\n      return pool[index];\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _restPool() {\n    RenderElement._elementPoolIndex = 0;\n  }\n\n  /** Render component. */\n  component: Renderer;\n  /** Primitive. */\n  primitive: Primitive;\n  /** Sub primitive. */\n  subPrimitive: SubPrimitive;\n  /** Material. */\n  material: Material;\n\n  setValue(component: Renderer, primitive: Primitive, subPrimitive: SubPrimitive, material: Material): void {\n    this.component = component;\n    this.primitive = primitive;\n    this.subPrimitive = subPrimitive;\n    this.material = material;\n  }\n}\n","import { Camera } from \"./Camera\";\nimport { Scene } from \"./Scene\";\n\n/**\n * Scene feature plug-in.\n * @deprecated\n */\nexport abstract class SceneFeature {\n  /**\n   * Callback before every scene update.\n   * @param scene - Scene\n   */\n  public preUpdate(scene: Scene): void {}\n\n  /**\n   * Callback after every scene update.\n   * @param scene - Scene\n   */\n  public postUpdate(scene: Scene): void {}\n\n  /**\n   * Callback before scene rendering.\n   * @param scene - Scene\n   * @param camera - Camera\n   */\n  public preRender(scene: Scene, camera: Camera): void {}\n\n  /**\n   * Callback after scene rendering.\n   * @param scene - Scene\n   * @param camera - Camera\n   */\n  public postRender(scene: Scene, camera: Camera): void {}\n\n  /**\n   * Callback after the scene is destroyed.\n   * @param scene - Scene\n   */\n  public destroy(scene: Scene): void {}\n}\n","/**\n * Blend factor.\n * @remarks defines which function is used for blending pixel arithmetic\n */\nexport enum BlendFactor {\n  /** (0, 0, 0, 0)*/\n  Zero,\n  /** (1, 1, 1, 1)*/\n  One,\n  /** (Rs, Gs, Bs, As) */\n  SourceColor,\n  /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\n  OneMinusSourceColor,\n  /** (Rd, Gd, Bd, Ad)*/\n  DestinationColor,\n  /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\n  OneMinusDestinationColor,\n  /** (As, As, As, As)*/\n  SourceAlpha,\n  /** (1 - As, 1 - As, 1 - As, 1 - As)*/\n  OneMinusSourceAlpha,\n  /** (Ad, Ad, Ad, Ad)*/\n  DestinationAlpha,\n  /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\n  OneMinusDestinationAlpha,\n  /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\n  SourceAlphaSaturate,\n  /** (Rc, Gc, Bc, Ac)*/\n  BlendColor,\n  /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\n  OneMinusBlendColor\n}\n","/**\n * Blend operation function.\n * @remarks defines how a new pixel is combined with a pixel.\n */\nexport enum BlendOperation {\n  /** src + dst. */\n  Add,\n  /** src - dst. */\n  Subtract,\n  /** dst - src. */\n  ReverseSubtract,\n  /** Minimum of source and destination. */\n  Min,\n  /** Maximum of source and destination. */\n  Max\n}\n","/**\n * Set which color channels can be rendered to frame buffer.\n * @remarks enumeration can be combined using bit operations.\n */\nexport enum ColorWriteMask {\n  /** Do not write to any channel. */\n  None = 0,\n  /** Write to the red channel. */\n  Red = 0x1,\n  /** Write to the green channel. */\n  Green = 0x2,\n  /** Write to the blue channel. */\n  Blue = 0x4,\n  /** Write to the alpha channel. */\n  Alpha = 0x8,\n  /** Write to all channel. */\n  All = 0xf\n}\n","/**\n * Depth/Stencil comparison function.\n * @remarks Specifies a function that compares incoming pixel depth/stencil to the current depth/stencil buffer value.\n */\nexport enum CompareFunction {\n  /** never pass. */\n  Never,\n  /** pass if the incoming value is less than the depth/stencil buffer value. */\n  Less,\n  /** pass if the incoming value equals the depth/stencil buffer value. */\n  Equal,\n  /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\n  LessEqual,\n  /** pass if the incoming value is greater than the depth/stencil buffer value. */\n  Greater,\n  /** pass if the incoming value is not equal to the depth/stencil buffer value. */\n  NotEqual,\n  /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\n  GreaterEqual,\n  /** always pass. */\n  Always\n}\n","/**\n * Culling mode.\n * @remarks specifies whether or not front- and/or back-facing polygons can be culled.\n */\nexport enum CullMode {\n  /** Disable culling. */\n  Off,\n  /** cut the front-face of the polygons. */\n  Front,\n  /** cut the back-face of the polygons. */\n  Back\n}\n","/**\n * Stencil operation mode.\n * @remarks sets the front and/or back-facing stencil test actions.\n */\nexport enum StencilOperation {\n  /** Keeps the current value. */\n  Keep,\n  /** Sets the stencil buffer value to 0. */\n  Zero,\n  /** Sets the stencil buffer value to the reference value. */\n  Replace,\n  /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\n  IncrementSaturate,\n  /** Decrements the current stencil buffer value. Clamps to 0. */\n  DecrementSaturate,\n  /** Inverts the current stencil buffer value bitwise. */\n  Invert,\n  /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\n  IncrementWrap,\n  /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\n  DecrementWrap\n}\n","/**\n * Render queue type.\n */\nexport enum RenderQueueType {\n  /** Opaque queue. */\n  Opaque = 1000,\n  /** Transparency cutoff queue. */\n  AlphaTest = 2000,\n  /** Transparent queue, rendering from back to front to ensure correct rendering of transparent objects. */\n  Transparent = 3000\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { Component } from \"../Component\";\nimport { Layer } from \"../Layer\";\nimport { RenderQueueType } from \"../material/enums/RenderQueueType\";\nimport { Material } from \"../material/Material\";\nimport { Renderer } from \"../Renderer\";\nimport { ShaderMacroCollection } from \"../shader/ShaderMacroCollection\";\nimport { RenderElement } from \"./RenderElement\";\n\ninterface SpriteElement {\n  component: Renderer;\n  positionQuad;\n  uvRect;\n  tintColor;\n  texture;\n  renderMode;\n  camera;\n}\n\ntype Item = RenderElement | SpriteElement;\n\n/**\n * Render collection.\n * @private\n */\nexport class RenderQueue {\n  /** @internal */\n  static readonly compileMacros: ShaderMacroCollection = new ShaderMacroCollection();\n\n  readonly items: Item[] = [];\n\n  /**\n   * Push a render element.\n   */\n  pushPrimitive(element: RenderElement): void {\n    this.items.push(element);\n  }\n\n  /**\n   * Sort the elements.\n   */\n  sort(cameraPosition: Vector3): void {\n    this.items.sort((a: Item, b: Item) => {\n      const aIsPrimitive = this._isPrimitive(a);\n      const bIsPrimitive = this._isPrimitive(b);\n\n      if (aIsPrimitive && bIsPrimitive) {\n        const aElement: RenderElement = <RenderElement>a;\n        const bElement: RenderElement = <RenderElement>b;\n        const aRenderQueue = aElement.material.renderQueueType;\n        const bRenderQueue = bElement.material.renderQueueType;\n\n        if (aRenderQueue > bRenderQueue) {\n          return 1;\n        }\n        if (aRenderQueue < bRenderQueue) {\n          return -1;\n        }\n\n        // sort transparent queue from back to front.\n        if (aRenderQueue >= RenderQueueType.Transparent && bRenderQueue >= RenderQueueType.Transparent) {\n          const aDistance = Vector3.distanceSquared(aElement.component.entity.transform.worldPosition, cameraPosition);\n          const bDistance = Vector3.distanceSquared(bElement.component.entity.transform.worldPosition, cameraPosition);\n\n          return bDistance - aDistance;\n        }\n\n        // reduce switching shaderProgram\n        return aElement.material.shader.name.localeCompare(bElement.material.shader.name);\n      } else if (aIsPrimitive && !bIsPrimitive) {\n        return -1;\n      } else if (!aIsPrimitive && bIsPrimitive) {\n        return 1;\n      }\n    });\n  }\n\n  pushSprite(component: Component, positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    const element: SpriteElement = {\n      // @ts-ignore\n      component,\n      positionQuad,\n      uvRect,\n      tintColor,\n      texture,\n      renderMode,\n      camera\n    };\n    this.items.push(element);\n  }\n\n  render(camera: Camera, replaceMaterial: Material, mask: Layer) {\n    const items = this.items;\n    if (items.length === 0) {\n      return;\n    }\n\n    const spriteMaterial = camera._renderPipeline._defaultSpriteMaterial;\n    const { engine, scene } = camera;\n    const renderCount = engine._renderCount;\n    const rhi = engine._hardwareRenderer;\n    const sceneData = scene.shaderData;\n    const cameraData = camera.shaderData;\n\n    for (let i = 0, n = items.length; i < n; i++) {\n      const item = items[i];\n      const renderPassFlag = item.component.entity.layer;\n\n      if (!(renderPassFlag & mask)) {\n        continue;\n      }\n\n      if (this._isPrimitive(item)) {\n        rhi.flushSprite(engine, spriteMaterial);\n\n        const compileMacros = RenderQueue.compileMacros;\n        const element = <RenderElement>item;\n        const renderer = element.component;\n        const material = replaceMaterial ? replaceMaterial : element.material;\n        const rendererData = renderer.shaderData;\n        const materialData = material.shaderData;\n\n        // @todo: temporary solution\n        material._preRender(element);\n\n        // union render global macro and material self macro.\n        ShaderMacroCollection.unionCollection(\n          renderer._globalShaderMacro,\n          materialData._macroCollection,\n          compileMacros\n        );\n        compileMacros.unionCollection(element.primitive._macroCollection); //CM&SS: temporary\n\n        const program = material.shader._getShaderProgram(engine, compileMacros);\n        if (!program.isValid) {\n          continue;\n        }\n\n        const switchProgram = program.bind();\n        const switchRenderCount = renderCount !== program._uploadRenderCount;\n\n        if (switchRenderCount) {\n          program.groupingOtherUniformBlock();\n          program.uploadAll(program.sceneUniformBlock, sceneData);\n          program.uploadAll(program.cameraUniformBlock, cameraData);\n          program.uploadAll(program.rendererUniformBlock, rendererData);\n          program.uploadAll(program.materialUniformBlock, materialData);\n          program._uploadCamera = camera;\n          program._uploadRenderer = renderer;\n          program._uploadMaterial = material;\n          program._uploadRenderCount = renderCount;\n        } else {\n          if (program._uploadCamera !== camera) {\n            program.uploadUniforms(program.cameraUniformBlock, cameraData);\n            program._uploadCamera = camera;\n          }\n\n          if (program._uploadRenderer !== renderer) {\n            program.uploadUniforms(program.rendererUniformBlock, rendererData);\n            program._uploadRenderer = renderer;\n          }\n\n          if (program._uploadMaterial !== material) {\n            program.uploadUniforms(program.materialUniformBlock, materialData);\n            program._uploadMaterial = material;\n          }\n\n          if (switchProgram) {\n            program.uploadTextures(program.sceneUniformBlock, sceneData);\n            program.uploadTextures(program.cameraUniformBlock, cameraData);\n            program.uploadTextures(program.rendererUniformBlock, rendererData);\n            program.uploadTextures(program.materialUniformBlock, materialData);\n          }\n        }\n\n        material.renderState._apply(camera.engine);\n\n        rhi.drawPrimitive(element.primitive, element.subPrimitive, program);\n      } else {\n        const spirteElement = <SpriteElement>item;\n        rhi.drawSprite(\n          spriteMaterial,\n          spirteElement.positionQuad,\n          spirteElement.uvRect,\n          spirteElement.tintColor,\n          spirteElement.texture,\n          spirteElement.renderMode,\n          spirteElement.camera\n        );\n      }\n    }\n\n    rhi.flushSprite(engine, spriteMaterial);\n  }\n\n  /**\n   * Clear collection.\n   */\n  clear(): void {\n    this.items.length = 0;\n  }\n\n  private _isPrimitive(item) {\n    return !!item.primitive;\n  }\n}\n","import pbr_common_frag_define from \"./common_frag_define.glsl\";\nimport pbr_util_frag_define from \"./util_frag_define.glsl\";\n\n/** IBL define */\nimport pbr_envmap_light_frag_define from \"./envmap_light_frag_define.glsl\";\n\n/** prop & texture */\nimport pbr_base_frag_define from \"./base_frag_define.glsl\";\nimport pbr_texture_frag_define from \"./texture_frag_define.glsl\";\n\n/** runtime context */\nimport pbr_runtime_frag_define from \"./runtime_frag_define.glsl\";\n\n// todo: generalize\nimport pbr_normal_frag_define from \"./normal_frag_define.glsl\";\n\n// todo: BxDF\nimport pbr_brdf_cook_torrance_frag_define from \"./brdf_cook_torrance_frag_define.glsl\";\n\n/** direct + IBL */\nimport pbr_direct_irradiance_frag_define from \"./direct_irradiance_frag_define.glsl\";\nimport pbr_ibl_specular_frag_define from \"./ibl_specular_frag_define.glsl\";\nimport pbr_ibl_diffuse_frag_define from \"./ibl_diffuse_frag_define.glsl\";\n\nimport pbr_begin_frag from \"./begin_frag.glsl\";\nimport pbr_direct_irradiance_frag from \"./direct_irradiance_frag.glsl\";\nimport pbr_ibl_diffuse_frag from \"./ibl_diffuse_frag.glsl\";\nimport pbr_ibl_specular_frag from \"./ibl_specular_frag.glsl\";\nimport pbr_end_frag from \"./end_frag.glsl\";\n\nexport default {\n  pbr_common_frag_define,\n  pbr_util_frag_define,\n\n  pbr_envmap_light_frag_define,\n\n  pbr_base_frag_define,\n  pbr_texture_frag_define,\n\n  pbr_runtime_frag_define,\n\n  pbr_normal_frag_define,\n\n  pbr_brdf_cook_torrance_frag_define,\n\n  pbr_direct_irradiance_frag_define,\n  pbr_ibl_specular_frag_define,\n  pbr_ibl_diffuse_frag_define,\n\n  pbr_begin_frag,\n  pbr_direct_irradiance_frag,\n  pbr_ibl_diffuse_frag,\n  pbr_ibl_specular_frag,\n  pbr_end_frag\n};\n","import common from \"./common.glsl\";\nimport common_vert from \"./common_vert.glsl\";\nimport common_frag from \"./common_frag.glsl\";\n\nimport color_share from \"./color_share.glsl\";\nimport normal_share from \"./normal_share.glsl\";\nimport uv_share from \"./uv_share.glsl\";\nimport worldpos_share from \"./worldpos_share.glsl\";\nimport shadow_share from \"./shadow_share.glsl\";\nimport fog_share from \"./fog_share.glsl\";\n\nimport begin_normal_vert from \"./begin_normal_vert.glsl\";\nimport begin_position_vert from \"./begin_position_vert.glsl\";\n\nimport morph_target_vert from \"./morph_target_vert.glsl\";\n\nimport position_vert from \"./position_vert.glsl\";\nimport color_vert from \"./color_vert.glsl\";\nimport normal_vert from \"./normal_vert.glsl\";\nimport skinning_vert from \"./skinning_vert.glsl\";\nimport uv_vert from \"./uv_vert.glsl\";\nimport worldpos_vert from \"./worldpos_vert.glsl\";\nimport shadow_vert from \"./shadow_vert.glsl\";\nimport morph_vert from \"./morph_vert.glsl\";\nimport fog_vert from \"./fog_vert.glsl\";\n\nimport ambient_light_frag from \"./ambient_light_frag.glsl\";\nimport direct_light_frag from \"./direct_light_frag.glsl\";\nimport point_light_frag from \"./point_light_frag.glsl\";\nimport spot_light_frag from \"./spot_light_frag.glsl\";\nimport mobile_material_frag from \"./mobile_material_frag.glsl\";\nimport fog_frag from \"./fog_frag.glsl\";\n\nimport begin_mobile_frag from \"./begin_mobile_frag.glsl\";\nimport begin_normal_frag from \"./begin_normal_frag.glsl\";\nimport begin_viewdir_frag from \"./begin_viewdir_frag.glsl\";\n\nimport mobile_blinnphong_frag from \"./mobile_blinnphong_frag.glsl\";\nimport mobile_lambert_frag from \"./mobile_lambert_frag.glsl\";\n\nimport noise_common from \"./noise_common.glsl\";\nimport noise_cellular_2D from \"./noise_cellular_2D.glsl\";\nimport noise_cellular_2x2 from \"./noise_cellular_2x2.glsl\";\nimport noise_cellular_2x2x2 from \"./noise_cellular_2x2x2.glsl\";\nimport noise_cellular_3D from \"./noise_cellular_3D.glsl\";\nimport noise_cellular from \"./noise_cellular.glsl\";\nimport noise_perlin_2D from \"./noise_perlin_2D.glsl\";\nimport noise_perlin_3D from \"./noise_perlin_3D.glsl\";\nimport noise_perlin_4D from \"./noise_perlin_4D.glsl\";\nimport noise_perlin from \"./noise_perlin.glsl\";\nimport noise_psrd_2D from \"./noise_psrd_2D.glsl\";\nimport noise_simplex_2D from \"./noise_simplex_2D.glsl\";\nimport noise_simplex_3D_grad from \"./noise_simplex_3D_grad.glsl\";\nimport noise_simplex_3D from \"./noise_simplex_3D.glsl\";\nimport noise_simplex_4D from \"./noise_simplex_4D.glsl\";\nimport noise_simplex from \"./noise_simplex.glsl\";\n\nimport perturbation_share from \"./perturbation_share.glsl\";\nimport perturbation_frag from \"./perturbation_frag.glsl\";\nimport refraction_share from \"./refraction_share.glsl\";\nimport refraction_frag from \"./refraction_frag.glsl\";\n\nimport clipPlane_vert_define from \"./clipPlane_vert_define.glsl\";\nimport clipPlane_vert from \"./clipPlane_vert.glsl\";\nimport clipPlane_frag_define from \"./clipPlane_frag_define.glsl\";\nimport clipPlane_frag from \"./clipPlane_frag.glsl\";\n\nimport gamma_frag from \"./gamma_frag.glsl\";\n\nimport PBRShaderLib from \"./pbr\";\nimport oit_frag from \"./oit/oit_frag.glsl\";\nimport oit_frag_define from \"./oit/oit_frag_define.glsl\";\n\nexport const ShaderLib = {\n  common,\n  common_vert,\n  common_frag,\n\n  color_share,\n  normal_share,\n  uv_share,\n  worldpos_share,\n  shadow_share,\n  fog_share,\n\n  begin_normal_vert,\n  begin_position_vert,\n\n  morph_target_vert,\n\n  position_vert,\n  color_vert,\n  normal_vert,\n  skinning_vert,\n  uv_vert,\n  worldpos_vert,\n  shadow_vert,\n  morph_vert,\n  fog_vert,\n\n  ambient_light_frag,\n  direct_light_frag,\n  point_light_frag,\n  spot_light_frag,\n  mobile_material_frag,\n  fog_frag,\n\n  begin_mobile_frag,\n  begin_normal_frag,\n  begin_viewdir_frag,\n\n  mobile_blinnphong_frag,\n  mobile_lambert_frag,\n\n  noise_common,\n  noise_cellular_2D,\n  noise_cellular_2x2,\n  noise_cellular_2x2x2,\n  noise_cellular_3D,\n  noise_cellular,\n  noise_perlin_2D,\n  noise_perlin_3D,\n  noise_perlin_4D,\n  noise_perlin,\n  noise_psrd_2D,\n  noise_simplex_2D,\n  noise_simplex_3D_grad,\n  noise_simplex_3D,\n  noise_simplex_4D,\n  noise_simplex,\n\n  perturbation_share,\n  perturbation_frag,\n  refraction_share,\n  refraction_frag,\n\n  clipPlane_vert_define,\n  clipPlane_vert,\n  clipPlane_frag_define,\n  clipPlane_frag,\n\n  gamma_frag,\n\n  oit_frag,\n  oit_frag_define,\n\n  ...PBRShaderLib\n};\n\nexport function InjectShaderSlices(obj) {\n  Object.assign(ShaderLib, obj);\n}\n","import { ShaderLib, InjectShaderSlices } from \"./ShaderLib\";\nimport { Logger } from \"../base/Logger\";\n\nclass ShaderFactory {\n  /**\n   * GLSL version.\n   * @param {string} version - \"100\" | \"300 es\"\n   * */\n  static parseVersion(version: string = \"100\") {\n    return `#version ${version}\\n`;\n  }\n\n  static parsePrecision(vertP: string, fragP: string, compileVert?: boolean) {\n    const downgrade = \"mediump\";\n\n    return `\n        #ifdef GL_FRAGMENT_PRECISION_HIGH\n          precision ${compileVert ? vertP : fragP} float;\n          precision ${compileVert ? vertP : fragP} int;\n\n          #define O3_VERTEX_PRECISION ${vertP}\n          #define O3_FRAGMENT_PRECISION ${fragP}\n        #else\n          precision ${downgrade} float;\n          precision ${downgrade} int;\n\n          #define O3_VERTEX_PRECISION ${downgrade}\n          #define O3_FRAGMENT_PRECISION ${downgrade}\n        #endif\n      `;\n  }\n\n  static parseShaderName(name) {\n    return `#define O3_SHADER_NAME ${name}\\n`;\n  }\n\n  static parseAttributeMacros(macros) {\n    return (\n      \"#define O3_ATTRIBUTE_MACROS_START\\n\" +\n      macros.map((m) => `#define ${m}\\n`).join(\"\") +\n      \"#define O3_ATTRIBUTE_MACROS_END\\n\"\n    );\n  }\n\n  static parseCustomMacros(macros: string[]) {\n    return (\n      \"#define O3_CUSTOM_MACROS_START\\n\" +\n      macros.map((m) => `#define ${m}\\n`).join(\"\") +\n      \"#define O3_CUSTOM_MACROS_END\\n\"\n    );\n  }\n\n  static parseShader(src) {\n    return ShaderFactory.parseIncludes(src);\n  }\n\n  static parseIncludes(src) {\n    const regex = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n    function replace(match, slice) {\n      var replace = ShaderLib[slice];\n\n      if (replace === undefined) {\n        Logger.error(`Shader slice \"${match.trim()}\" not founded.`);\n        return \"\";\n      }\n\n      return ShaderFactory.parseIncludes(replace);\n    }\n\n    return src.replace(regex, replace);\n  }\n\n  static InjectShaderSlices(slices) {\n    InjectShaderSlices(slices);\n  }\n\n  /**\n   * GLSL extension.\n   * @param {string[]} extensions - such as [\"GL_EXT_shader_texture_lod\"]\n   * */\n  static parseExtension(extensions: string[]) {\n    return (\n      `#define O3_EXTENSION_START\\n` +\n      extensions.map((e) => `#extension ${e} : enable\\n`).join(\"\") +\n      `#define O3_EXTENSION_END\\n`\n    );\n  }\n\n  /**\n   * Convert lower GLSL version to GLSL 300 es.\n   * @param shader - code\n   * @param isFrag - Whether it is a fragment shader.\n   * */\n  static convertTo300(shader: string, isFrag?: boolean) {\n    /** replace attribute and in */\n    shader = shader.replace(/\\battribute\\b/g, \"in\");\n    shader = shader.replace(/\\bvarying\\b/g, isFrag ? \"in\" : \"out\");\n\n    /** replace api */\n    shader = shader.replace(/\\btexture(2D|Cube)\\s*\\(/g, \"texture(\");\n    shader = shader.replace(/\\btexture(2D|Cube)LodEXT\\s*\\(/g, \"textureLod(\");\n    if (isFrag) {\n      const isMRT = /\\bgl_FragData\\[.+?\\]/g.test(shader);\n      if (isMRT) {\n        shader = shader.replace(/\\bgl_FragColor\\b/g, \"gl_FragData[0]\");\n        const result = shader.match(/\\bgl_FragData\\[.+?\\]/g);\n        shader = this.replaceMRTShader(shader, result);\n      } else {\n        shader = shader.replace(/void\\s+?main\\s*\\(/g, `out vec4 glFragColor;\\nvoid main(`);\n        shader = shader.replace(/\\bgl_FragColor\\b/g, \"glFragColor\");\n      }\n    }\n\n    return shader;\n  }\n\n  /**\n   * Returns the length of the draw buffer in the corresponding shaderCode.\n   * @param shader - shader code\n   */\n  static getMaxDrawBuffers(shader: string): number {\n    const mrtIndexSet = new Set();\n    const result = shader.match(/\\bgl_FragData\\[.+?\\]/g) || [];\n\n    for (let i = 0; i < result.length; i++) {\n      const res = result[i].match(/\\bgl_FragData\\[(.+?)\\]/);\n      mrtIndexSet.add(res[1]);\n    }\n\n    return mrtIndexSet.size;\n  }\n\n  /**\n   * Compatible with gl_FragColor and gl_FragData simultaneous errors.\n   * */\n  static compatible(fragmentShader: string) {\n    const hasFragData = /\\bgl_FragData\\[.+?\\]/g.test(fragmentShader);\n    if (hasFragData) {\n      fragmentShader = fragmentShader.replace(/\\bgl_FragColor\\b/g, \"gl_FragData[0]\");\n    }\n    return fragmentShader;\n  }\n\n  private static replaceMRTShader(shader: string, result: string[]): string {\n    let declaration = \"\";\n    const mrtIndexSet = new Set();\n\n    for (let i = 0; i < result.length; i++) {\n      const res = result[i].match(/\\bgl_FragData\\[(.+?)\\]/);\n      mrtIndexSet.add(res[1]);\n    }\n\n    mrtIndexSet.forEach((index) => {\n      declaration += `layout(location=${index}) out vec4 fragOutColor${index};\\n`;\n    });\n    declaration += `void main(`;\n\n    shader = shader.replace(/\\bgl_FragData\\[(.+?)\\]/g, \"fragOutColor$1\");\n\n    shader = shader.replace(/void\\s+?main\\s*\\(/g, declaration);\n    return shader;\n  }\n}\n\nexport { ShaderFactory };\n","/**\n * Shader macro。\n */\nexport class ShaderMacro {\n  /** name */\n  readonly name: string;\n\n  /** @internal */\n  _index: number;\n  /** @internal */\n  _value: number;\n\n  /**\n   * @internal\n   */\n  constructor(name: string, index: number, value: number) {\n    this.name = name;\n    this._index = index;\n    this._value = value;\n  }\n}\n","/**\n * Shader data grouping.\n */\nexport enum ShaderDataGroup {\n  /** Scene group. */\n  Scene,\n  /** Camera group. */\n  Camera,\n  /** Renderer group. */\n  Renderer,\n  /** material group. */\n  Material\n}\n","import { Color, Matrix, Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { Engine } from \"../Engine\";\nimport { HardwareRenderer } from \"../HardwareRenderer\";\nimport { Texture } from \"../texture/Texture\";\nimport { ShaderPropertyValueType } from \"./ShaderData\";\n\n/**\n * Shader uniform。\n * @internal\n */\nexport class ShaderUniform {\n  name: string;\n  propertyId: number;\n  location: WebGLUniformLocation;\n  textureIndex: number | number[];\n  applyFunc: (shaderUniform: ShaderUniform, value: ShaderPropertyValueType) => void;\n  cacheValue: number | Vector2 | Vector3 | Vector4;\n\n  private _rhi: HardwareRenderer;\n  private _gl: WebGLRenderingContext;\n\n  constructor(engine: Engine) {\n    const rhi = engine._hardwareRenderer;\n    this._rhi = rhi;\n    this._gl = rhi.gl;\n  }\n\n  upload1f(shaderUniform: ShaderUniform, value: number): void {\n    if (this.cacheValue !== value) {\n      this._gl.uniform1f(shaderUniform.location, value);\n      this.cacheValue = value;\n    }\n  }\n\n  upload1fv(shaderUniform: ShaderUniform, value: Float32Array): void {\n    this._gl.uniform1fv(shaderUniform.location, value);\n  }\n\n  upload2f(shaderUniform: ShaderUniform, value: Vector2 | Vector3 | Vector4 | Color): void {\n    const cacheVaue = <Vector2>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (cacheVaue.x !== (<Color>value).r || cacheVaue.y !== (<Color>value).g) {\n        this._gl.uniform2f(shaderUniform.location, (<Color>value).r, (<Color>value).g);\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n      }\n    } else {\n      if (cacheVaue.x !== (<Vector2>value).x || cacheVaue.y !== (<Vector2>value).y) {\n        this._gl.uniform2f(shaderUniform.location, (<Vector2>value).x, (<Vector2>value).y);\n        cacheVaue.x = (<Vector2>value).x;\n        cacheVaue.y = (<Vector2>value).y;\n      }\n    }\n  }\n\n  upload2fv(shaderUniform: ShaderUniform, value: Float32Array): void {\n    this._gl.uniform2fv(shaderUniform.location, value);\n  }\n\n  upload3f(shaderUniform: ShaderUniform, value: Vector3 | Vector4 | Color): void {\n    const cacheVaue = <Vector3>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (cacheVaue.x !== (<Color>value).r || cacheVaue.y !== (<Color>value).g || cacheVaue.z !== (<Color>value).b) {\n        this._gl.uniform3f(shaderUniform.location, (<Color>value).r, (<Color>value).g, (<Color>value).b);\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n        cacheVaue.z = (<Color>value).b;\n      }\n    } else {\n      if (\n        cacheVaue.x !== (<Vector3>value).x ||\n        cacheVaue.y !== (<Vector3>value).y ||\n        cacheVaue.z !== (<Vector3>value).z\n      ) {\n        this._gl.uniform3f(shaderUniform.location, (<Vector3>value).x, (<Vector3>value).y, (<Vector3>value).z);\n        cacheVaue.x = (<Vector3>value).x;\n        cacheVaue.y = (<Vector3>value).y;\n        cacheVaue.z = (<Vector3>value).z;\n      }\n    }\n  }\n\n  upload3fv(shaderUniform: ShaderUniform, value: Float32Array): void {\n    this._gl.uniform3fv(shaderUniform.location, value);\n  }\n\n  upload4f(shaderUniform: ShaderUniform, value: Vector4 | Color): void {\n    const cacheVaue = <Vector4>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (\n        cacheVaue.x !== (<Color>value).r ||\n        cacheVaue.y !== (<Color>value).g ||\n        cacheVaue.z !== (<Color>value).b ||\n        cacheVaue.w !== (<Color>value).a\n      ) {\n        this._gl.uniform4f(\n          shaderUniform.location,\n          (<Color>value).r,\n          (<Color>value).g,\n          (<Color>value).b,\n          (<Color>value).a\n        );\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n        cacheVaue.z = (<Color>value).b;\n        cacheVaue.w = (<Color>value).a;\n      }\n    } else {\n      if (\n        cacheVaue.x !== (<Vector4>value).x ||\n        cacheVaue.y !== (<Vector4>value).y ||\n        cacheVaue.z !== (<Vector4>value).z ||\n        cacheVaue.w !== (<Vector4>value).w\n      ) {\n        this._gl.uniform4f(\n          shaderUniform.location,\n          (<Vector4>value).x,\n          (<Vector4>value).y,\n          (<Vector4>value).z,\n          (<Vector4>value).w\n        );\n        cacheVaue.x = (<Vector4>value).x;\n        cacheVaue.y = (<Vector4>value).y;\n        cacheVaue.z = (<Vector4>value).z;\n        cacheVaue.w = (<Vector4>value).w;\n      }\n    }\n  }\n\n  upload4fv(shaderUniform: ShaderUniform, value: Float32Array): void {\n    this._gl.uniform4fv(shaderUniform.location, value);\n  }\n\n  upload1i(shaderUniform: ShaderUniform, value: number): void {\n    if (this.cacheValue !== value) {\n      this._gl.uniform1i(shaderUniform.location, value);\n    }\n  }\n\n  upload1iv(shaderUniform: ShaderUniform, value: Int32Array): void {\n    this._gl.uniform1iv(shaderUniform.location, value);\n  }\n\n  upload2i(shaderUniform: ShaderUniform, value: Vector2 | Vector3 | Vector4 | Color): void {\n    const cacheVaue = <Vector2>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (cacheVaue.x !== (<Color>value).r || cacheVaue.y !== (<Color>value).g) {\n        this._gl.uniform2i(shaderUniform.location, (<Color>value).r, (<Color>value).g);\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n      }\n    } else {\n      if (cacheVaue.x !== (<Vector2>value).x || cacheVaue.y !== (<Vector2>value).y) {\n        this._gl.uniform2i(shaderUniform.location, (<Vector2>value).x, (<Vector2>value).y);\n        cacheVaue.x = (<Vector2>value).x;\n        cacheVaue.y = (<Vector2>value).y;\n      }\n    }\n  }\n\n  upload2iv(shaderUniform: ShaderUniform, value: Int32Array): void {\n    this._gl.uniform2iv(shaderUniform.location, value);\n  }\n\n  upload3i(shaderUniform: ShaderUniform, value: Vector3 | Vector4 | Color): void {\n    const cacheVaue = <Vector3>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (cacheVaue.x !== (<Color>value).r || cacheVaue.y !== (<Color>value).g || cacheVaue.z !== (<Color>value).b) {\n        this._gl.uniform3i(shaderUniform.location, (<Color>value).r, (<Color>value).g, (<Color>value).b);\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n        cacheVaue.z = (<Color>value).b;\n      }\n    } else {\n      if (\n        cacheVaue.x !== (<Vector3>value).x ||\n        cacheVaue.y !== (<Vector3>value).y ||\n        cacheVaue.z !== (<Vector3>value).z\n      ) {\n        this._gl.uniform3i(shaderUniform.location, (<Vector3>value).x, (<Vector3>value).y, (<Vector3>value).z);\n        cacheVaue.x = (<Vector3>value).x;\n        cacheVaue.y = (<Vector3>value).y;\n        cacheVaue.z = (<Vector3>value).z;\n      }\n    }\n  }\n  upload3iv(shaderUniform: ShaderUniform, value: Int32Array): void {\n    this._gl.uniform3iv(shaderUniform.location, value);\n  }\n  upload4i(shaderUniform: ShaderUniform, value: Vector4 | Color): void {\n    const cacheVaue = <Vector4>this.cacheValue;\n    if ((<Color>value).r !== undefined) {\n      if (\n        cacheVaue.x !== (<Color>value).r ||\n        cacheVaue.y !== (<Color>value).g ||\n        cacheVaue.z !== (<Color>value).b ||\n        cacheVaue.w !== (<Color>value).a\n      ) {\n        this._gl.uniform4i(\n          shaderUniform.location,\n          (<Color>value).r,\n          (<Color>value).g,\n          (<Color>value).b,\n          (<Color>value).a\n        );\n        cacheVaue.x = (<Color>value).r;\n        cacheVaue.y = (<Color>value).g;\n        cacheVaue.z = (<Color>value).b;\n        cacheVaue.w = (<Color>value).a;\n      }\n    } else {\n      if (\n        cacheVaue.x !== (<Vector4>value).x ||\n        cacheVaue.y !== (<Vector4>value).y ||\n        cacheVaue.z !== (<Vector4>value).z ||\n        cacheVaue.w !== (<Vector4>value).w\n      ) {\n        this._gl.uniform4i(\n          shaderUniform.location,\n          (<Vector4>value).x,\n          (<Vector4>value).y,\n          (<Vector4>value).z,\n          (<Vector4>value).w\n        );\n        cacheVaue.x = (<Vector4>value).x;\n        cacheVaue.y = (<Vector4>value).y;\n        cacheVaue.z = (<Vector4>value).z;\n        cacheVaue.w = (<Vector4>value).w;\n      }\n    }\n  }\n\n  upload4iv(shaderUniform: ShaderUniform, value: Int32Array): void {\n    this._gl.uniform4iv(shaderUniform.location, value);\n  }\n\n  uploadMat4(shaderUniform: ShaderUniform, value: Matrix): void {\n    this._gl.uniformMatrix4fv(shaderUniform.location, false, value.elements);\n  }\n\n  uploadMat4v(shaderUniform: ShaderUniform, value: Float32Array): void {\n    this._gl.uniformMatrix4fv(shaderUniform.location, false, value);\n  }\n\n  uploadTexture(shaderUniform: ShaderUniform, value: Texture): void {\n    const rhi = this._rhi;\n    rhi.activeTexture(shaderUniform.textureIndex as number);\n    rhi.bindTexture(value._target, value._glTexture);\n  }\n\n  uploadTextureArray(shaderUniform: ShaderUniform, value: Texture[]): void {\n    const rhi = this._rhi;\n    const textureIndices = shaderUniform.textureIndex as number[];\n    for (let i = 0; i < value.length; i++) {\n      const texture = value[i];\n      rhi.activeTexture(textureIndices[i]);\n      rhi.bindTexture(texture._target, texture._glTexture);\n    }\n  }\n}\n","import { ShaderUniform } from \"./ShaderUniform\";\n\n/**\n * Shader uniform block.\n * @internal\n */\nexport class ShaderUniformBlock {\n  readonly constUniforms: ShaderUniform[] = [];\n  readonly textureUniforms: ShaderUniform[] = [];\n}\n","import { Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { Engine } from \"../Engine\";\nimport { HardwareRenderer } from \"../HardwareRenderer\";\nimport { Material } from \"../material/Material\";\nimport { Renderer } from \"../Renderer\";\nimport { ShaderDataGroup } from \"./enums/ShaderDataGroup\";\nimport { Shader } from \"./Shader\";\nimport { ShaderData } from \"./ShaderData\";\nimport { ShaderUniform } from \"./ShaderUniform\";\nimport { ShaderUniformBlock } from \"./ShaderUniformBlock\";\n\n/**\n * Shader program, corresponding to the GPU shader program.\n * @internal\n */\nexport class ShaderProgram {\n  private static _counter: number = 0;\n\n  private static _addLineNum(str: string) {\n    const lines = str.split(\"\\n\");\n    const limitLength = (lines.length + 1).toString().length + 6;\n    let prefix;\n    return lines\n      .map((line, index) => {\n        prefix = `0:${index + 1}`;\n        if (prefix.length >= limitLength) return prefix.substring(0, limitLength) + line;\n\n        for (let i = 0; i < limitLength - prefix.length; i++) prefix += \" \";\n\n        return prefix + line;\n      })\n      .join(\"\\n\");\n  }\n\n  id: number;\n\n  readonly sceneUniformBlock: ShaderUniformBlock = new ShaderUniformBlock();\n  readonly cameraUniformBlock: ShaderUniformBlock = new ShaderUniformBlock();\n  readonly rendererUniformBlock: ShaderUniformBlock = new ShaderUniformBlock();\n  readonly materialUniformBlock: ShaderUniformBlock = new ShaderUniformBlock();\n  readonly otherUniformBlock: ShaderUniformBlock = new ShaderUniformBlock();\n\n  /** @internal */\n  _uploadRenderCount: number = -1;\n  /** @internal */\n  _uploadCamera: Camera;\n  /** @internal */\n  _uploadRenderer: Renderer;\n  /** @internal */\n  _uploadMaterial: Material;\n\n  attributeLocation: Record<string, GLint> = Object.create(null);\n\n  // @todo: move to RHI.\n  private _isValid: boolean;\n  private _engine: Engine;\n  private _gl: WebGLRenderingContext;\n  private _vertexShader: WebGLShader;\n  private _fragmentShader: WebGLShader;\n  private _glProgram: WebGLProgram;\n  private _activeTextureUint: number = 0;\n\n  /**\n   * Whether this shader program is valid.\n   * @readonly\n   */\n  get isValid(): boolean {\n    return this._isValid;\n  }\n\n  constructor(engine: Engine, vertexSource: string, fragmentSource: string) {\n    this._engine = engine;\n    this._gl = engine._hardwareRenderer.gl;\n    this._glProgram = this._createProgram(vertexSource, fragmentSource);\n\n    if (this._glProgram) {\n      this._isValid = true;\n      this._recordLocation();\n    } else {\n      this._isValid = false;\n    }\n\n    this.id = ShaderProgram._counter++;\n  }\n\n  /**\n   * Upload all shader data in shader uniform block.\n   * @param uniformBlock - shader Uniform block\n   * @param shaderData - shader data\n   */\n  uploadAll(uniformBlock: ShaderUniformBlock, shaderData: ShaderData): void {\n    this.uploadUniforms(uniformBlock, shaderData);\n    this.uploadTextures(uniformBlock, shaderData);\n  }\n\n  /**\n   * Upload constant shader data in shader uniform block.\n   * @param uniformBlock - shader Uniform block\n   * @param shaderData - shader data\n   */\n  uploadUniforms(uniformBlock: ShaderUniformBlock, shaderData: ShaderData): void {\n    const properties = shaderData._properties;\n    const constUniforms = uniformBlock.constUniforms;\n\n    for (let i = 0, n = constUniforms.length; i < n; i++) {\n      const uniform = constUniforms[i];\n      const data = properties[uniform.propertyId];\n      data != null && uniform.applyFunc(uniform, data);\n    }\n  }\n\n  /**\n   * Upload texture shader data in shader uniform block.\n   * @param uniformBlock - shader Uniform block\n   * @param shaderData - shader data\n   */\n  uploadTextures(uniformBlock: ShaderUniformBlock, shaderData: ShaderData): void {\n    const properties = shaderData._properties;\n    const textureUniforms = uniformBlock.textureUniforms;\n    // textureUniforms property maybe null if ShaderUniformBlock not contain any texture.\n    if (textureUniforms) {\n      for (let i = 0, n = textureUniforms.length; i < n; i++) {\n        const uniform = textureUniforms[i];\n        uniform.applyFunc(uniform, properties[uniform.propertyId]);\n      }\n    }\n  }\n\n  /**\n   * Groupping other data.\n   */\n  groupingOtherUniformBlock() {\n    const { constUniforms, textureUniforms } = this.otherUniformBlock;\n    constUniforms.length > 0 && this._groupingSubOtherUniforms(constUniforms, false);\n    textureUniforms.length > 0 && this._groupingSubOtherUniforms(textureUniforms, true);\n  }\n\n  /**\n   * Bind this shader program.\n   * @returns Whether the shader program is switched.\n   */\n  bind(): boolean {\n    const rhi: HardwareRenderer = this._engine._hardwareRenderer;\n    if (rhi._currentBind !== this) {\n      this._gl.useProgram(this._glProgram);\n      rhi._currentBind = this;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Destroy this shader program.\n   */\n  destroy(): void {\n    const gl = this._gl;\n    this._vertexShader && gl.deleteShader(this._vertexShader);\n    this._fragmentShader && gl.deleteShader(this._fragmentShader);\n    this._glProgram && gl.deleteProgram(this._glProgram);\n  }\n\n  private _groupingSubOtherUniforms(unifroms: ShaderUniform[], isTexture: boolean) {\n    for (let i = unifroms.length - 1; i >= 0; i--) {\n      const uniform = unifroms[i];\n      const group = Shader._getShaderPropertyGroup(uniform.name);\n      if (group !== undefined) {\n        unifroms.splice(unifroms.indexOf(uniform), 1);\n        this._groupingUniform(uniform, group, isTexture);\n      }\n    }\n  }\n\n  private _groupingUniform(uniform: ShaderUniform, group: ShaderDataGroup, isTexture: boolean): void {\n    switch (group) {\n      case ShaderDataGroup.Scene:\n        if (isTexture) {\n          this.sceneUniformBlock.textureUniforms.push(uniform);\n        } else {\n          this.sceneUniformBlock.constUniforms.push(uniform);\n        }\n        break;\n      case ShaderDataGroup.Camera:\n        if (isTexture) {\n          this.cameraUniformBlock.textureUniforms.push(uniform);\n        } else {\n          this.cameraUniformBlock.constUniforms.push(uniform);\n        }\n        break;\n      case ShaderDataGroup.Renderer:\n        if (isTexture) {\n          this.rendererUniformBlock.textureUniforms.push(uniform);\n        } else {\n          this.rendererUniformBlock.constUniforms.push(uniform);\n        }\n        break;\n      case ShaderDataGroup.Material:\n        if (isTexture) {\n          this.materialUniformBlock.textureUniforms.push(uniform);\n        } else {\n          this.materialUniformBlock.constUniforms.push(uniform);\n        }\n        break;\n      default:\n        if (isTexture) {\n          this.otherUniformBlock.textureUniforms.push(uniform);\n        } else {\n          this.otherUniformBlock.constUniforms.push(uniform);\n        }\n    }\n  }\n\n  /**\n   * init and link program with shader.\n   */\n  private _createProgram(vertexSource: string, fragmentSource: string): WebGLProgram | null {\n    const gl = this._gl;\n\n    // create and compile shader\n    const vertexShader = this._createShader(gl.VERTEX_SHADER, vertexSource);\n    if (!vertexShader) {\n      return null;\n    }\n\n    const fragmentShader = this._createShader(gl.FRAGMENT_SHADER, fragmentSource);\n    if (!fragmentShader) {\n      return null;\n    }\n\n    // link program and shader\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    gl.validateProgram(program);\n\n    if (gl.isContextLost()) {\n      Logger.error(\"Contex lost while linking program.\");\n      gl.deleteShader(vertexShader);\n      gl.deleteShader(fragmentShader);\n      return null;\n    }\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      Logger.error(\"Could not link WebGL program. \\n\" + gl.getProgramInfoLog(program));\n      gl.deleteProgram(program);\n      return null;\n    }\n\n    this._vertexShader = vertexShader;\n    this._fragmentShader = fragmentShader;\n    return program;\n  }\n\n  private _createShader(shaderType: number, shaderSource: string): WebGLShader | null {\n    const gl = this._gl;\n    const shader = gl.createShader(shaderType);\n\n    if (!shader) {\n      Logger.error(\"Context lost while create shader.\");\n      return null;\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    if (gl.isContextLost()) {\n      Logger.error(\"Context lost while compiling shader.\");\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      Logger.error(\n        `Could not compile WebGL shader.\\n${gl.getShaderInfoLog(shader)}`,\n        ShaderProgram._addLineNum(shaderSource)\n      );\n      gl.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  /**\n   * record the location of uniform/attribute.\n   */\n  private _recordLocation() {\n    const gl = this._gl;\n    const program = this._glProgram;\n    const uniformInfos = this._getUniformInfos();\n    const attributeInfos = this._getAttributeInfos();\n\n    uniformInfos.forEach(({ name, size, type }) => {\n      const shaderUniform = new ShaderUniform(this._engine);\n      let isArray = false;\n      let isTexture = false;\n\n      if (name.indexOf(\"[0]\") > 0) {\n        name = name.substr(0, name.length - 3);\n        isArray = true;\n      }\n\n      const group = Shader._getShaderPropertyGroup(name);\n      const location = gl.getUniformLocation(program, name);\n      shaderUniform.name = name;\n      shaderUniform.propertyId = Shader.getPropertyByName(name)._uniqueId;\n      shaderUniform.location = location;\n\n      switch (type) {\n        case gl.FLOAT:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload1fv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload1f;\n            shaderUniform.cacheValue = 0;\n          }\n          break;\n        case gl.FLOAT_VEC2:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload2fv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload2f;\n            shaderUniform.cacheValue = new Vector2(0, 0);\n          }\n          break;\n        case gl.FLOAT_VEC3:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload3fv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload3f;\n            shaderUniform.cacheValue = new Vector3(0, 0, 0);\n          }\n          break;\n        case gl.FLOAT_VEC4:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload4fv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload4f;\n            shaderUniform.cacheValue = new Vector4(0, 0, 0, 0);\n          }\n          break;\n        case gl.BOOL:\n        case gl.INT:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload1iv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload1i;\n            shaderUniform.cacheValue = 0;\n          }\n          break;\n        case gl.BOOL_VEC2:\n        case gl.INT_VEC2:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload2iv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload2i;\n            shaderUniform.cacheValue = new Vector2(0, 0);\n          }\n          break;\n        case gl.BOOL_VEC3:\n        case gl.INT_VEC3:\n          if (isArray) {\n          } else {\n          }\n          shaderUniform.applyFunc = isArray ? shaderUniform.upload3iv : shaderUniform.upload3i;\n          shaderUniform.cacheValue = new Vector3(0, 0, 0);\n          break;\n        case gl.BOOL_VEC4:\n        case gl.INT_VEC4:\n          if (isArray) {\n            shaderUniform.applyFunc = shaderUniform.upload4iv;\n          } else {\n            shaderUniform.applyFunc = shaderUniform.upload4i;\n            shaderUniform.cacheValue = new Vector4(0, 0, 0);\n          }\n          break;\n        case gl.FLOAT_MAT4:\n          shaderUniform.applyFunc = isArray ? shaderUniform.uploadMat4v : shaderUniform.uploadMat4;\n          break;\n        case gl.SAMPLER_2D:\n        case gl.SAMPLER_CUBE:\n          isTexture = true;\n          if (isArray) {\n            const textureIndices = new Int32Array(size);\n            const glTextureIndices = new Array<number>(size);\n            for (let i = 0; i < size; i++) {\n              textureIndices[i] = this._activeTextureUint;\n              glTextureIndices[i] = gl.TEXTURE0 + this._activeTextureUint++;\n            }\n            shaderUniform.textureIndex = glTextureIndices;\n            shaderUniform.applyFunc = shaderUniform.uploadTextureArray;\n            this.bind();\n            gl.uniform1iv(location, textureIndices);\n          } else {\n            const textureIndex = gl.TEXTURE0 + this._activeTextureUint;\n            shaderUniform.textureIndex = textureIndex;\n            shaderUniform.applyFunc = shaderUniform.uploadTexture;\n            this.bind();\n            gl.uniform1i(location, this._activeTextureUint++);\n          }\n          break;\n      }\n      this._groupingUniform(shaderUniform, group, isTexture);\n    });\n\n    attributeInfos.forEach(({ name }) => {\n      this.attributeLocation[name] = gl.getAttribLocation(program, name);\n    });\n  }\n\n  private _getUniformInfos(): WebGLActiveInfo[] {\n    const gl = this._gl;\n    const program = this._glProgram;\n    const uniformInfos: WebGLActiveInfo[] = [];\n\n    const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < uniformCount; ++i) {\n      const info = gl.getActiveUniform(program, i);\n      uniformInfos[i] = info;\n    }\n\n    return uniformInfos;\n  }\n\n  private _getAttributeInfos(): WebGLActiveInfo[] {\n    const gl = this._gl;\n    const program = this._glProgram;\n    const attributeInfos: WebGLActiveInfo[] = [];\n\n    const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n    for (let i = 0; i < attributeCount; ++i) {\n      const info = gl.getActiveAttrib(program, i);\n      attributeInfos[i] = info;\n    }\n\n    return attributeInfos;\n  }\n}\n","import { ShaderDataGroup } from \"./enums/ShaderDataGroup\";\n\n/**\n * Shader property.\n */\nexport class ShaderProperty {\n  private static _propertyNameCounter: number = 0;\n\n  /** @internal */\n  _uniqueId: number;\n  /** @internal */\n  _group: ShaderDataGroup;\n\n  /**\n   * @internal\n   */\n  constructor() {\n    this._uniqueId = ShaderProperty._propertyNameCounter++;\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { RenderQueue } from \"../RenderPipeline/RenderQueue\";\nimport { ShaderFactory } from \"../shaderlib/ShaderFactory\";\nimport { ShaderDataGroup } from \"./enums/ShaderDataGroup\";\nimport { ShaderMacro } from \"./ShaderMacro\";\nimport { ShaderMacroCollection } from \"./ShaderMacroCollection\";\nimport { ShaderProgram } from \"./ShaderProgram\";\nimport { ShaderProperty } from \"./ShaderProperty\";\n\n/**\n * Shader containing vertex and fragment source.\n */\nexport class Shader {\n  private static _shaderCounter: number = 0;\n  private static _shaderMap: Record<string, Shader> = Object.create(null);\n  private static _propertyNameMap: Record<string, ShaderProperty> = Object.create(null);\n  private static _macroMaskMap: string[][] = [];\n  private static _macroCounter: number = 0;\n  private static _macroMap: Record<string, ShaderMacro> = Object.create(null);\n  private static _shaderExtension = [\"GL_EXT_shader_texture_lod\", \"GL_OES_standard_derivatives\", \"GL_EXT_draw_buffers\"];\n\n  /**\n   * Create a shader.\n   * @param name - Name of the shader\n   * @param vertexSource - Vertex source code\n   * @param fragmentSource - Fragment source code\n   */\n  static create(name: string, vertexSource: string, fragmentSource: string): Shader {\n    const shaderMap = Shader._shaderMap;\n    if (shaderMap[name]) {\n      throw `Shader named \"${name}\" already exists.`;\n    }\n    return (shaderMap[name] = new Shader(name, vertexSource, fragmentSource));\n  }\n\n  /**\n   * Find a shader by name.\n   * @param name - Name of the shader\n   */\n  static find(name: string): Shader {\n    return Shader._shaderMap[name];\n  }\n\n  /**\n   * Get shader macro by name.\n   * @param name - Name of the shader macro\n   * @returns Shader macro\n   */\n  static getMacroByName(name: string): ShaderMacro {\n    let macro = Shader._macroMap[name];\n    if (!macro) {\n      const maskMap = Shader._macroMaskMap;\n      const counter = Shader._macroCounter;\n      const index = Math.floor(counter / 32);\n      const bit = counter % 32;\n      macro = new ShaderMacro(name, index, 1 << bit);\n      Shader._macroMap[name] = macro;\n      if (index == maskMap.length) {\n        maskMap.length++;\n        maskMap[index] = new Array<string>(32);\n      }\n      maskMap[index][bit] = name;\n      Shader._macroCounter++;\n    }\n    return macro;\n  }\n\n  /**\n   * Get shader property by name.\n   * @param name - Name of the shader property\n   * @returns Shader property\n   */\n  static getPropertyByName(name: string): ShaderProperty {\n    const propertyNameMap = Shader._propertyNameMap;\n    if (propertyNameMap[name] != null) {\n      return propertyNameMap[name];\n    } else {\n      const property = new ShaderProperty();\n      propertyNameMap[name] = property;\n      return property;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getShaderPropertyGroup(propertyName: string): ShaderDataGroup | null {\n    const shaderProperty = Shader._propertyNameMap[propertyName];\n    return shaderProperty?._group;\n  }\n\n  private static _getNamesByMacros(macros: ShaderMacroCollection, out: string[]): void {\n    const maskMap = Shader._macroMaskMap;\n    const mask = macros._mask;\n    out.length = 0;\n    for (let i = 0, n = macros._length; i < n; i++) {\n      const subMaskMap = maskMap[i];\n      const subMask = mask[i];\n      const n = subMask < 0 ? 32 : Math.floor(Math.log2(subMask)) + 1; // if is negative must contation 1 << 31.\n      for (let j = 0; j < n; j++) {\n        if (subMask & (1 << j)) {\n          out.push(subMaskMap[j]);\n        }\n      }\n    }\n  }\n\n  /** The name of shader. */\n  readonly name: string;\n\n  /** @internal */\n  _shaderId: number = 0;\n\n  private _vertexSource: string;\n  private _fragmentSource: string;\n\n  private constructor(name: string, vertexSource: string, fragmentSource: string) {\n    this._shaderId = Shader._shaderCounter++;\n    this.name = name;\n    this._vertexSource = vertexSource;\n    this._fragmentSource = fragmentSource;\n  }\n\n  /**\n   * Compile shader variant by macro name list.\n   *\n   * @remarks\n   * Usually a shader contains some macros,any combination of macros is called shader variant.\n   *\n   * @param engine - Engine to which the shader variant belongs\n   * @param macros - Macro name list\n   */\n  compileVariant(engine: Engine, macros: string[]): void {\n    const compileMacros = RenderQueue.compileMacros;\n    compileMacros.clear();\n    for (let i = 0, n = macros.length; i < n; i++) {\n      compileMacros.enable(Shader.getMacroByName(macros[i]));\n    }\n    this._getShaderProgram(engine, compileMacros);\n  }\n\n  /**\n   * @internal\n   */\n  _getShaderProgram(engine: Engine, macroCollection: ShaderMacroCollection): ShaderProgram {\n    const shaderProgramPool = engine._getShaderProgramPool(this);\n    let shaderProgram = shaderProgramPool.get(macroCollection);\n    if (shaderProgram) {\n      return shaderProgram;\n    }\n\n    const isWebGL2: boolean = engine._hardwareRenderer.isWebGL2;\n    const macroNameList = [];\n    Shader._getNamesByMacros(macroCollection, macroNameList);\n    const macroNameStr = ShaderFactory.parseCustomMacros(macroNameList);\n    const shaderNameStr = ShaderFactory.parseShaderName(this.name || \"VOID\");\n    const versionStr = isWebGL2 ? \"#version 300 es\" : \"#version 100\";\n    const precisionStr = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      precision highp int;\n      #define O3_VERTEX_PRECISION highp\n      #define O3_FRAGMENT_PRECISION highp\n    #else\n      precision mediump float;\n      precision mediump int;\n      #define O3_VERTEX_PRECISION mediump\n      #define O3_FRAGMENT_PRECISION mediump\n    #endif\n    `;\n\n    let vertexSource = ShaderFactory.parseShader(\n      ` ${versionStr}\n        ${shaderNameStr}\n        ${precisionStr}\n        ${macroNameStr}\n        ` + this._vertexSource\n    );\n\n    let fragmentSource = ShaderFactory.parseShader(\n      ` ${versionStr}\n        ${shaderNameStr}\n        ${isWebGL2 ? \"\" : ShaderFactory.parseExtension(Shader._shaderExtension)}\n        ${precisionStr}\n        ${macroNameStr}\n      ` + this._fragmentSource\n    );\n\n    if (isWebGL2) {\n      vertexSource = ShaderFactory.convertTo300(vertexSource);\n      fragmentSource = ShaderFactory.convertTo300(fragmentSource, true);\n    }\n\n    shaderProgram = new ShaderProgram(engine, vertexSource, fragmentSource);\n\n    shaderProgramPool.cache(shaderProgram);\n    return shaderProgram;\n  }\n}\n","import { Matrix } from \"@oasis-engine/math\";\nimport { Component } from \"../Component\";\nimport { LightFeature } from \"./LightFeature\";\n\n/**\n * Light base class.\n */\nexport class Light extends Component {\n  /**\n   * Each type of light source is at most 10, beyond which it will not take effect.\n   * */\n  protected static _maxLight: number = 10;\n\n  private _viewMat: Matrix;\n  private _inverseViewMat: Matrix;\n\n  /**\n   * Mount to the current Scene.\n   * @internal\n   * @override\n   */\n  _onEnable() {\n    this.scene.findFeature(LightFeature).attachRenderLight(this);\n  }\n\n  /**\n   * Unmount from the current Scene.\n   * @internal\n   * @override\n   */\n  _onDisable() {\n    this.scene.findFeature(LightFeature).detachRenderLight(this);\n  }\n\n  /**\n   * View matrix.\n   * @readonly\n   */\n  get viewMatrix() {\n    if (!this._viewMat) this._viewMat = new Matrix();\n    Matrix.invert(this.entity.transform.worldMatrix, this._viewMat);\n    return this._viewMat;\n  }\n\n  /**\n   * Inverse view matrix.\n   * @readonly\n   */\n  get inverseViewMatrix() {\n    if (!this._inverseViewMat) this._inverseViewMat = new Matrix();\n    Matrix.invert(this.viewMatrix, this._inverseViewMat);\n    return this._inverseViewMat;\n  }\n}\n","import { Color } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\nimport { Shader } from \"../shader\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { Light } from \"./Light\";\n\n/**\n * Ambient light.\n */\nexport class AmbientLight extends Light {\n  private static _colorProperty: ShaderProperty = Shader.getPropertyByName(\"u_ambientLightColor\");\n\n  /**\n   * Ambient light color.\n   */\n  get color(): Color {\n    return this._color;\n  }\n\n  set color(value: Color) {\n    this._color = value;\n    this.scene.shaderData.setColor(AmbientLight._colorProperty, this.lightColor);\n  }\n\n  /**\n   * Ambient light intensity.\n   */\n  get intensity(): number {\n    return this._intensity;\n  }\n\n  set intensity(value: number) {\n    this._intensity = value;\n    this.scene.shaderData.setColor(AmbientLight._colorProperty, this.lightColor);\n  }\n\n  /**\n   * Get the final light color.\n   * @readonly\n   */\n  get lightColor(): Color {\n    this._lightColor.r = this._color.r * this._intensity;\n    this._lightColor.g = this._color.g * this._intensity;\n    this._lightColor.b = this._color.b * this._intensity;\n    this._lightColor.a = this._color.a * this._intensity;\n    return this._lightColor;\n  }\n\n  private _color: Color = new Color(1, 1, 1, 1);\n  private _intensity: number = 1;\n  private _lightColor: Color = new Color(1, 1, 1, 1);\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.color = this._color;\n  }\n}\n","import { Color, Vector3 } from \"@oasis-engine/math\";\nimport { Shader } from \"../shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { Light } from \"./Light\";\n\n/**\n * Directional light.\n */\nexport class DirectLight extends Light {\n  private static _colorProperty: ShaderProperty = Shader.getPropertyByName(\"u_directLightColor\");\n  private static _directionProperty: ShaderProperty = Shader.getPropertyByName(\"u_directLightDirection\");\n\n  private static _combinedData = {\n    color: new Float32Array(3 * Light._maxLight),\n    direction: new Float32Array(3 * Light._maxLight)\n  };\n\n  /**\n   * @internal\n   */\n  static _updateShaderData(shaderData: ShaderData): void {\n    const data = DirectLight._combinedData;\n\n    shaderData.setFloatArray(DirectLight._colorProperty, data.color);\n    shaderData.setFloatArray(DirectLight._directionProperty, data.direction);\n  }\n\n  color: Color = new Color(1, 1, 1, 1);\n  intensity: number = 1;\n\n  private _forward: Vector3 = new Vector3();\n  private _lightColor: Color = new Color(1, 1, 1, 1);\n  private _reverseDirection: Vector3 = new Vector3();\n\n  /**\n   * Get direction.\n   * @readonly\n   */\n  get direction(): Vector3 {\n    this.entity.transform.getWorldForward(this._forward);\n    return this._forward;\n  }\n\n  /**\n   * Get the final light color.\n   * @readonly\n   */\n  get lightColor(): Color {\n    this._lightColor.r = this.color.r * this.intensity;\n    this._lightColor.g = this.color.g * this.intensity;\n    this._lightColor.b = this.color.b * this.intensity;\n    this._lightColor.a = this.color.a * this.intensity;\n    return this._lightColor;\n  }\n\n  /**\n   * Get the opposite direction of the directional light direction.\n   * @readonly\n   */\n  get reverseDirection(): Vector3 {\n    Vector3.scale(this.direction, -1, this._reverseDirection);\n    return this._reverseDirection;\n  }\n\n  /**\n   * @internal\n   */\n  _appendData(lightIndex: number): void {\n    const colorStart = lightIndex * 3;\n    const directionStart = lightIndex * 3;\n    const lightColor = this.lightColor;\n    const direction = this.direction;\n\n    const data = DirectLight._combinedData;\n\n    data.color[colorStart] = lightColor.r;\n    data.color[colorStart + 1] = lightColor.g;\n    data.color[colorStart + 2] = lightColor.b;\n    data.direction[directionStart] = direction.x;\n    data.direction[directionStart + 1] = direction.y;\n    data.direction[directionStart + 2] = direction.z;\n  }\n}\n","import { Color } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\nimport { Shader } from \"../shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { ShaderMacro } from \"../shader/ShaderMacro\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { TextureCubeMap } from \"../texture\";\nimport { Light } from \"./Light\";\n\n/**\n * Environment light.\n */\nexport class EnvironmentMapLight extends Light {\n  private static _diffuseMacro: ShaderMacro = Shader.getMacroByName(\"O3_USE_DIFFUSE_ENV\");\n  private static _specularMacro: ShaderMacro = Shader.getMacroByName(\"O3_USE_SPECULAR_ENV\");\n  private static _diffuseTextureProperty: ShaderProperty = Shader.getPropertyByName(\"u_env_diffuseSampler\");\n  private static _specularTextureProperty: ShaderProperty = Shader.getPropertyByName(\"u_env_specularSampler\");\n  private static _mipLevelProperty: ShaderProperty = Shader.getPropertyByName(\"u_envMapLight.mipMapLevel\");\n  private static _diffuseColorProperty: ShaderProperty = Shader.getPropertyByName(\"u_envMapLight.diffuse\");\n  private static _specularColorProperty: ShaderProperty = Shader.getPropertyByName(\"u_envMapLight.specular\");\n  private static _diffuseIntensityProperty: ShaderProperty = Shader.getPropertyByName(\"u_envMapLight.diffuseIntensity\");\n  private static _specularIntensityProperty: ShaderProperty = Shader.getPropertyByName(\n    \"u_envMapLight.specularIntensity\"\n  );\n  private static _transformMatrixProperty: ShaderProperty = Shader.getPropertyByName(\"u_envMapLight.transformMatrix\");\n\n  /**\n   * @internal\n   */\n  static _updateShaderData(shaderData: ShaderData, light: EnvironmentMapLight): void {\n    // support rotation\n    const transformMatrix = light.entity.transform.worldMatrix;\n    shaderData.setMatrix(EnvironmentMapLight._transformMatrixProperty, transformMatrix);\n  }\n\n  /**\n   * Diffuse cube texture.\n   */\n  get diffuseTexture(): TextureCubeMap {\n    return this._diffuseTexture;\n  }\n\n  set diffuseTexture(value: TextureCubeMap) {\n    this._diffuseTexture = value;\n    const shaderData = this.scene.shaderData;\n\n    if (value) {\n      shaderData.setTexture(EnvironmentMapLight._diffuseTextureProperty, value);\n      shaderData.enableMacro(EnvironmentMapLight._diffuseMacro);\n    } else {\n      shaderData.disableMacro(EnvironmentMapLight._diffuseMacro);\n    }\n  }\n\n  /**\n   * Specular cube texture.\n   */\n  get specularTexture(): TextureCubeMap {\n    return this._specularTexture;\n  }\n\n  set specularTexture(value: TextureCubeMap) {\n    this._specularTexture = value;\n    const shaderData = this.scene.shaderData;\n\n    if (value) {\n      shaderData.setTexture(EnvironmentMapLight._specularTextureProperty, value);\n      shaderData.setFloat(EnvironmentMapLight._mipLevelProperty, this.specularTexture.mipmapCount);\n      shaderData.enableMacro(EnvironmentMapLight._specularMacro);\n    } else {\n      shaderData.disableMacro(EnvironmentMapLight._specularMacro);\n    }\n  }\n\n  /**\n   * Diffuse color.\n   */\n  get diffuseColor(): Color {\n    return this._diffuseColor;\n  }\n\n  set diffuseColor(value: Color) {\n    this._diffuseColor = value;\n\n    this.scene.shaderData.setColor(EnvironmentMapLight._diffuseColorProperty, value);\n  }\n\n  /**\n   * Specular color.\n   */\n  get specularColor(): Color {\n    return this._specularColor;\n  }\n\n  set specularColor(value: Color) {\n    this._specularColor = value;\n\n    this.scene.shaderData.setColor(EnvironmentMapLight._specularColorProperty, value);\n  }\n\n  /**\n   * Diffuse intensity.\n   */\n  get diffuseIntensity(): number {\n    return this._diffuseIntensity;\n  }\n\n  set diffuseIntensity(value: number) {\n    this._diffuseIntensity = value;\n\n    this.scene.shaderData.setFloat(EnvironmentMapLight._diffuseIntensityProperty, value);\n  }\n\n  /**\n   * Specular intensity.\n   */\n  get specularIntensity(): number {\n    return this._specularIntensity;\n  }\n\n  set specularIntensity(value: number) {\n    this._specularIntensity = value;\n\n    this.scene.shaderData.setFloat(EnvironmentMapLight._specularIntensityProperty, value);\n  }\n\n  private _diffuseTexture: TextureCubeMap;\n  private _specularTexture: TextureCubeMap;\n  private _diffuseColor: Color = new Color(0.3, 0.3, 0.3, 1);\n  private _specularColor: Color = new Color(0.5, 0.5, 0.5, 1);\n  private _diffuseIntensity: number = 1;\n  private _specularIntensity: number = 1;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.diffuseColor = this._diffuseColor;\n    this.specularColor = this._specularColor;\n    this.diffuseIntensity = this._diffuseIntensity;\n    this.specularIntensity = this._specularIntensity;\n  }\n}\n","import { Color, Vector3 } from \"@oasis-engine/math\";\nimport { Shader } from \"../shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { Light } from \"./Light\";\n\n/**\n * Point light.\n */\nexport class PointLight extends Light {\n  private static _colorProperty: ShaderProperty = Shader.getPropertyByName(\"u_pointLightColor\");\n  private static _positionProperty: ShaderProperty = Shader.getPropertyByName(\"u_pointLightPosition\");\n  private static _distanceProperty: ShaderProperty = Shader.getPropertyByName(\"u_pointLightDistance\");\n  private static _decayProperty: ShaderProperty = Shader.getPropertyByName(\"u_pointLightDecay\");\n\n  private static _combinedData = {\n    color: new Float32Array(3 * Light._maxLight),\n    position: new Float32Array(3 * Light._maxLight),\n    distance: new Float32Array(Light._maxLight),\n    decay: new Float32Array(Light._maxLight)\n  };\n\n  /**\n   * @internal\n   */\n  static _updateShaderData(shaderData: ShaderData): void {\n    const data = PointLight._combinedData;\n\n    shaderData.setFloatArray(PointLight._colorProperty, data.color);\n    shaderData.setFloatArray(PointLight._positionProperty, data.position);\n    shaderData.setFloatArray(PointLight._distanceProperty, data.distance);\n    shaderData.setFloatArray(PointLight._decayProperty, data.decay);\n  }\n\n  color: Color = new Color(1, 1, 1, 1);\n  intensity: number = 1.0;\n  distance: number = 100;\n  decay: number = 0;\n\n  private _lightColor: Color = new Color(1, 1, 1, 1);\n\n  /**\n   * Get light position.\n   * @readonly\n   */\n  get position(): Vector3 {\n    return this.entity.transform.worldPosition;\n  }\n\n  /**\n   * Get the final light color.\n   * @readonly\n   */\n  get lightColor(): Color {\n    this._lightColor.r = this.color.r * this.intensity;\n    this._lightColor.g = this.color.g * this.intensity;\n    this._lightColor.b = this.color.b * this.intensity;\n    this._lightColor.a = this.color.a * this.intensity;\n    return this._lightColor;\n  }\n\n  /**\n   * @internal\n   */\n  _appendData(lightIndex: number): void {\n    const colorStart = lightIndex * 3;\n    const positionStart = lightIndex * 3;\n    const distanceStart = lightIndex;\n    const decayStart = lightIndex;\n\n    const lightColor = this.lightColor;\n    const lightPosition = this.position;\n\n    const data = PointLight._combinedData;\n\n    data.color[colorStart] = lightColor.r;\n    data.color[colorStart + 1] = lightColor.g;\n    data.color[colorStart + 2] = lightColor.b;\n    data.position[positionStart] = lightPosition.x;\n    data.position[positionStart + 1] = lightPosition.y;\n    data.position[positionStart + 2] = lightPosition.z;\n    data.distance[distanceStart] = this.distance;\n    data.decay[decayStart] = this.decay;\n  }\n}\n","import { Color, Vector3 } from \"@oasis-engine/math\";\nimport { Shader } from \"../shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { Light } from \"./Light\";\n\n/**\n * Spot light.\n */\nexport class SpotLight extends Light {\n  private static _colorProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightColor\");\n  private static _positionProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightPosition\");\n  private static _directionProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightDirection\");\n  private static _distanceProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightDistance\");\n  private static _decayProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightDecay\");\n  private static _angleProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightAngle\");\n  private static _penumbraProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightPenumbra\");\n  private static _penumbraCosProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightPenumbraCos\");\n  private static _coneCosProperty: ShaderProperty = Shader.getPropertyByName(\"u_spotLightConeCos\");\n\n  private static _combinedData = {\n    color: new Float32Array(3 * Light._maxLight),\n    position: new Float32Array(3 * Light._maxLight),\n    direction: new Float32Array(3 * Light._maxLight),\n    distance: new Float32Array(Light._maxLight),\n    decay: new Float32Array(Light._maxLight),\n    angle: new Float32Array(Light._maxLight),\n    penumbra: new Float32Array(Light._maxLight),\n    penumbraCos: new Float32Array(Light._maxLight),\n    coneCos: new Float32Array(Light._maxLight)\n  };\n\n  /**\n   * @internal\n   */\n  static _updateShaderData(shaderData: ShaderData): void {\n    const data = SpotLight._combinedData;\n\n    shaderData.setFloatArray(SpotLight._colorProperty, data.color);\n    shaderData.setFloatArray(SpotLight._positionProperty, data.position);\n    shaderData.setFloatArray(SpotLight._directionProperty, data.direction);\n    shaderData.setFloatArray(SpotLight._distanceProperty, data.distance);\n    shaderData.setFloatArray(SpotLight._decayProperty, data.decay);\n    shaderData.setFloatArray(SpotLight._angleProperty, data.angle);\n    shaderData.setFloatArray(SpotLight._penumbraProperty, data.penumbra);\n    shaderData.setFloatArray(SpotLight._penumbraCosProperty, data.penumbraCos);\n    shaderData.setFloatArray(SpotLight._coneCosProperty, data.coneCos);\n  }\n\n  color: Color = new Color(1, 1, 1, 1);\n  penumbra: number = 0.2;\n  distance: number = 100;\n  intensity: number = 1.0;\n  decay: number = 0;\n  angle: number = Math.PI / 6;\n\n  private _forward: Vector3 = new Vector3();\n  private _lightColor: Color = new Color(1, 1, 1, 1);\n  private _inverseDirection: Vector3 = new Vector3();\n\n  /**\n   * Get light position.\n   * @readonly\n   */\n  get position(): Vector3 {\n    return this.entity.transform.worldPosition;\n  }\n\n  /**\n   * Get light direction.\n   * @readonly\n   */\n  get direction(): Vector3 {\n    this.entity.transform.getWorldForward(this._forward);\n    return this._forward;\n  }\n\n  /**\n   * Get the opposite direction of the spotlight.\n   * @readonly\n   */\n  get reverseDirection(): Vector3 {\n    Vector3.scale(this.direction, -1, this._inverseDirection);\n    return this._inverseDirection;\n  }\n\n  /**\n   * Get the final light color.\n   * @readonly\n   */\n  get lightColor(): Color {\n    this._lightColor.r = this.color.r * this.intensity;\n    this._lightColor.g = this.color.g * this.intensity;\n    this._lightColor.b = this.color.b * this.intensity;\n    this._lightColor.a = this.color.a * this.intensity;\n    return this._lightColor;\n  }\n\n  /**\n   * @internal\n   */\n  _appendData(lightIndex: number): void {\n    const colorStart = lightIndex * 3;\n    const positionStart = lightIndex * 3;\n    const directionStart = lightIndex * 3;\n    const distanceStart = lightIndex;\n    const decayStart = lightIndex;\n    const angleStart = lightIndex;\n    const penumbraStart = lightIndex;\n    const penumbraCosStart = lightIndex;\n    const coneCosStart = lightIndex;\n\n    const color = this.lightColor;\n    const position = this.position;\n    const direction = this.direction;\n\n    const data = SpotLight._combinedData;\n\n    data.color[colorStart] = color.r;\n    data.color[colorStart + 1] = color.g;\n    data.color[colorStart + 2] = color.b;\n    data.position[positionStart] = position.x;\n    data.position[positionStart + 1] = position.y;\n    data.position[positionStart + 2] = position.z;\n    data.direction[directionStart] = direction.x;\n    data.direction[directionStart + 1] = direction.y;\n    data.direction[directionStart + 2] = direction.z;\n    data.distance[distanceStart] = this.distance;\n    data.decay[decayStart] = this.decay;\n    data.angle[angleStart] = this.angle;\n    data.penumbra[penumbraStart] = this.penumbra;\n    data.penumbraCos[penumbraCosStart] = Math.cos(this.angle * (1 - this.penumbra));\n    data.coneCos[coneCosStart] = Math.cos(this.angle);\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { SceneFeature } from \"../SceneFeature\";\nimport { Shader } from \"../shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { ShaderMacro } from \"../shader/ShaderMacro\";\nimport { AmbientLight } from \"./AmbientLight\";\nimport { DirectLight } from \"./DirectLight\";\nimport { EnvironmentMapLight } from \"./EnvironmentMapLight\";\nimport { Light } from \"./Light\";\nimport { PointLight } from \"./PointLight\";\nimport { SpotLight } from \"./SpotLight\";\n\n/**\n * Determine whether there are lights in the scene.\n * @returns Has light\n */\nexport function hasLight(): boolean {\n  return this.findFeature(LightFeature).visibleLights.length > 0;\n}\n\n/**\n * Light plug-in.\n */\nexport class LightFeature extends SceneFeature {\n  private static _ambientMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_AMBIENT_LIGHT\");\n  private static _envMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_ENVMAP_LIGHT\");\n\n  visibleLights: Light[];\n\n  constructor() {\n    super();\n    this.visibleLights = [];\n  }\n\n  /**\n   * Register a light object to the current scene.\n   * @param light\n   */\n  attachRenderLight(light: Light): void {\n    const index = this.visibleLights.indexOf(light);\n    if (index == -1) {\n      this.visibleLights.push(light);\n    } else {\n      Logger.warn(\"Light already attached.\");\n    }\n  }\n\n  /**\n   * Remove a light object from the current scene.\n   * @param light\n   */\n  detachRenderLight(light: Light): void {\n    const index = this.visibleLights.indexOf(light);\n    if (index != -1) {\n      this.visibleLights.splice(index, 1);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _updateShaderData(shaderData: ShaderData) {\n    /**\n     * ambientLight and envMapLight only use the last one in the scene\n     * */\n    let ambientLightCount = 0;\n    let envMapLightCount = 0;\n    let directLightCount = 0;\n    let pointLightCount = 0;\n    let spotLightCount = 0;\n\n    let lights = this.visibleLights;\n    for (let i = 0, len = lights.length; i < len; i++) {\n      const light = lights[i];\n      if (light instanceof AmbientLight) {\n        ambientLightCount++;\n      } else if (light instanceof EnvironmentMapLight) {\n        EnvironmentMapLight._updateShaderData(shaderData, light);\n        envMapLightCount++;\n      } else if (light instanceof DirectLight) {\n        light._appendData(directLightCount++);\n      } else if (light instanceof PointLight) {\n        light._appendData(pointLightCount++);\n      } else if (light instanceof SpotLight) {\n        light._appendData(spotLightCount++);\n      }\n    }\n\n    if (ambientLightCount) {\n      shaderData.enableMacro(LightFeature._ambientMacro);\n    } else {\n      shaderData.disableMacro(LightFeature._ambientMacro);\n    }\n\n    if (envMapLightCount) {\n      shaderData.enableMacro(LightFeature._envMacro);\n    } else {\n      shaderData.disableMacro(LightFeature._envMacro);\n    }\n\n    if (directLightCount) {\n      DirectLight._updateShaderData(shaderData);\n      shaderData.enableMacro(\"O3_DIRECT_LIGHT_COUNT\", directLightCount.toString());\n    } else {\n      shaderData.disableMacro(\"O3_DIRECT_LIGHT_COUNT\");\n    }\n\n    if (pointLightCount) {\n      PointLight._updateShaderData(shaderData);\n      shaderData.enableMacro(\"O3_POINT_LIGHT_COUNT\", pointLightCount.toString());\n    } else {\n      shaderData.disableMacro(\"O3_POINT_LIGHT_COUNT\");\n    }\n\n    if (spotLightCount) {\n      SpotLight._updateShaderData(shaderData);\n      shaderData.enableMacro(\"O3_SPOT_LIGHT_COUNT\", spotLightCount.toString());\n    } else {\n      shaderData.disableMacro(\"O3_SPOT_LIGHT_COUNT\");\n    }\n  }\n}\n","import { EngineObject } from \"../base/EngineObject\";\nimport { Engine } from \"../Engine\";\nimport { IRefObject } from \"./IRefObject\";\n\n/**\n * The base class of assets, with reference counting capability.\n */\nexport abstract class RefObject extends EngineObject implements IRefObject {\n  /** Whether to ignore the garbage collection check, if it is true, it will not be affected by ResourceManager.gc(). */\n  isGCIgnored: boolean = false;\n\n  private _refCount: number = 0;\n  private _destroyed: boolean = false;\n\n  /**\n   * Counted by valid references.\n   */\n  get refCount(): number {\n    return this._refCount;\n  }\n\n  /**\n   * Whether it has been destroyed.\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  protected constructor(engine: Engine) {\n    super(engine);\n    engine.resourceManager._addRefObject(this.instanceId, this);\n  }\n\n  /**\n   * Destroy self.\n   * @param force - Whether to force the destruction, if it is fasle, refCount = 0 can be released successfully.\n   * @returns Whether the release was successful.\n   */\n  destroy(force: boolean = false): boolean {\n    if (this._destroyed) return true;\n    if (!force && this._refCount !== 0) return false;\n    const resourceManager = this._engine.resourceManager;\n    // resourceManager maybe null,because engine has destroyed.\n    // TODO:the right way to fix this is to ensure destroy all when call engine.destroy,thus don't need to add this project.\n    if (resourceManager) {\n      resourceManager._deleteAsset(this);\n      resourceManager._deleteRefObject(this.instanceId);\n    }\n\n    const refCount = this._getRefCount();\n    if (refCount > 0) {\n      this._addRefCount(-refCount);\n    }\n    this._engine = null;\n    this._onDestroy();\n    this._destroyed = true;\n    return true;\n  }\n\n  /**\n   * @internal\n   */\n  _getRefCount(): number {\n    return this._refCount;\n  }\n\n  /**\n   * @internal\n   * Add reference resource.\n   */\n  _addRefCount(value: number): void {\n    this._refCount += value;\n  }\n\n  /**\n   * @internal\n   * Remove reference resource.\n   */\n  _addToResourceManager(path: string): void {\n    this._engine.resourceManager._addAsset(path, this);\n  }\n\n  /**\n   * Called when the resource is destroyed.\n   * Subclasses can override this function.\n   */\n  protected abstract _onDestroy(): void;\n}\n","export interface TextureFormatDetail {\n  internalFormat: GLint;\n  baseFormat?: GLenum;\n  dataType?: GLenum;\n  isCompressed: boolean;\n  attachment?: GLenum;\n}\n\n/**\n * @deprecated\n */\nexport enum GLCompressedTextureInternalFormat {\n  // astc\n  RGBA_ASTC_4X4_KHR = 0x93b0,\n  RGBA_ASTC_5X4_KHR = 0x93b1,\n  RGBA_ASTC_5X5_KHR = 0x93b2,\n  RGBA_ASTC_6X5_KHR = 0x93b3,\n  RGBA_ASTC_6X6_KHR = 0x93b4,\n  RGBA_ASTC_8X5_KHR = 0x93b5,\n  RGBA_ASTC_8X6_KHR = 0x93b6,\n  RGBA_ASTC_8X8_KHR = 0x93b7,\n  RGBA_ASTC_10X5_KHR = 0x93b8,\n  RGBA_ASTC_10X6_KHR = 0x93b9,\n  RGBA_ASTC_10X8_KHR = 0x93ba,\n  RGBA_ASTC_10X10_KHR = 0x93bb,\n  RGBA_ASTC_12X10_KHR = 0x93bc,\n  RGBA_ASTC_12X12_KHR = 0x93bd,\n  SRGB8_ALPHA8_ASTC_4X4_KHR = 0x93d0,\n  SRGB8_ALPHA8_ASTC_5X4_KHR = 0x93d1,\n  SRGB8_ALPHA8_ASTC_5X5_KHR = 0x93d2,\n  SRGB8_ALPHA8_ASTC_6X5_KHR = 0x93d3,\n  SRGB8_ALPHA8_ASTC_6X6_KHR = 0x93d4,\n  SRGB8_ALPHA8_ASTC_8X5_KHR = 0x93d5,\n  SRGB8_ALPHA8_ASTC_8X6_KHR = 0x93d6,\n  SRGB8_ALPHA8_ASTC_8X8_KHR = 0x93d7,\n  SRGB8_ALPHA8_ASTC_10X5_KHR = 0x93d8,\n  SRGB8_ALPHA8_ASTC_10X6_KHR = 0x93d9,\n  SRGB8_ALPHA8_ASTC_10X8_KHR = 0x93da,\n  SRGB8_ALPHA8_ASTC_10X10_KHR = 0x93db,\n  SRGB8_ALPHA8_ASTC_12X10_KHR = 0x93dc,\n  SRGB8_ALPHA8_ASTC_12X12_KHR = 0x93dd,\n\n  // etc1\n  RGB_ETC1_WEBGL = 0x8d64,\n\n  // etc2\n  R11_EAC = 0x9270,\n  SIGNED_R11_EAC = 0x9271,\n  RG11_EAC = 0x9272,\n  SIGNED_RG11_EAC = 0x9273,\n  RGB8_ETC2 = 0x9274,\n  SRGB8_ETC2 = 0x9275,\n  RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\n  SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\n  RGBA8_ETC2_EAC = 0x9278,\n  SRGB8_ALPHA8_ETC2_EAC = 0x9279,\n\n  // pvrtc\n  RGB_PVRTC_4BPPV1_IMG = 0x8c00,\n  RGB_PVRTC_2BPPV1_IMG = 0x8c01,\n  RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\n  RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\n\n  // s3tc\n  RGB_S3TC_DXT1_EXT = 0x83f0,\n  RGBA_S3TC_DXT1_EXT = 0x83f1,\n  RGBA_S3TC_DXT3_EXT = 0x83f2,\n  RGBA_S3TC_DXT5_EXT = 0x83f3\n}\n","/**\n * The rendering buffer color format enumeration.\n */\nexport enum RenderBufferColorFormat {\n  /** RGB format,8 bits per channel. */\n  R8G8B8,\n  /** RGBA format,8 bits per channel. */\n  R8G8B8A8,\n  /** RGBA format,4 bits per channel. */\n  R4G4B4A4,\n  /** RGBA format,5 bits in R cahnnel, 5 bits in G channel, 5 bits in B cahnnel, 1 bit in A channel. */\n  R5G5B5A1,\n  /** RGB format,5 bits in R cahnnel, 6 bits in G channel, 5 bits in B cahnnel. */\n  R5G6B5,\n  /** transparent format, 8 bits. */\n  Alpha8,\n  /** RGBA format,16 bits per channel. */\n  R16G16B16A16,\n  /** RGBA format,32 bits per channel. */\n  R32G32B32A32\n}\n","/**\n * Render buffer depth format enumeration.\n */\nexport enum RenderBufferDepthFormat {\n  /** Render to depth buffer,engine will automatically select the supported precision. */\n  Depth = 0,\n  /** Render to depth stencil buffer, engine will automatically select the supported precision. */\n  DepthStencil = 1,\n  /** Render to stencil buffer. */\n  Stencil = 2,\n\n  /** Force 16-bit depth buffer. */\n  Depth16 = 3,\n  /** Force 24-bit depth buffer. */\n  Depth24 = 4,\n  /** Force 32-bit depth buffer. */\n  Depth32 = 5,\n  /** Force 16-bit depth + 8-bit stencil buffer. */\n  Depth24Stencil8 = 6,\n  /** Force 32-bit depth + 8-bit stencil buffer. */\n  Depth32Stencil8 = 7\n}\n","/**\n * The filter mode of the texture.\n */\nexport enum TextureFilterMode {\n  /** Point filtering. */\n  Point = 0,\n  /** Bilinear fitering. */\n  Bilinear = 1,\n  /** Trilinear filtering. */\n  Trilinear = 2\n}\n","/**\n * Texture format enumeration.\n */\nexport enum TextureFormat {\n  /** RGB format,8 bits per channel. */\n  R8G8B8,\n  /** RGBA format,8 bits per channel. */\n  R8G8B8A8,\n  /** RGBA format,4 bits per channel. */\n  R4G4B4A4,\n  /** RGBA format,5 bits in R channel,5 bits in G channel,5 bits in B channel, 1 bit in A channel. */\n  R5G5B5A1,\n  /** RGB format,5 bits in R channel,6 bits in G channel,5 bits in B channel. */\n  R5G6B5,\n  /** Transparent format,8 bits. */\n  Alpha8,\n  /** RGBA format,32 bits per channel. */\n  R32G32B32A32,\n  /** RGB compressed format。*/\n  DXT1,\n  /** RGBA compressed format。*/\n  DXT5,\n  /** RGB compressed format,4 bits per pixel。*/\n  ETC1_RGB,\n  /** RGB compressed format,4 bits per pixel。*/\n  ETC2_RGB,\n  /** RGBA compressed format,5 bits per pixel,4 bit in RGB, 1 bit in A. */\n  ETC2_RGBA5,\n  /** RGB compressed format,8 bits per pixel. */\n  ETC2_RGBA8,\n  /** RGB compressed format,2 bits per pixel. */\n  PVRTC_RGB2,\n  /** RGBA compressed format,2 bits per pixel. */\n  PVRTC_RGBA2,\n  /** RGB compressed format,4 bits per pixel. */\n  PVRTC_RGB4,\n  /** RGBA compressed format,4 bits per pixel. */\n  PVRTC_RGBA4,\n  /** RGB(A) compressed format,128 bits per 4x4 pixel block. */\n  ASTC_4x4,\n  /** RGB(A) compressed format,128 bits per 5x5 pixel block. */\n  ASTC_5x5,\n  /** RGB(A) compressed format,128 bits per 6x6 pixel block. */\n  ASTC_6x6,\n  /** RGB(A) compressed format,128 bits per 8x8 pixel block. */\n  ASTC_8x8,\n  /** RGB(A) compressed format,128 bits per 10x10 pixel block. */\n  ASTC_10x10,\n  /** RGB(A) compressed format,128 bits per 12x12 pixel block. */\n  ASTC_12x12\n}\n","/**\n * Wrapping mode of the texture.\n */\nexport enum TextureWrapMode {\n  /** Clampping mode. use the color of edge pixels beyond the texture boundary. */\n  Clamp = 0,\n  /** Repeating mode. tiling will be repeated if it exceeds the texture boundary. */\n  Repeat = 1,\n  /** Mirror repeat mode. tiling will be mirrored and repeated if it exceeds the texture boundary. */\n  Mirror = 2\n}\n","import { RefObject } from \"../asset/RefObject\";\nimport { GLCapabilityType } from \"../base/Constant\";\nimport { Logger } from \"../base/Logger\";\nimport { GLCompressedTextureInternalFormat, TextureFormatDetail } from \"../material/type\";\nimport { RenderBufferColorFormat } from \"./enums/RenderBufferColorFormat\";\nimport { RenderBufferDepthFormat } from \"./enums/RenderBufferDepthFormat\";\nimport { TextureCubeFace } from \"./enums/TextureCubeFace\";\nimport { TextureFilterMode } from \"./enums/TextureFilterMode\";\nimport { TextureFormat } from \"./enums/TextureFormat\";\nimport { TextureWrapMode } from \"./enums/TextureWrapMode\";\n\n/**\n * The base class of texture, contains some common functions of texture-related classes.\n */\nexport abstract class Texture extends RefObject {\n  /** @internal */\n  static _readFrameBuffer: WebGLFramebuffer = null;\n\n  /** @internal */\n  static _isPowerOf2(v: number): boolean {\n    return (v & (v - 1)) === 0;\n  }\n\n  /**\n   * Get more texture info from TextureFormat.\n   * @internal\n   */\n  static _getFormatDetail(\n    format: TextureFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case TextureFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case TextureFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case TextureFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case TextureFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case TextureFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      case TextureFormat.DXT1:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.DXT5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT,\n          isCompressed: true\n        };\n      case TextureFormat.ETC1_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGB:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2,\n          isCompressed: true\n        };\n      case TextureFormat.ETC2_RGBA8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA2:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGB4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.PVRTC_RGBA4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_4x4:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_5x5:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_6x6:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_8x8:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_10x10:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR,\n          isCompressed: true\n        };\n      case TextureFormat.ASTC_12x12:\n        return {\n          internalFormat: GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR,\n          isCompressed: true\n        };\n      default:\n        throw new Error(`this TextureFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getRenderBufferColorFormatDetail(\n    format: RenderBufferColorFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferColorFormat.R8G8B8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB8 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R8G8B8A8:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA8 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R4G4B4A4:\n        return {\n          internalFormat: isWebGL2 ? gl.RGBA4 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_4_4_4_4,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G5B5A1:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB5_A1 : gl.RGBA,\n          baseFormat: gl.RGBA,\n          dataType: gl.UNSIGNED_SHORT_5_5_5_1,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R5G6B5:\n        return {\n          internalFormat: isWebGL2 ? gl.RGB565 : gl.RGB,\n          baseFormat: gl.RGB,\n          dataType: gl.UNSIGNED_SHORT_5_6_5,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.Alpha8:\n        return {\n          internalFormat: gl.ALPHA,\n          baseFormat: gl.ALPHA,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R16G16B16A16:\n        return {\n          internalFormat: gl.RGBA16F,\n          baseFormat: gl.RGBA,\n          dataType: gl.HALF_FLOAT,\n          isCompressed: false\n        };\n      case RenderBufferColorFormat.R32G32B32A32:\n        return {\n          internalFormat: gl.RGBA32F,\n          baseFormat: gl.RGBA,\n          dataType: gl.FLOAT,\n          isCompressed: false\n        };\n      default:\n        throw new Error(`this RenderBufferColorFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * @internal\n   * @remarks In WebGL 1, internalformat must be the same as baseFormat when call texImage2D.\n   */\n  static _getRenderBufferDepthFormatDetail(\n    format: RenderBufferDepthFormat,\n    gl: WebGLRenderingContext & WebGL2RenderingContext,\n    isWebGL2: boolean\n  ): TextureFormatDetail {\n    switch (format) {\n      case RenderBufferDepthFormat.Depth:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT32F : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: isWebGL2 ? gl.FLOAT : gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.DepthStencil:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Stencil:\n        return {\n          internalFormat: gl.STENCIL_INDEX8,\n          baseFormat: gl.STENCIL_ATTACHMENT,\n          dataType: gl.UNSIGNED_BYTE,\n          isCompressed: false,\n          attachment: gl.STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth16:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH_COMPONENT16 : gl.DEPTH_COMPONENT16,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT24,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.UNSIGNED_INT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32:\n        return {\n          internalFormat: gl.DEPTH_COMPONENT32F,\n          baseFormat: gl.DEPTH_COMPONENT,\n          dataType: gl.FLOAT,\n          isCompressed: false,\n          attachment: gl.DEPTH_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth24Stencil8:\n        return {\n          internalFormat: isWebGL2 ? gl.DEPTH24_STENCIL8 : gl.DEPTH_STENCIL,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.UNSIGNED_INT_24_8,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        return {\n          internalFormat: gl.DEPTH32F_STENCIL8,\n          baseFormat: gl.DEPTH_STENCIL,\n          dataType: gl.FLOAT_32_UNSIGNED_INT_24_8_REV,\n          isCompressed: false,\n          attachment: gl.DEPTH_STENCIL_ATTACHMENT\n        };\n      default:\n        throw new Error(`this RenderBufferDepthFormat is not supported in Oasis Engine: ${format}`);\n    }\n  }\n\n  /**\n   * Check whether the corresponding texture format is supported.\n   * @internal\n   */\n  static _supportTextureFormat(format: TextureFormat, rhi): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case TextureFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferColorFormat(format: RenderBufferColorFormat, rhi): boolean {\n    let isSupported = true;\n\n    switch (format) {\n      case RenderBufferColorFormat.R32G32B32A32:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferFloat) || !rhi.canIUse(GLCapabilityType.textureFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n      case RenderBufferColorFormat.R16G16B16A16:\n        {\n          if (!rhi.canIUse(GLCapabilityType.colorBufferHalfFloat) || !rhi.canIUse(GLCapabilityType.textureHalfFloat)) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  /**\n   * @internal\n   */\n  static _supportRenderBufferDepthFormat(format: RenderBufferDepthFormat, rhi, isTexture: boolean): boolean {\n    const isWebGL2: boolean = rhi.isWebGL2;\n    let isSupported = true;\n\n    if (isTexture && !rhi.canIUse(GLCapabilityType.depthTexture)) {\n      return false;\n    }\n\n    switch (format) {\n      case RenderBufferDepthFormat.Stencil:\n        {\n          isSupported = false;\n        }\n        break;\n      case RenderBufferDepthFormat.Depth24:\n      case RenderBufferDepthFormat.Depth32:\n      case RenderBufferDepthFormat.Depth32Stencil8:\n        {\n          if (!isWebGL2) {\n            isSupported = false;\n          }\n        }\n        break;\n    }\n\n    return isSupported;\n  }\n\n  name: string;\n\n  _glTexture: WebGLTexture;\n  /** @internal */\n  _target: GLenum;\n  /** @internal */\n  _formatDetail: TextureFormatDetail;\n\n  protected _width: number;\n  protected _height: number;\n\n  /** @internal */\n  protected _rhi;\n  /** @internal */\n  protected _mipmap: boolean;\n  /** @internal */\n  protected _mipmapCount: number;\n\n  private _wrapModeU: TextureWrapMode;\n  private _wrapModeV: TextureWrapMode;\n  private _filterMode: TextureFilterMode;\n  private _anisoLevel: number = 1;\n\n  /**\n   * The width of the texture.\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * The height of the texture.\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * Wrapping mode for texture coordinate S.\n   */\n  get wrapModeU(): TextureWrapMode {\n    return this._wrapModeU;\n  }\n\n  set wrapModeU(value: TextureWrapMode) {\n    if (value === this._wrapModeU) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._wrapModeU = value;\n\n    this._bind();\n    this._setWrapMode(value, gl.TEXTURE_WRAP_S);\n    this._unbind();\n  }\n\n  /**\n   * Wrapping mode for texture coordinate T.\n   */\n  get wrapModeV(): TextureWrapMode {\n    return this._wrapModeV;\n  }\n\n  set wrapModeV(value: TextureWrapMode) {\n    if (value === this._wrapModeV) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._wrapModeV = value;\n\n    this._bind();\n    this._setWrapMode(value, gl.TEXTURE_WRAP_T);\n    this._unbind();\n  }\n\n  /**\n   * Texture mipmapping count.\n   */\n  get mipmapCount(): number {\n    return this._mipmapCount;\n  }\n\n  /**\n   * Filter mode for texture.\n   */\n  get filterMode(): TextureFilterMode {\n    return this._filterMode;\n  }\n\n  set filterMode(value: TextureFilterMode) {\n    if (value === this._filterMode) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._filterMode = value;\n\n    this._bind();\n    switch (value) {\n      case TextureFilterMode.Point:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST);\n        break;\n      case TextureFilterMode.Bilinear:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR);\n        break;\n      case TextureFilterMode.Trilinear:\n        gl.texParameteri(this._target, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(this._target, gl.TEXTURE_MIN_FILTER, this._mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n        break;\n    }\n    this._unbind();\n  }\n\n  /**\n   * Anisotropic level for texture.\n   */\n  get anisoLevel(): number {\n    return this._anisoLevel;\n  }\n\n  set anisoLevel(value: number) {\n    const max = this._rhi.capability.maxAnisoLevel;\n\n    if (value > max) {\n      Logger.warn(`anisoLevel:${value}, exceeds the limit and is automatically downgraded to:${max}`);\n      value = max;\n    }\n\n    if (value < 1) {\n      Logger.warn(`anisoLevel:${value}, must be greater than 0, and is automatically downgraded to 1`);\n      value = 1;\n    }\n\n    if (value === this._anisoLevel) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext & EXT_texture_filter_anisotropic = this._rhi.gl;\n\n    this._anisoLevel = value;\n\n    this._bind();\n    gl.texParameterf(this._target, gl.TEXTURE_MAX_ANISOTROPY_EXT, value);\n    this._unbind();\n  }\n\n  /**\n   * Generate multi-level textures based on the 0th level data.\n   */\n  public generateMipmaps(): void {\n    if (!this._mipmap) return;\n\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    this._bind();\n    gl.generateMipmap(this._target);\n    this._unbind();\n  }\n\n  /**\n   * @override\n   */\n  _onDestroy() {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    gl.deleteTexture(this._glTexture);\n    this._glTexture = null;\n    this._formatDetail = null;\n    // TODO: delete\n    this._rhi = null;\n  }\n\n  /** @internal */\n  _bind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.bindTexture(this._target, this._glTexture);\n  }\n\n  /** @internal */\n  _unbind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.bindTexture(this._target, null);\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified area.\n   * @internal\n   * @param face - If it is a cube texture, you can choose which surface to read\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   */\n  protected _getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    if (!Texture._readFrameBuffer) {\n      Texture._readFrameBuffer = gl.createFramebuffer();\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, Texture._readFrameBuffer);\n\n    if (face != null) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        this._glTexture,\n        0\n      );\n    } else {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._glTexture, 0);\n    }\n    gl.readPixels(x, y, width, height, baseFormat, dataType, out);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * Pre-development mipmapping GPU memory.\n   * @internal\n   */\n  protected _initMipmap(isCube: boolean): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2 = this._rhi.isWebGL2;\n    let { internalFormat, baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    if (isWebGL2) {\n      gl.texStorage2D(this._target, this._mipmapCount, internalFormat, this._width, this._height);\n    } else {\n      // In WebGL 1, internalformat must be the same as baseFormat\n      if (baseFormat !== internalFormat) {\n        internalFormat = baseFormat;\n      }\n\n      if (!isCube) {\n        for (let i = 0; i < this._mipmapCount; i++) {\n          const width = Math.max(1, this._width >> i);\n          const height = Math.max(1, this._height >> i);\n\n          gl.texImage2D(this._target, i, internalFormat, width, height, 0, baseFormat, dataType, null);\n        }\n      } else {\n        for (let i = 0; i < this._mipmapCount; i++) {\n          const size = Math.max(1, this._width >> i);\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            gl.texImage2D(\n              gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n              i,\n              internalFormat,\n              size,\n              size,\n              0,\n              baseFormat,\n              dataType,\n              null\n            );\n          }\n        }\n      }\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * Get the maximum mip level of the corresponding size:rounding down\n   * @remarks http://download.nvidia.com/developer/Papers/2005/NP2_Mipmapping/NP2_Mipmap_Creation.pdf\n   * @internal\n   */\n  protected _getMaxMiplevel(size: number): number {\n    return Math.floor(Math.log2(size));\n  }\n\n  /**\n   * @internal\n   */\n  protected _getMipmapCount(): number {\n    return this._mipmap ? Math.floor(Math.log2(Math.max(this._width, this._height))) + 1 : 1;\n  }\n\n  /**\n   * @internal\n   */\n  private _setWrapMode(value: TextureWrapMode, pname: GLenum): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n\n    if (\n      !isWebGL2 &&\n      value !== TextureWrapMode.Clamp &&\n      (!Texture._isPowerOf2(this._width) || !Texture._isPowerOf2(this._height))\n    ) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for REPEAT or MIRRORED_REPEAT in WebGL1,and has automatically downgraded to CLAMP_TO_EDGE\"\n      );\n      value = TextureWrapMode.Clamp;\n    }\n\n    switch (value) {\n      case TextureWrapMode.Clamp:\n        gl.texParameteri(this._target, pname, gl.CLAMP_TO_EDGE);\n        break;\n      case TextureWrapMode.Repeat:\n        gl.texParameteri(this._target, pname, gl.REPEAT);\n        break;\n      case TextureWrapMode.Mirror:\n        gl.texParameteri(this._target, pname, gl.MIRRORED_REPEAT);\n        break;\n    }\n  }\n}\n","import { IClone } from \"@oasis-engine/design\";\nimport { Color, Matrix, Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { IRefObject } from \"../asset/IRefObject\";\nimport { CloneManager } from \"../clone/CloneManager\";\nimport { Texture } from \"../texture/Texture\";\nimport { ShaderDataGroup } from \"./enums/ShaderDataGroup\";\nimport { Shader } from \"./Shader\";\nimport { ShaderMacro } from \"./ShaderMacro\";\nimport { ShaderMacroCollection } from \"./ShaderMacroCollection\";\nimport { ShaderProperty } from \"./ShaderProperty\";\n\nexport type ShaderPropertyValueType =\n  | number\n  | Vector2\n  | Vector3\n  | Vector4\n  | Color\n  | Matrix\n  | Texture\n  | Texture[]\n  | Int32Array\n  | Float32Array;\n\n/**\n * Shader data collection,Correspondence includes shader properties data and macros data.\n */\nexport class ShaderData implements IRefObject, IClone {\n  /** @internal */\n  _group: ShaderDataGroup;\n  /** @internal */\n  _properties: Record<number, ShaderPropertyValueType> = Object.create(null);\n  /** @internal */\n  _macroCollection: ShaderMacroCollection = new ShaderMacroCollection();\n\n  private _variableMacros: Record<string, string> = Object.create(null);\n  private _refCount: number = 0;\n\n  /**\n   * @internal\n   */\n  constructor(group: ShaderDataGroup) {\n    this._group = group;\n  }\n\n  /**\n   * Get float by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Float\n   */\n  getFloat(propertyName: string): number;\n\n  /**\n   * Get float by shader property.\n   * @param property - Shader property\n   * @returns Float\n   */\n  getFloat(property: ShaderProperty): number;\n\n  getFloat(property: string | ShaderProperty): number {\n    return this._getData(property);\n  }\n\n  /**\n   * Set float by shader property name.\n   * @remarks Corresponding float shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Float\n   */\n  setFloat(propertyName: string, value: number): void;\n\n  /**\n   * Set float by shader property.\n   * @remarks Corresponding float shader property type.\n   * @param property - Shader property\n   * @param value - Float\n   */\n  setFloat(property: ShaderProperty, value: number): void;\n\n  setFloat(property: string | ShaderProperty, value: number): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get int by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Int\n   */\n  getInt(propertyName: string): number;\n\n  /**\n   * Get int by shader property.\n   * @param property - Shader property\n   * @returns Int\n   */\n  getInt(property: ShaderProperty): number;\n\n  getInt(property: string | ShaderProperty): number {\n    return this._getData(property);\n  }\n\n  /**\n   * Set int by shader property name.\n   * @remarks Correspondence includes int and bool shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Int\n   */\n  setInt(propertyName: string, value: number): void;\n\n  /**\n   * Set int by shader property.\n   * @remarks Correspondence includes int and bool shader property type.\n   * @param property - Shader property\n   * @param value - Int\n   */\n  setInt(property: ShaderProperty, value: number): void;\n\n  setInt(property: string | ShaderProperty, value: number): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get float array by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Float array\n   */\n  getFloatArray(propertyName: string): Float32Array;\n\n  /**\n   * Get float array by shader property.\n   * @param property - Shader property\n   * @returns Float array\n   */\n  getFloatArray(property: ShaderProperty): Float32Array;\n\n  getFloatArray(property: string | ShaderProperty): Float32Array {\n    return this._getData(property);\n  }\n\n  /**\n   * Set float array by shader property name.\n   * @remarks Correspondence includes float array、vec2 array、vec3 array、vec4 array and matrix array shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Float array\n   */\n  setFloatArray(propertyName: string, value: Float32Array): void;\n\n  /**\n   * Set float array by shader property.\n   * @remarks Correspondence includes float array、vec2 array、vec3 array、vec4 array and matrix array shader property type.\n   * @param property - Shader property\n   * @param value - Float array\n   */\n  setFloatArray(property: ShaderProperty, value: Float32Array): void;\n\n  setFloatArray(property: string | ShaderProperty, value: Float32Array): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get int array by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Int Array\n   */\n  getIntArray(propertyName: string): Int32Array;\n\n  /**\n   * Get int array by shader property.\n   * @param property - Shader property\n   * @returns Int Array\n   */\n  getIntArray(property: ShaderProperty): Int32Array;\n\n  getIntArray(property: string | ShaderProperty): Int32Array {\n    return this._getData(property);\n  }\n\n  /**\n   * Set int array by shader property name.\n   * @remarks Correspondence includes bool array、int array、bvec2 array、bvec3 array、bvec4 array、ivec2 array、ivec3 array and ivec4 array shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Int Array\n   */\n  setIntArray(propertyName: string, value: Int32Array): void;\n\n  /**\n   * Set int array by shader property.\n   * @remarks Correspondence includes bool array、int array、bvec2 array、bvec3 array、bvec4 array、ivec2 array、ivec3 array and ivec4 array shader property type.\n   * @param property - Shader property\n   * @param value - Int Array\n   */\n  setIntArray(property: ShaderProperty, value: Int32Array): void;\n\n  setIntArray(property: string | ShaderProperty, value: Int32Array): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get two-dimensional from shader property name.\n   * @param propertyName - Shader property name\n   * @returns Two-dimensional vector\n   */\n  getVector2(propertyName: string): Vector2;\n\n  /**\n   * Get two-dimensional from shader property.\n   * @param property - Shader property\n   * @returns Two-dimensional vector\n   */\n  getVector2(property: ShaderProperty): Vector2;\n\n  getVector2(property: string | ShaderProperty): Vector2 {\n    return this._getData(property);\n  }\n\n  /**\n   * Set two-dimensional vector from shader property name.\n   * @remarks Correspondence includes vec2、ivec2 and bvec2 shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Two-dimensional vector\n   */\n  setVector2(property: string, value: Vector2): void;\n\n  /**\n   * Set two-dimensional vector from shader property.\n   * @remarks Correspondence includes vec2、ivec2 and bvec2 shader property type.\n   * @param property - Shader property\n   * @param value - Two-dimensional vector\n   */\n  setVector2(property: ShaderProperty, value: Vector2): void;\n\n  setVector2(property: string | ShaderProperty, value: Vector2): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get vector3 by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Three-dimensional vector\n   */\n  getVector3(propertyName: string): Vector3;\n\n  /**\n   * Get vector3 by shader property.\n   * @param property - Shader property\n   * @returns Three-dimensional vector\n   */\n  getVector3(property: ShaderProperty): Vector3;\n\n  getVector3(property: string | ShaderProperty): Vector3 {\n    return this._getData(property);\n  }\n\n  /**\n   * Set three dimensional vector by shader property name.\n   * @remarks Correspondence includes vec3、ivec3 and bvec3 shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Three-dimensional vector\n   */\n  setVector3(property: string, value: Vector3): void;\n\n  /**\n   * Set three dimensional vector by shader property.\n   * @remarks Correspondence includes vec3、ivec3 and bvec3 shader property type.\n   * @param property - Shader property\n   * @param value - Three-dimensional vector\n   */\n  setVector3(property: ShaderProperty, value: Vector3): void;\n\n  setVector3(property: string | ShaderProperty, value: Vector3): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get vector4 by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Four-dimensional vector\n   */\n  getVector4(propertyName: string): Vector4;\n\n  /**\n   * Get vector4 by shader property.\n   * @param property - Shader property\n   * @returns Four-dimensional vector\n   */\n  getVector4(property: ShaderProperty): Vector4;\n\n  getVector4(property: string | ShaderProperty): Vector4 {\n    return this._getData(property);\n  }\n\n  /**\n   * Set four-dimensional vector by shader property name.\n   * @remarks Correspondence includes vec4、ivec4 and bvec4 shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Four-dimensional vector\n   */\n  setVector4(property: string, value: Vector4): void;\n\n  /**\n   * Set four-dimensional vector by shader property.\n   * @remarks Correspondence includes vec4、ivec4 and bvec4 shader property type.\n   * @param property - Shader property\n   * @param value - Four-dimensional vector\n   */\n  setVector4(property: ShaderProperty, value: Vector4): void;\n\n  setVector4(property: string | ShaderProperty, value: Vector4): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get matrix by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Matrix\n   */\n  getMatrix(propertyName: string): Matrix;\n\n  /**\n   * Get matrix by shader property.\n   * @param property - Shader property\n   * @returns Matrix\n   */\n  getMatrix(property: ShaderProperty): Matrix;\n\n  getMatrix(property: string | ShaderProperty): Matrix {\n    return this._getData(property);\n  }\n\n  /**\n   * Set matrix by shader property name.\n   * @remarks Correspondence includes matrix shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Matrix\n   */\n  setMatrix(propertyName: string, value: Matrix);\n\n  /**\n   * Set matrix by shader property.\n   * @remarks Correspondence includes matrix shader property type.\n   * @param property - Shader property\n   * @param value - Matrix\n   */\n  setMatrix(property: ShaderProperty, value: Matrix);\n\n  setMatrix(property: string | ShaderProperty, value: Matrix): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get color by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Color\n   */\n  getColor(propertyName: string): Color;\n\n  /**\n   * Get color by shader property.\n   * @param property - Shader property\n   * @returns Color\n   */\n  getColor(property: ShaderProperty): Color;\n\n  getColor(property: string | ShaderProperty): Color {\n    return this._getData(property);\n  }\n\n  /**\n   * Set color by shader property name.\n   * @remarks Correspondence includes vec4 shader property type.\n   * @param propertyName - Shader property name\n   * @param value - Color\n   */\n  setColor(propertyName: string, value: Color): void;\n\n  /**\n   * Set color by shader property.\n   * @remarks Correspondence includes vec4 shader property type.\n   * @param property - Shader property\n   * @param value - Color\n   */\n  setColor(property: ShaderProperty, value: Color): void;\n\n  setColor(property: string | ShaderProperty, value: Color): void {\n    this._setData(property, value);\n  }\n\n  /**\n   * Get texture by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Texture\n   */\n  getTexture(propertyName: string): Texture;\n\n  /**\n   * Get texture by shader property.\n   * @param property - Shader property\n   * @returns Texture\n   */\n  getTexture(property: ShaderProperty): Texture;\n\n  getTexture(property: string | ShaderProperty): Texture {\n    return this._getData(property);\n  }\n\n  /**\n   * Set texture by shader property name.\n   * @param propertyName - Shader property name\n   * @param value - Texture\n   */\n  setTexture(propertyName: string, value: Texture): void;\n\n  /**\n   * Set texture by shader property.\n   * @param property - Shader property\n   * @param value - Texture\n   */\n  setTexture(property: ShaderProperty, value: Texture): void;\n\n  setTexture(property: string | ShaderProperty, value: Texture): void {\n    if (this._getRefCount() > 0) {\n      const lastValue = this._getData<Texture>(property);\n      lastValue && lastValue._addRefCount(-1);\n      value && value._addRefCount(1);\n    }\n    this._setData(property, value);\n  }\n\n  /**\n   * Get texture array by shader property name.\n   * @param propertyName - Shader property name\n   * @returns Texture array\n   */\n  getTextureArray(propertyName: string): Texture[];\n\n  /**\n   * Get texture array by shader property.\n   * @param property - Shader property\n   * @returns Texture array\n   */\n  getTextureArray(property: ShaderProperty): Texture[];\n\n  getTextureArray(property: string | ShaderProperty): Texture[] {\n    return this._getData(property);\n  }\n\n  /**\n   * Set texture array by shader property name.\n   * @param propertyName - Shader property name\n   * @param value - Texture array\n   */\n  setTextureArray(propertyName: string, value: Texture[]): void;\n\n  /**\n   * Set texture array by shader property.\n   * @param property - Shader property\n   * @param value - Texture array\n   */\n  setTextureArray(property: ShaderProperty, value: Texture[]): void;\n\n  setTextureArray(property: string | ShaderProperty, value: Texture[]): void {\n    if (this._getRefCount() > 0) {\n      const lastValue = this._getData<Texture[]>(property);\n      if (lastValue) {\n        for (let i = 0, n = lastValue.length; i < n; i++) {\n          lastValue[i]._addRefCount(-1);\n        }\n      }\n      if (value) {\n        for (let i = 0, n = value.length; i < n; i++) {\n          value[i]._addRefCount(1);\n        }\n      }\n    }\n    this._setData(property, value);\n  }\n\n  /**\n   * Enable macro.\n   * @param macroName - Macro name\n   */\n  enableMacro(macroName: string): void;\n\n  /**\n   * Enable macro.\n   * @param macro - Shader macro\n   */\n  enableMacro(macro: ShaderMacro): void;\n\n  /**\n   * Enable macro.\n   * @remarks Name and value will combine one macro, it's equal the macro of \"name value\".\n   * @param name - Macro name\n   * @param value - Macro value\n   */\n  enableMacro(name: string, value: string): void;\n\n  enableMacro(macro: string | ShaderMacro, value: string = null): void {\n    if (value) {\n      this._enableVariableMacro(<string>macro, value);\n    } else {\n      if (typeof macro === \"string\") {\n        macro = Shader.getMacroByName(macro);\n      }\n      this._macroCollection.enable(macro);\n    }\n  }\n\n  /**\n   * Disable macro\n   * @param macroName - Macro name\n   */\n  disableMacro(macroName: string): void;\n\n  /**\n   * Disable macro\n   * @param macro - Shader macro\n   */\n  disableMacro(macro: ShaderMacro): void;\n\n  disableMacro(macro: string | ShaderMacro): void {\n    if (typeof macro === \"string\") {\n      // @todo: should optimization variable macros disable performance\n      const variableValue = this._variableMacros[macro];\n      if (variableValue) {\n        this._disableVariableMacro(macro, variableValue);\n      } else {\n        macro = Shader.getMacroByName(macro);\n        this._macroCollection.disable(macro);\n      }\n    } else {\n      this._macroCollection.disable(macro);\n    }\n  }\n\n  clone(): ShaderData {\n    const shaderData = new ShaderData(this._group);\n    this.cloneTo(shaderData);\n    return shaderData;\n  }\n\n  cloneTo(target: ShaderData): void {\n    CloneManager.deepCloneObject(this._macroCollection, target._macroCollection);\n    Object.assign(target._variableMacros, this._variableMacros);\n\n    const properties = this._properties;\n    const targetProperties = target._properties;\n    const keys = Object.keys(properties);\n    for (let i = 0, n = keys.length; i < n; i++) {\n      const k = keys[i];\n      const property: ShaderPropertyValueType = properties[k];\n      if (property != null) {\n        if (typeof property === \"number\") {\n          targetProperties[k] = property;\n        } else if (property instanceof Texture) {\n          targetProperties[k] = property;\n        } else if (property instanceof Array || property instanceof Float32Array || property instanceof Int32Array) {\n          targetProperties[k] = property.slice();\n        } else {\n          targetProperties[k] = property.clone();\n        }\n      } else {\n        targetProperties[k] = property;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _getData<T extends ShaderPropertyValueType>(property: string | ShaderProperty): T {\n    if (typeof property === \"string\") {\n      property = Shader.getPropertyByName(property);\n    }\n    return this._properties[property._uniqueId] as T;\n  }\n\n  /**\n   * @internal\n   */\n  _setData<T extends ShaderPropertyValueType>(property: string | ShaderProperty, value: T): void {\n    if (typeof property === \"string\") {\n      property = Shader.getPropertyByName(property);\n    }\n\n    if (property._group !== this._group) {\n      if (property._group === undefined) {\n        property._group = this._group;\n      } else {\n        throw `This property has been used as ${ShaderDataGroup[property._group]} property.`;\n      }\n    }\n\n    this._properties[property._uniqueId] = value;\n  }\n\n  /**\n   * @internal\n   */\n  _getRefCount(): number {\n    return this._refCount;\n  }\n\n  /**\n   * @internal\n   */\n  _addRefCount(value: number): void {\n    this._refCount += value;\n    const properties = this._properties;\n    for (var k in properties) {\n      const property = properties[k];\n      // @todo: Seperate array to speed performace.\n      if (property && property instanceof Texture) {\n        property._addRefCount(value);\n      }\n    }\n  }\n\n  private _enableVariableMacro(name: string, value: string): void {\n    const variableMacro = this._variableMacros;\n    const variableValue = variableMacro[name];\n    if (variableValue !== value) {\n      variableValue && this._disableVariableMacro(name, value);\n\n      const macro = Shader.getMacroByName(`${name} ${value}`);\n      this._macroCollection.enable(macro);\n      variableMacro[name] = value;\n    }\n  }\n\n  private _disableVariableMacro(name: string, value: string): void {\n    const oldMacro = Shader.getMacroByName(`${name} ${value}`);\n    this._macroCollection.disable(oldMacro);\n    delete this._variableMacros[name];\n  }\n}\n","import { Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { EngineObject, GLCapabilityType, Logger } from \"./base\";\nimport { Camera } from \"./Camera\";\nimport { Engine } from \"./Engine\";\nimport { Entity } from \"./Entity\";\nimport { FeatureManager } from \"./FeatureManager\";\nimport { Layer } from \"./Layer\";\nimport { LightFeature } from \"./lighting/LightFeature\";\nimport { SceneFeature } from \"./SceneFeature\";\nimport { ShaderDataGroup } from \"./shader/enums/ShaderDataGroup\";\nimport { Shader } from \"./shader/Shader\";\nimport { ShaderData } from \"./shader/ShaderData\";\n\n/**\n * Scene.\n */\nexport class Scene extends EngineObject {\n  private static _resolutionProperty = Shader.getPropertyByName(\"u_resolution\");\n\n  static sceneFeatureManager = new FeatureManager<SceneFeature>();\n\n  /** scene-related shaderdata  */\n  readonly shaderData: ShaderData = new ShaderData(ShaderDataGroup.Scene);\n\n  /** scene name */\n  name: string;\n\n  /**\n   * @private\n   * @deprecated\n   * @todo: Migrate to camera\n   * Clipping surface, plane equations. The fragments below the clipping plane will be discard.\n   * @example\n   * ```ts\n   * scene.clipPlanes = [[0,1,0,0]];\n   * ```\n   * */\n  clipPlanes: Vector4[] = [];\n  _activeCameras: Camera[] = [];\n  _isActiveInEngine: boolean = false;\n\n  private _destroyed: boolean = false;\n  private _rootEntities: Entity[] = [];\n  private _resolution: Vector2 = new Vector2();\n\n  /**\n   * Get the scene's engine.\n   * @readonly\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * Count of root entities.\n   * @readonly\n   */\n  get rootEntitiesCount(): number {\n    return this._rootEntities.length;\n  }\n\n  /**\n   * Root entity collection.\n   * @readonly\n   */\n  get rootEntities(): Readonly<Entity[]> {\n    return this._rootEntities;\n  }\n\n  /**\n   * Whether it's destroyed.\n   * @readonly\n   */\n  get destroyed(): boolean {\n    return this._destroyed;\n  }\n\n  /**\n   * Create scene.\n   * @param engine - Engine\n   * @param name - Name\n   */\n  constructor(engine: Engine, name?: string) {\n    super(engine);\n    this.name = name || \"\";\n\n    const shaderData = this.shaderData;\n    Scene.sceneFeatureManager.addObject(this);\n    shaderData._addRefCount(1);\n\n    // @todo: this is deviec macro,should add when compile shader.\n    if (this._engine._hardwareRenderer.canIUse(GLCapabilityType.shaderTextureLod)) {\n      shaderData.enableMacro(\"HAS_TEX_LOD\");\n    }\n    if (this._engine._hardwareRenderer.canIUse(GLCapabilityType.standardDerivatives)) {\n      shaderData.enableMacro(\"HAS_DERIVATIVES\");\n    }\n  }\n\n  /**\n   * Create root entity.\n   * @param name - Entity name\n   * @returns Entity\n   */\n  createRootEntity(name?: string): Entity {\n    const entity = new Entity(this._engine, name);\n    this.addRootEntity(entity);\n    return entity;\n  }\n\n  /**\n   * Append an entity.\n   * @param entity - The root entity to add\n   */\n  addRootEntity(entity: Entity): void {\n    const isRoot = entity._isRoot;\n\n    // let entity become root\n    if (!isRoot) {\n      entity._isRoot = true;\n      entity._removeFromParent();\n    }\n\n    // add or remove from scene's rootEntities\n    const oldScene = entity._scene;\n    if (oldScene !== this) {\n      if (oldScene && isRoot) {\n        oldScene._removeEntity(entity);\n      }\n      this._rootEntities.push(entity);\n      Entity._traverseSetOwnerScene(entity, this);\n    } else if (!isRoot) {\n      this._rootEntities.push(entity);\n    }\n\n    // process entity active/inActive\n    if (this._isActiveInEngine) {\n      !entity._isActiveInHierarchy && entity._isActive && entity._processActive();\n    } else {\n      entity._isActiveInHierarchy && entity._processInActive();\n    }\n  }\n\n  /**\n   * Remove an entity.\n   * @param entity - The root entity to remove\n   */\n  removeRootEntity(entity: Entity): void {\n    if (entity._isRoot && entity._scene == this) {\n      this._removeEntity(entity);\n      this._isActiveInEngine && entity._processInActive();\n      Entity._traverseSetOwnerScene(entity, null);\n    }\n  }\n\n  /**\n   * Get root entity from index.\n   * @param index - Index\n   * @returns Entity\n   */\n  getRootEntity(index: number = 0): Entity | null {\n    return this._rootEntities[index];\n  }\n\n  /**\n   * Find entity globally by name.\n   * @param name - Entity name\n   * @returns Entity\n   */\n  findEntityByName(name: string): Entity | null {\n    const children = this._rootEntities;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      if (child.name === name) {\n        return child;\n      }\n    }\n\n    for (let i = children.length - 1; i >= 0; i--) {\n      const child = children[i];\n      const entity = child.findByName(name);\n      if (entity) {\n        return entity;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Find entity globally by name,use ‘/’ symbol as a path separator.\n   * @param path - Entity's path\n   * @returns Entity\n   */\n  findEntityByPath(path: string): Entity | null {\n    const splits = path.split(\"/\").filter(Boolean);\n    for (let i = 0, n = this.rootEntitiesCount; i < n; i++) {\n      let findEntity = this.getRootEntity(i);\n      if (findEntity.name != splits[0]) continue;\n      for (let j = 1, m = splits.length; j < m; ++j) {\n        findEntity = Entity._findChildByName(findEntity, splits[j]);\n        if (!findEntity) break;\n      }\n      return findEntity;\n    }\n    return null;\n  }\n\n  /**\n   * Destroy this scene.\n   */\n  destroy(): void {\n    if (this._destroyed) {\n      return;\n    }\n    this._isActiveInEngine && (this._engine.sceneManager.activeScene = null);\n    Scene.sceneFeatureManager.callFeatureMethod(this, \"destroy\", [this]);\n    for (let i = 0, n = this.rootEntitiesCount; i < n; i++) {\n      this._rootEntities[i].destroy();\n    }\n    this._rootEntities.length = 0;\n    this._activeCameras.length = 0;\n    (Scene.sceneFeatureManager as any)._objects = [];\n    this.shaderData._addRefCount(-1);\n    this._destroyed = true;\n  }\n\n  /**\n   * Append a camera to this scene.\n   * @param camera  - Camera\n   */\n  attachRenderCamera(camera: Camera): void {\n    const index = this._activeCameras.indexOf(camera);\n    if (index === -1) {\n      this._activeCameras.push(camera);\n    } else {\n      Logger.warn(\"Camera already attached.\");\n    }\n  }\n\n  /**\n   * Remove a camera from this scene.\n   * @param camera - Camera\n   */\n  detachRenderCamera(camera: Camera): void {\n    const index = this._activeCameras.indexOf(camera);\n    if (index !== -1) {\n      this._activeCameras.splice(index, 1);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _processActive(active: boolean): void {\n    this._isActiveInEngine = active;\n    const rootEntities = this._rootEntities;\n    for (let i = rootEntities.length - 1; i >= 0; i--) {\n      const entity = rootEntities[i];\n      if (entity._isActive) {\n        active ? entity._processActive() : entity._processInActive();\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _updateShaderData() {\n    const lightMgr = this.findFeature(LightFeature);\n    const shaderData = this.shaderData;\n    const canvas = this.engine.canvas;\n    const resolution = this._resolution;\n\n    lightMgr._updateShaderData(shaderData);\n\n    resolution.setValue(canvas.width, canvas.height);\n    shaderData.setVector2(Scene._resolutionProperty, resolution);\n  }\n\n  private _removeEntity(entity: Entity): void {\n    const oldRootEntities = this._rootEntities;\n    oldRootEntities.splice(oldRootEntities.indexOf(entity), 1);\n  }\n\n  //-----------------------------------------@deprecated-----------------------------------\n  static registerFeature(Feature: new () => SceneFeature) {\n    Scene.sceneFeatureManager.registerFeature(Feature);\n  }\n\n  findFeature<T extends SceneFeature>(Feature: { new (): T }): T {\n    return Scene.sceneFeatureManager.findFeature(this, Feature) as T;\n  }\n\n  features: SceneFeature[] = [];\n\n  /**\n   * Raycast.\n   * @deprecated\n   * @param ray\n   */\n  public raycast(ray: { origin: Vector3; direction: Vector3 }, outPos?: Vector3, tag?: Layer): any {}\n}\n","import { AssetPromise } from \"./asset/AssetPromise\";\nimport { Engine } from \"./Engine\";\nimport { Scene } from \"./Scene\";\n\n/**\n * Scene manager.\n */\nexport class SceneManager {\n  _activeScene: Scene;\n\n  /**\n   * Get the activated scene.\n   */\n  get activeScene(): Scene {\n    return this._activeScene;\n  }\n\n  set activeScene(scene: Scene) {\n    const oldScene = this._activeScene;\n    if (oldScene !== scene) {\n      oldScene && oldScene._processActive(false);\n      scene && scene._processActive(true);\n      this._activeScene = scene;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  constructor(public readonly engine: Engine) {}\n\n  /**\n   * Load and activate scene.\n   * @param url - the path of the scene\n   * @param destroyOldScene - whether to destroy old scene information\n   * @returns scene promise\n   */\n  loadScene(url: string, destroyOldScene: boolean = true): AssetPromise<Scene> {\n    const scenePromise = this.engine.resourceManager.load<Scene>(url);\n    scenePromise.then((scene: Scene) => {\n      const oldScene: Scene = this._activeScene;\n      this.activeScene = scene;\n      if (oldScene && destroyOldScene) {\n        oldScene.destroy();\n      }\n    });\n    return scenePromise;\n  }\n\n  /**\n   * Merge the source scene into the target scene.\n   * @remarks the global information of destScene will be used after the merge, and the lightingMap information will be merged.\n   * @param sourceScene - source scene\n   * @param destScene - target scene\n   */\n  mergeScenes(sourceScene: Scene, destScene: Scene): void {\n    const oldRootEntities = sourceScene.rootEntities;\n    for (let i: number = 0, n: number = oldRootEntities.length; i < n; i++) {\n      destScene.addRootEntity(oldRootEntities[i]);\n    }\n  }\n}\n","import blinnPhongFs from \"../shaderlib/extra/blinn-phong.fs.glsl\";\nimport blinnPhongVs from \"../shaderlib/extra/blinn-phong.vs.glsl\";\nimport pbrFs from \"../shaderlib/extra/pbr.fs.glsl\";\nimport pbrVs from \"../shaderlib/extra/pbr.vs.glsl\";\nimport shadowMapFs from \"../shaderlib/extra/shadow-map.fs.glsl\";\nimport shadowMapVs from \"../shaderlib/extra/shadow-map.vs.glsl\";\nimport shadowFs from \"../shaderlib/extra/shadow.fs.glsl\";\nimport { Shader } from \"./Shader\";\nimport skyboxFs from \"../shaderlib/extra/skybox.fs.glsl\";\nimport skyboxVs from \"../shaderlib/extra/skybox.vs.glsl\";\nimport particleFs from \"../shaderlib/extra/particle.fs.glsl\";\nimport particleVs from \"../shaderlib/extra/particle.vs.glsl\";\n\n/**\n * Internal shader pool.\n * @internal\n */\nexport class ShaderPool {\n  static init(): void {\n    Shader.create(\"blinn-phong\", blinnPhongVs, blinnPhongFs);\n    Shader.create(\"pbr\", pbrVs, pbrFs);\n    Shader.create(\"shadow-map\", shadowMapVs, shadowMapFs);\n    Shader.create(\"shadow\", shadowMapVs, shadowFs);\n    Shader.create(\"skybox\", skyboxVs, skyboxFs);\n    Shader.create(\"particle-shader\", particleVs, particleFs);\n  }\n}\n","import { ShaderMacroCollection } from \"./ShaderMacroCollection\";\nimport { ShaderProgram } from \"./ShaderProgram\";\n\n/**\n * Shader program pool.\n * @internal\n */\nexport class ShaderProgramPool {\n  private _cacheHierarchy: number = 1;\n  private _cacheMap: object = Object.create(null);\n  private _lastQueryMap: Record<number, ShaderProgram>;\n  private _lastQueryKey: number;\n\n  /**\n   * Get shader program by macro collection.\n   * @param macros - macro collection\n   * @returns shader program\n   */\n  get(macros: ShaderMacroCollection): ShaderProgram | null {\n    let cacheMap = this._cacheMap;\n    const maskLength = macros._length;\n    if (maskLength > this._cacheHierarchy) {\n      this._resizeCacheMapHierarchy(cacheMap, 0, maskLength);\n    }\n\n    const mask = macros._mask;\n    const endIndex = macros._length - 1;\n    const maxEndIndex = this._cacheHierarchy - 1;\n    for (let i = 0; i < maxEndIndex; i++) {\n      const subMask = endIndex < i ? 0 : mask[i];\n      let subCacheShaders: object = cacheMap[subMask];\n      subCacheShaders || (cacheMap[subMask] = subCacheShaders = Object.create(null));\n      cacheMap = subCacheShaders;\n    }\n\n    const cacheKey = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\n    const shader = (<Record<number, ShaderProgram>>cacheMap)[cacheKey];\n    if (!shader) {\n      this._lastQueryKey = cacheKey;\n      this._lastQueryMap = <Record<number, ShaderProgram>>cacheMap;\n    }\n    return shader;\n  }\n\n  /**\n   * Cache the shader program.\n   *\n   * @remarks\n   * The method must return an empty value after calling get() to run normally.\n   *\n   * @param shaderProgram - shader program\n   */\n  cache(shaderProgram: ShaderProgram): void {\n    this._lastQueryMap[this._lastQueryKey] = shaderProgram;\n  }\n\n  private _resizeCacheMapHierarchy(cacheMap: object, hierarchy: number, resizeLength: number): void {\n    // only expand but not shrink.\n    const end = this._cacheHierarchy - 1;\n    if (hierarchy == end) {\n      for (let k in cacheMap) {\n        const shader: ShaderProgram = cacheMap[k];\n        for (let i = 0, n = resizeLength - end; i < n; i++) {\n          if (i == n - 1) {\n            cacheMap[0] = shader;\n          } else {\n            cacheMap = cacheMap[i == 0 ? k : 0] = Object.create(null);\n          }\n        }\n      }\n      this._cacheHierarchy = resizeLength;\n    } else {\n      for (let k in cacheMap) {\n        this._resizeCacheMapHierarchy(cacheMap[k], ++hierarchy, resizeLength);\n      }\n    }\n  }\n}\n","import { BlendOperation } from \"../enums/BlendOperation\";\nimport { BlendFactor } from \"../enums/BlendFactor\";\nimport { ColorWriteMask } from \"../enums/ColorWriteMask\";\n\n/**\n * The blend state of the render target.\n */\nexport class RenderTargetBlendState {\n  /** color (RGB) blend operation. */\n  colorBlendOperation: BlendOperation = BlendOperation.Add;\n  /** alpha (A) blend operation. */\n  alphaBlendOperation: BlendOperation = BlendOperation.Add;\n  /** color blend factor (RGB) for source. */\n  sourceColorBlendFactor: BlendFactor = BlendFactor.One;\n  /** alpha blend factor (A) for source. */\n  sourceAlphaBlendFactor: BlendFactor = BlendFactor.One;\n  /** color blend factor (RGB) for destination. */\n  destinationColorBlendFactor: BlendFactor = BlendFactor.Zero;\n  /** alpha blend factor (A) for destination. */\n  destinationAlphaBlendFactor: BlendFactor = BlendFactor.Zero;\n  /** color mask. */\n  colorWriteMask: ColorWriteMask = ColorWriteMask.All;\n\n  /** @internal */\n  _blendEnable: boolean = false;\n}\n","import { Color } from \"@oasis-engine/math\";\nimport { HardwareRenderer } from \"../../HardwareRenderer\";\nimport { BlendFactor } from \"../enums/BlendFactor\";\nimport { BlendOperation } from \"../enums/BlendOperation\";\nimport { ColorWriteMask } from \"../enums/ColorWriteMask\";\nimport { RenderState } from \"./RenderState\";\nimport { RenderTargetBlendState } from \"./RenderTargetBlendState\";\n\n/**\n * Blend state.\n */\nexport class BlendState {\n  private static _getGLBlendFactor(blendFactor: BlendFactor): number {\n    switch (blendFactor) {\n      case BlendFactor.Zero:\n        return WebGLRenderingContext.ZERO;\n      case BlendFactor.One:\n        return WebGLRenderingContext.ONE;\n      case BlendFactor.SourceColor:\n        return WebGLRenderingContext.SRC_COLOR;\n      case BlendFactor.OneMinusSourceColor:\n        return WebGLRenderingContext.ONE_MINUS_SRC_COLOR;\n      case BlendFactor.DestinationColor:\n        return WebGLRenderingContext.DST_COLOR;\n      case BlendFactor.OneMinusDestinationColor:\n        return WebGLRenderingContext.ONE_MINUS_DST_COLOR;\n      case BlendFactor.SourceAlpha:\n        return WebGLRenderingContext.SRC_ALPHA;\n      case BlendFactor.OneMinusSourceAlpha:\n        return WebGLRenderingContext.ONE_MINUS_SRC_ALPHA;\n      case BlendFactor.DestinationAlpha:\n        return WebGLRenderingContext.DST_ALPHA;\n      case BlendFactor.OneMinusDestinationAlpha:\n        return WebGLRenderingContext.ONE_MINUS_DST_ALPHA;\n      case BlendFactor.SourceAlphaSaturate:\n        return WebGLRenderingContext.SRC_ALPHA_SATURATE;\n      case BlendFactor.BlendColor:\n        return WebGLRenderingContext.CONSTANT_COLOR;\n      case BlendFactor.OneMinusBlendColor:\n        return WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR;\n    }\n  }\n\n  private static _getGLBlendOperation(blendOperation: BlendOperation): number {\n    switch (blendOperation) {\n      case BlendOperation.Add:\n        return WebGLRenderingContext.FUNC_ADD;\n      case BlendOperation.Subtract:\n        return WebGLRenderingContext.FUNC_SUBTRACT;\n      case BlendOperation.ReverseSubtract:\n        return WebGLRenderingContext.FUNC_REVERSE_SUBTRACT;\n      case BlendOperation.Min:\n        return WebGL2RenderingContext.MIN; // in webgl1.0 is an extension\n      case BlendOperation.Max:\n        return WebGL2RenderingContext.MAX; // in webgl1.0 is an extension\n    }\n  }\n\n  /** The blend state of the render target. */\n  readonly targetBlendState: RenderTargetBlendState = new RenderTargetBlendState();\n  /** Constant blend color. */\n  readonly blendColor: Color = new Color(0, 0, 0, 0);\n  /** Whether to use (Alpha-to-Coverage) technolog. */\n  alphaToCoverage: boolean = false;\n\n  /**\n   * @internal\n   * Apply the current blend state by comparing with the last blend state.\n   */\n  _apply(hardwareRenderer: HardwareRenderer, lastRenderState: RenderState): void {\n    this._platformApply(hardwareRenderer, lastRenderState.blendState);\n  }\n\n  private _platformApply(rhi: HardwareRenderer, lastState: BlendState): void {\n    const gl = <WebGLRenderingContext>rhi.gl;\n    const lastTargetBlendState = lastState.targetBlendState;\n\n    const {\n      colorBlendOperation,\n      alphaBlendOperation,\n      sourceColorBlendFactor,\n      destinationColorBlendFactor,\n      sourceAlphaBlendFactor,\n      destinationAlphaBlendFactor,\n      colorWriteMask\n    } = this.targetBlendState;\n\n    const blendEnable = !(\n      sourceColorBlendFactor === BlendFactor.One &&\n      destinationColorBlendFactor === BlendFactor.Zero &&\n      sourceAlphaBlendFactor === BlendFactor.One &&\n      destinationAlphaBlendFactor === BlendFactor.Zero &&\n      (colorBlendOperation === BlendOperation.Add || colorBlendOperation === BlendOperation.Subtract) &&\n      (alphaBlendOperation === BlendOperation.Add || alphaBlendOperation === BlendOperation.Subtract)\n    );\n\n    if (blendEnable !== lastTargetBlendState._blendEnable) {\n      if (blendEnable) {\n        gl.enable(gl.BLEND);\n      } else {\n        gl.disable(gl.BLEND);\n      }\n      lastTargetBlendState._blendEnable = blendEnable;\n    }\n\n    if (blendEnable) {\n      // apply blend factor.\n      if (\n        sourceColorBlendFactor !== lastTargetBlendState.sourceColorBlendFactor ||\n        destinationColorBlendFactor !== lastTargetBlendState.destinationColorBlendFactor ||\n        sourceAlphaBlendFactor !== lastTargetBlendState.sourceAlphaBlendFactor ||\n        destinationAlphaBlendFactor !== lastTargetBlendState.destinationAlphaBlendFactor\n      ) {\n        gl.blendFuncSeparate(\n          BlendState._getGLBlendFactor(sourceColorBlendFactor),\n          BlendState._getGLBlendFactor(destinationColorBlendFactor),\n          BlendState._getGLBlendFactor(sourceAlphaBlendFactor),\n          BlendState._getGLBlendFactor(destinationAlphaBlendFactor)\n        );\n        lastTargetBlendState.sourceColorBlendFactor = sourceColorBlendFactor;\n        lastTargetBlendState.destinationColorBlendFactor = destinationColorBlendFactor;\n        lastTargetBlendState.sourceAlphaBlendFactor = sourceAlphaBlendFactor;\n        lastTargetBlendState.destinationAlphaBlendFactor = destinationAlphaBlendFactor;\n      }\n\n      // apply blend operation.\n      if (\n        colorBlendOperation !== lastTargetBlendState.colorBlendOperation ||\n        alphaBlendOperation !== lastTargetBlendState.alphaBlendOperation\n      ) {\n        gl.blendEquationSeparate(\n          BlendState._getGLBlendOperation(colorBlendOperation),\n          BlendState._getGLBlendOperation(alphaBlendOperation)\n        );\n        lastTargetBlendState.colorBlendOperation = colorBlendOperation;\n        lastTargetBlendState.alphaBlendOperation = alphaBlendOperation;\n      }\n\n      // apply blend color.\n      const blendColor = this.blendColor;\n      if (!Color.equals(lastState.blendColor, blendColor)) {\n        gl.blendColor(blendColor.r, blendColor.g, blendColor.b, blendColor.a);\n        blendColor.cloneTo(lastState.blendColor);\n      }\n    }\n\n    // apply color mask.\n    if (colorWriteMask !== lastTargetBlendState.colorWriteMask) {\n      gl.colorMask(\n        (colorWriteMask & ColorWriteMask.Red) !== 0,\n        (colorWriteMask & ColorWriteMask.Green) !== 0,\n        (colorWriteMask & ColorWriteMask.Blue) !== 0,\n        (colorWriteMask & ColorWriteMask.Alpha) !== 0\n      );\n      lastTargetBlendState.colorWriteMask = colorWriteMask;\n    }\n\n    // apply alpha to coverage.\n    const alphaToCoverage = this.alphaToCoverage;\n    if (alphaToCoverage !== lastState.alphaToCoverage) {\n      if (alphaToCoverage) {\n        gl.enable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n      } else {\n        gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n      }\n      lastState.alphaToCoverage = alphaToCoverage;\n    }\n  }\n}\n","import { HardwareRenderer } from \"../../HardwareRenderer\";\nimport { CompareFunction } from \"../enums/CompareFunction\";\nimport { RenderState } from \"./RenderState\";\n\n/**\n * Depth state.\n */\nexport class DepthState {\n  private static _getGLCompareFunction(compareFunction: CompareFunction): number {\n    switch (compareFunction) {\n      case CompareFunction.Never:\n        return WebGLRenderingContext.NEVER;\n      case CompareFunction.Less:\n        return WebGLRenderingContext.LESS;\n      case CompareFunction.Equal:\n        return WebGLRenderingContext.EQUAL;\n      case CompareFunction.LessEqual:\n        return WebGL2RenderingContext.LEQUAL;\n      case CompareFunction.Greater:\n        return WebGL2RenderingContext.GREATER;\n      case CompareFunction.NotEqual:\n        return WebGL2RenderingContext.NOTEQUAL;\n      case CompareFunction.GreaterEqual:\n        return WebGL2RenderingContext.GEQUAL;\n      case CompareFunction.Always:\n        return WebGL2RenderingContext.ALWAYS;\n    }\n  }\n\n  /** Whether to enable the depth test. */\n  enabled: boolean = true;\n  /** Whether the depth value can be written.*/\n  writeEnabled: boolean = true;\n  /** Depth comparison function. */\n  compareFunction: CompareFunction = CompareFunction.Less;\n\n  /**\n   * @internal\n   * Apply the current depth state by comparing with the last depth state.\n   */\n  _apply(hardwareRenderer: HardwareRenderer, lastRenderState: RenderState): void {\n    this._platformApply(hardwareRenderer, lastRenderState.depthState);\n  }\n\n  private _platformApply(rhi: HardwareRenderer, lastState: DepthState): void {\n    const gl = <WebGLRenderingContext>rhi.gl;\n    const { enabled, compareFunction, writeEnabled } = this;\n\n    if (enabled != lastState.enabled) {\n      if (enabled) {\n        gl.enable(gl.DEPTH_TEST);\n      } else {\n        gl.disable(gl.DEPTH_TEST);\n      }\n      lastState.enabled = enabled;\n    }\n\n    if (enabled) {\n      // apply compare func.\n      if (compareFunction != lastState.compareFunction) {\n        gl.depthFunc(DepthState._getGLCompareFunction(compareFunction));\n        lastState.compareFunction = compareFunction;\n      }\n\n      // apply write enabled.\n      if (writeEnabled != lastState.writeEnabled) {\n        gl.depthMask(writeEnabled);\n        lastState.writeEnabled = writeEnabled;\n      }\n    }\n  }\n}\n","import { HardwareRenderer } from \"../../HardwareRenderer\";\nimport { CullMode } from \"../enums/CullMode\";\nimport { RenderState } from \"./RenderState\";\n\n/**\n * Raster state.\n */\nexport class RasterState {\n  /** specifies whether or not front- and/or back-facing polygons can be culled. */\n  cullMode: CullMode = CullMode.Back;\n  /** the multiplier by which an implementation-specific value is multiplied with to create a constant depth offset. */\n  depthBias: number = 0;\n  /** the scale factor for the variable depth offset for each polygon. */\n  slopeScaledDepthBias: number = 0;\n\n  /** @internal */\n  _cullFaceEnable: boolean = true;\n\n  /**\n   * @internal\n   */\n  _apply(hardwareRenderer: HardwareRenderer, lastRenderState: RenderState): void {\n    this._platformApply(hardwareRenderer, lastRenderState.rasterState);\n  }\n\n  private _platformApply(rhi: HardwareRenderer, lastState: RasterState): void {\n    const gl = <WebGLRenderingContext>rhi.gl;\n    const { cullMode, depthBias, slopeScaledDepthBias } = this;\n\n    const cullFaceEnable = cullMode !== CullMode.Off;\n    if (cullFaceEnable !== lastState._cullFaceEnable) {\n      if (cullFaceEnable) {\n        gl.enable(gl.CULL_FACE);\n      } else {\n        gl.disable(gl.CULL_FACE);\n      }\n      lastState._cullFaceEnable = cullFaceEnable;\n    }\n\n    // apply front face.\n    if (cullFaceEnable) {\n      if (cullMode !== lastState.cullMode) {\n        if (cullMode == CullMode.Back) {\n          gl.cullFace(gl.BACK);\n        } else {\n          gl.cullFace(gl.FRONT);\n        }\n        lastState.cullMode = cullMode;\n      }\n    }\n\n    // apply polygonOffset.\n    if (depthBias !== lastState.depthBias || slopeScaledDepthBias !== lastState.slopeScaledDepthBias) {\n      if (depthBias !== 0 || slopeScaledDepthBias !== 0) {\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(slopeScaledDepthBias, depthBias);\n      } else {\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n      }\n      lastState.depthBias = depthBias;\n      lastState.slopeScaledDepthBias = slopeScaledDepthBias;\n    }\n  }\n}\n","import { HardwareRenderer } from \"../../HardwareRenderer\";\nimport { CompareFunction } from \"../enums/CompareFunction\";\nimport { StencilOperation } from \"../enums/StencilOperation\";\nimport { RenderState } from \"./RenderState\";\n\n/**\n * Stencil state.\n */\nexport class StencilState {\n  private static _getGLCompareFunction(compareFunction: CompareFunction): number {\n    switch (compareFunction) {\n      case CompareFunction.Never:\n        return WebGLRenderingContext.NEVER;\n      case CompareFunction.Less:\n        return WebGLRenderingContext.LESS;\n      case CompareFunction.Equal:\n        return WebGLRenderingContext.EQUAL;\n      case CompareFunction.LessEqual:\n        return WebGLRenderingContext.LEQUAL;\n      case CompareFunction.Greater:\n        return WebGLRenderingContext.GREATER;\n      case CompareFunction.NotEqual:\n        return WebGLRenderingContext.NOTEQUAL;\n      case CompareFunction.GreaterEqual:\n        return WebGLRenderingContext.GEQUAL;\n      case CompareFunction.Always:\n        return WebGLRenderingContext.ALWAYS;\n    }\n  }\n\n  private static _getGLStencilOperation(compareFunction: StencilOperation): number {\n    switch (compareFunction) {\n      case StencilOperation.Keep:\n        return WebGLRenderingContext.KEEP;\n      case StencilOperation.Zero:\n        return WebGLRenderingContext.ZERO;\n      case StencilOperation.Replace:\n        return WebGLRenderingContext.REPLACE;\n      case StencilOperation.IncrementSaturate:\n        return WebGLRenderingContext.INCR;\n      case StencilOperation.DecrementSaturate:\n        return WebGLRenderingContext.DECR;\n      case StencilOperation.Invert:\n        return WebGLRenderingContext.INVERT;\n      case StencilOperation.IncrementWrap:\n        return WebGLRenderingContext.INCR_WRAP;\n      case StencilOperation.DecrementWrap:\n        return WebGLRenderingContext.DECR_WRAP;\n    }\n  }\n\n  /** Whether to enable stencil test. */\n  enabled: boolean = false;\n  /** Write the reference value of the stencil buffer. */\n  referenceValue: number = 0;\n  /** Specifying a bit-wise mask that is used to AND the reference value and the stored stencil value when the test is done. */\n  mask: number = 0xff;\n  /** Specifying a bit mask to enable or disable writing of individual bits in the stencil planes. */\n  writeMask: number = 0xff;\n  /** The comparison function of the reference value of the front face of the geometry and the current buffer storage value. */\n  compareFunctionFront: CompareFunction = CompareFunction.Always;\n  /** The comparison function of the reference value of the back of the geometry and the current buffer storage value. */\n  compareFunctionBack: CompareFunction = CompareFunction.Always;\n  /** specifying the function to use for front face when both the stencil test and the depth test pass. */\n  passOperationFront: StencilOperation = StencilOperation.Keep;\n  /** specifying the function to use for back face when both the stencil test and the depth test pass. */\n  passOperationBack: StencilOperation = StencilOperation.Keep;\n  /** specifying the function to use for front face when the stencil test fails. */\n  failOperationFront: StencilOperation = StencilOperation.Keep;\n  /** specifying the function to use for back face when the stencil test fails. */\n  failOperationBack: StencilOperation = StencilOperation.Keep;\n  /** specifying the function to use for front face when the stencil test passes, but the depth test fails. */\n  zFailOperationFront: StencilOperation = StencilOperation.Keep;\n  /** specifying the function to use for back face when the stencil test passes, but the depth test fails. */\n  zFailOperationBack: StencilOperation = StencilOperation.Keep;\n\n  /**\n   * @internal\n   */\n  _apply(hardwareRenderer: HardwareRenderer, lastRenderState: RenderState): void {\n    this._platformApply(hardwareRenderer, lastRenderState.stencilState);\n  }\n\n  private _platformApply(rhi: HardwareRenderer, lastState: StencilState): void {\n    const gl = <WebGLRenderingContext>rhi.gl;\n    const {\n      enabled,\n      referenceValue,\n      mask,\n      compareFunctionFront,\n      compareFunctionBack,\n      failOperationFront,\n      zFailOperationFront,\n      passOperationFront,\n      failOperationBack,\n      zFailOperationBack,\n      passOperationBack,\n      writeMask\n    } = this;\n\n    if (enabled != lastState.enabled) {\n      if (enabled) {\n        gl.enable(gl.STENCIL_TEST);\n      } else {\n        gl.disable(WebGLRenderingContext.STENCIL_TEST);\n      }\n      lastState.enabled = enabled;\n    }\n\n    if (enabled) {\n      // apply stencil func.\n      const referenceOrMaskChange = referenceValue !== lastState.referenceValue || mask !== lastState.mask;\n      if (referenceOrMaskChange || compareFunctionFront !== lastState.compareFunctionFront) {\n        gl.stencilFuncSeparate(\n          gl.FRONT,\n          StencilState._getGLCompareFunction(compareFunctionFront),\n          referenceValue,\n          mask\n        );\n        lastState.compareFunctionFront = compareFunctionFront;\n      }\n\n      if (referenceOrMaskChange || compareFunctionBack !== lastState.compareFunctionBack) {\n        gl.stencilFuncSeparate(gl.BACK, StencilState._getGLCompareFunction(compareFunctionBack), referenceValue, mask);\n        lastState.compareFunctionBack = this.compareFunctionBack;\n      }\n      if (referenceOrMaskChange) {\n        lastState.referenceValue = this.referenceValue;\n        lastState.mask = this.mask;\n      }\n\n      // apply stencil operation.\n      if (\n        failOperationFront !== lastState.failOperationFront ||\n        zFailOperationFront !== lastState.zFailOperationFront ||\n        passOperationFront !== lastState.passOperationFront\n      ) {\n        gl.stencilOpSeparate(\n          gl.FRONT,\n          StencilState._getGLStencilOperation(failOperationFront),\n          StencilState._getGLStencilOperation(zFailOperationFront),\n          StencilState._getGLStencilOperation(passOperationFront)\n        );\n        lastState.failOperationFront = failOperationFront;\n        lastState.zFailOperationFront = zFailOperationFront;\n        lastState.passOperationFront = passOperationFront;\n      }\n\n      if (\n        failOperationBack !== lastState.failOperationBack ||\n        zFailOperationBack !== lastState.zFailOperationBack ||\n        passOperationBack !== lastState.passOperationBack\n      ) {\n        gl.stencilOpSeparate(\n          gl.BACK,\n          StencilState._getGLStencilOperation(failOperationBack),\n          StencilState._getGLStencilOperation(zFailOperationBack),\n          StencilState._getGLStencilOperation(passOperationBack)\n        );\n        lastState.failOperationBack = failOperationBack;\n        lastState.zFailOperationBack = zFailOperationBack;\n        lastState.passOperationBack = passOperationBack;\n      }\n\n      // apply write mask.\n      if (writeMask !== lastState.writeMask) {\n        gl.stencilMask(writeMask);\n        lastState.writeMask = writeMask;\n      }\n    }\n  }\n}\n","import { Engine } from \"../../Engine\";\nimport { BlendState } from \"./BlendState\";\nimport { DepthState } from \"./DepthState\";\nimport { RasterState } from \"./RasterState\";\nimport { StencilState } from \"./StencilState\";\n\n/**\n * Render state.\n */\nexport class RenderState {\n  /** Blend state. */\n  readonly blendState: BlendState = new BlendState();\n  /** Depth state. */\n  readonly depthState: DepthState = new DepthState();\n  /** Stencil state. */\n  readonly stencilState: StencilState = new StencilState();\n  /** Raster state. */\n  readonly rasterState: RasterState = new RasterState();\n\n  /** @internal */\n  _apply(engine: Engine): void {\n    const hardwareRenderer = engine._hardwareRenderer;\n    const lastRenderState = engine._lastRenderState;\n    this.blendState._apply(hardwareRenderer, lastRenderState);\n    this.depthState._apply(hardwareRenderer, lastRenderState);\n    this.stencilState._apply(hardwareRenderer, lastRenderState);\n    this.rasterState._apply(hardwareRenderer, lastRenderState);\n  }\n}\n","import { ResourceManager } from \"./asset/ResourceManager\";\nimport { Event, EventDispatcher, Logger, Time } from \"./base\";\nimport { Canvas } from \"./Canvas\";\nimport { ComponentsManager } from \"./ComponentsManager\";\nimport { EngineFeature } from \"./EngineFeature\";\nimport { Entity } from \"./Entity\";\nimport { FeatureManager } from \"./FeatureManager\";\nimport { HardwareRenderer } from \"./HardwareRenderer\";\nimport { RenderElement } from \"./RenderPipeline/RenderElement\";\nimport { Scene } from \"./Scene\";\nimport { SceneManager } from \"./SceneManager\";\nimport { Shader } from \"./shader/Shader\";\nimport { ShaderPool } from \"./shader/ShaderPool\";\nimport { ShaderProgramPool } from \"./shader/ShaderProgramPool\";\nimport { RenderState } from \"./shader/state/RenderState\";\n\n/** TODO: delete */\nconst engineFeatureManager = new FeatureManager<EngineFeature>();\nShaderPool.init();\n\n/**\n * Engine.\n */\nexport class Engine extends EventDispatcher {\n  _componentsManager: ComponentsManager = new ComponentsManager();\n  _hardwareRenderer: HardwareRenderer;\n  _lastRenderState: RenderState = new RenderState();\n\n  /* @internal */\n  _renderCount: number = 0;\n  /* @internal */\n  _shaderProgramPools: ShaderProgramPool[] = [];\n\n  protected _canvas: Canvas;\n  private _resourceManager: ResourceManager = new ResourceManager(this);\n  private _sceneManager: SceneManager = new SceneManager(this);\n  private _vSyncCount: number = 1;\n  private _targetFrameRate: number = 60;\n  private _time: Time = new Time();\n  private _isPaused: boolean = true;\n  private _requestId: number;\n  private _timeoutId: number;\n  private _vSyncCounter: number = 1;\n  private _targetFrameInterval: number = 1000 / 60;\n\n  private _animate = () => {\n    if (this._vSyncCount) {\n      this._requestId = requestAnimationFrame(this._animate);\n      if (this._vSyncCounter++ % this._vSyncCount === 0) {\n        this.update();\n        this._vSyncCounter = 1;\n      }\n    } else {\n      this._timeoutId = window.setTimeout(this._animate, this._targetFrameInterval);\n      this.update();\n    }\n  };\n\n  /**\n   * The canvas to use for rendering.\n   * @readonly\n   */\n  get canvas(): Canvas {\n    return this._canvas;\n  }\n\n  /**\n   * Get the resource manager.\n   * @readonly\n   */\n  get resourceManager(): ResourceManager {\n    return this._resourceManager;\n  }\n\n  /**\n   * Get the scene manager.\n   * @readonly\n   */\n  get sceneManager(): SceneManager {\n    return this._sceneManager;\n  }\n\n  /**\n   * Get the Time class.\n   * @readonly\n   */\n  get time(): Time {\n    return this._time;\n  }\n\n  /**\n   * Whether the engine is paused.\n   * @readonly\n   */\n  get isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * The number of vertical synchronization means the number of vertical blanking for one frame.\n   * @remarks 0 means that the vertical synchronization is turned off.\n   */\n  get vSyncCount(): number {\n    return this._vSyncCount;\n  }\n\n  set vSyncCount(value: number) {\n    this._vSyncCount = Math.max(0, Math.floor(value));\n  }\n\n  /**\n   * Set the target frame rate you want to achieve.\n   * @remarks\n   * It only takes effect when vSyncCount = 0 (ie, vertical synchronization is turned off).\n   * The larger the value, the higher the target frame rate, Number.POSITIVE_INFINIT represents the infinite target frame rate.\n   */\n  get targetFrameRate(): number {\n    return this._targetFrameRate;\n  }\n\n  set targetFrameRate(value: number) {\n    value = Math.max(0.000001, value);\n    this._targetFrameRate = value;\n    this._targetFrameInterval = 1000 / value;\n  }\n\n  /**\n   * Graphics API renderer.\n   * @deprecated\n   */\n  get renderhardware(): HardwareRenderer {\n    return this._hardwareRenderer;\n  }\n\n  /**\n   * Create engine.\n   * @param canvas - The canvas to use for rendering\n   * @param hardwareRenderer - Graphics API renderer\n   */\n  constructor(canvas: Canvas, hardwareRenderer: HardwareRenderer) {\n    super(null);\n    this._hardwareRenderer = hardwareRenderer;\n    this._hardwareRenderer.init(canvas);\n    this._canvas = canvas;\n    // @todo delete\n    engineFeatureManager.addObject(this);\n    this._sceneManager.activeScene = new Scene(this, \"DefaultScene\");\n  }\n\n  /**\n   * Create an entity.\n   * @param name - The name of the entity\n   * @returns Entity\n   */\n  createEntity(name?: string): Entity {\n    return new Entity(this, name);\n  }\n\n  /**\n   * Pause the engine.\n   */\n  pause(): void {\n    this._isPaused = true;\n    cancelAnimationFrame(this._requestId);\n    clearTimeout(this._timeoutId);\n  }\n\n  /**\n   * Resume the engine.\n   */\n  resume(): void {\n    if (!this._isPaused) return;\n    this._isPaused = false;\n    this.time.reset();\n    requestAnimationFrame(this._animate);\n  }\n\n  /**\n   * Update the engine loop manually. If you call engine.run(), you generally don't need to call this function.\n   */\n  update(): void {\n    const time = this._time;\n    const deltaTime = time.deltaTime;\n\n    time.tick();\n    RenderElement._restPool();\n\n    engineFeatureManager.callFeatureMethod(this, \"preTick\", [this, this._sceneManager._activeScene]);\n\n    const scene = this._sceneManager._activeScene;\n    const componentsManager = this._componentsManager;\n    if (scene) {\n      componentsManager.callScriptOnStart();\n      componentsManager.callScriptOnUpdate(deltaTime);\n      componentsManager.callAnimationUpdate(deltaTime);\n      componentsManager.callScriptOnLateUpdate(deltaTime);\n\n      this._render(scene);\n    }\n\n    this._componentsManager.callComponentDestory();\n\n    engineFeatureManager.callFeatureMethod(this, \"postTick\", [this, this._sceneManager._activeScene]);\n  }\n\n  /**\n   * Execution engine loop.\n   */\n  run(): void {\n    // @todo: delete\n    engineFeatureManager.callFeatureMethod(this, \"preLoad\", [this]);\n    this.resume();\n    this.trigger(new Event(\"run\", this));\n  }\n\n  /**\n   * Destroy engine.\n   */\n  destroy(): void {\n    if (this._sceneManager) {\n      // -- event\n      this.trigger(new Event(\"shutdown\", this));\n      engineFeatureManager.callFeatureMethod(this, \"shutdown\", [this]);\n\n      // -- cancel animation\n      this.pause();\n\n      this._animate = null;\n\n      this._sceneManager._activeScene.destroy();\n      this._sceneManager = null;\n      this._resourceManager.gc();\n      this._resourceManager = null;\n\n      this._canvas = null;\n\n      this.features = [];\n      this._time = null;\n\n      // todo: delete\n      (engineFeatureManager as any)._objects = [];\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _getShaderProgramPool(shader: Shader): ShaderProgramPool {\n    const index = shader._shaderId;\n    const shaderProgramPools = this._shaderProgramPools;\n    let pool = shaderProgramPools[index];\n    if (!pool) {\n      const length = index + 1;\n      if (length < shaderProgramPools.length) {\n        shaderProgramPools.length = length;\n      }\n      shaderProgramPools[index] = pool = new ShaderProgramPool();\n    }\n    return pool;\n  }\n\n  _render(scene: Scene): void {\n    const cameras = scene._activeCameras;\n    const componentsManager = this._componentsManager;\n    const deltaTime = this.time.deltaTime;\n    componentsManager.callRendererOnUpdate(deltaTime);\n\n    scene._updateShaderData();\n\n    if (cameras.length > 0) {\n      // Sort on priority\n      //@ts-ignore\n      cameras.sort((camera1, camera2) => camera1.priority - camera2.priority);\n      for (let i = 0, l = cameras.length; i < l; i++) {\n        const camera = cameras[i];\n        const cameraEntity = camera.entity;\n        if (camera.enabled && cameraEntity.isActiveInHierarchy) {\n          componentsManager.callCameraOnBeginRender(camera);\n          Scene.sceneFeatureManager.callFeatureMethod(scene, \"preRender\", [scene, camera]); //TODO: will be removed\n          camera.render();\n          Scene.sceneFeatureManager.callFeatureMethod(scene, \"postRender\", [scene, camera]); //TODO: will be removed\n          componentsManager.callCameraOnEndRender(camera);\n        }\n      }\n    } else {\n      Logger.debug(\"NO active camera.\");\n    }\n  }\n\n  //-----------------------------------------@deprecated-----------------------------------\n\n  findFeature(Feature) {\n    return engineFeatureManager.findFeature(this, Feature);\n  }\n\n  static registerFeature(Feature: new () => EngineFeature): void {\n    engineFeatureManager.registerFeature(Feature);\n  }\n\n  features: EngineFeature[] = [];\n}\n","/**\n * System info.\n */\nexport class SystemInfo {\n  /**\n   * The pixel ratio of the device.\n   */\n  static get devicePixelRatio(): number {\n    return window.devicePixelRatio;\n  }\n}\n","import { Engine } from \"./Engine\";\nimport { Scene } from \"./Scene\";\n\n/**\n * Engine feature plug-in.\n * @deprecated\n */\nexport class EngineFeature {\n  /**\n   * Callback before the engine main loop runs,used to load resource.\n   * @param engine - Engine\n   */\n  public preLoad(engine: Engine): void {}\n\n  /**\n   * Callback before every engine tick.\n   * @param engine - Engine\n   * @param currentScene - Scene\n   */\n  public preTick(engine: Engine, currentScene: Scene): void {}\n\n  /**\n   * Callback after every engine tick.\n   * @param  engine - Engine\n   */\n  public postTick(engine: Engine, currentScene: Scene): void {}\n\n  /**\n   * Callback after the engine is destroyed.\n   * @param engine - Engine\n   */\n  public shutdown(engine: Engine): void {}\n}\n","import { Camera } from \"./Camera\";\nimport { ignoreClone } from \"./clone/CloneManager\";\nimport { Component } from \"./Component\";\n\n/**\n * Script class, used for logic writing.\n */\nexport class Script extends Component {\n  /** @internal */\n  @ignoreClone\n  _started: boolean = false;\n  /** @internal */\n  @ignoreClone\n  _onStartIndex: number = -1;\n  /** @internal */\n  @ignoreClone\n  _onUpdateIndex: number = -1;\n  /** @internal */\n  @ignoreClone\n  _onLateUpdateIndex: number = -1;\n  /** @internal */\n  @ignoreClone\n  _onPreRenderIndex: number = -1;\n  /** @internal */\n  @ignoreClone\n  _onPostRenderIndex: number = -1;\n\n  /**\n   * Called when be enabled first time, only once.\n   */\n  onAwake(): void {}\n\n  /**\n   * Called when be enabled.\n   */\n  onEnable(): void {}\n\n  /**\n   * Called before the frame-level loop start for the first time, only once.\n   */\n  onStart(): void {}\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {}\n\n  /**\n   * Called after the onUpdate finished, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onLateUpdate(deltaTime: number): void {}\n\n  /**\n   * Called before camera rendering, called per camera.\n   * @param camera - Current camera.\n   */\n  onBeginRender(camera: Camera): void {}\n\n  /**\n   * Called after camera rendering, called per camera.\n   * @param camera - Current camera.\n   */\n  onEndRender(camera: Camera): void {}\n\n  /**\n   * Called when be diabled.\n   */\n  onDisable(): void {}\n\n  /**\n   * Called at the end of the destroyed frame.\n   */\n  onDestroy(): void {}\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onAwake(): void {\n    this.onAwake();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onEnable(): void {\n    const componentsManager = this.engine._componentsManager;\n    const prototype = Script.prototype;\n    if (!this._started) {\n      componentsManager.addOnStartScript(this);\n    }\n    if (this.onUpdate !== prototype.onUpdate) {\n      componentsManager.addOnUpdateScript(this);\n    }\n    if (this.onLateUpdate !== prototype.onLateUpdate) {\n      componentsManager.addOnLateUpdateScript(this);\n    }\n    this.onEnable();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onDisable(): void {\n    const componentsManager = this.engine._componentsManager;\n    // Use \"xxIndex\" is more safe.\n    // When call onDisable it maybe it still not in script queue,for example write \"entity.isActive = false\" in onWake().\n    if (this._onStartIndex !== -1) {\n      componentsManager.removeOnStartScript(this);\n    }\n    if (this._onUpdateIndex !== -1) {\n      componentsManager.removeOnUpdateScript(this);\n    }\n    if (this._onLateUpdateIndex !== -1) {\n      componentsManager.removeOnLateUpdateScript(this);\n    }\n    this.onDisable();\n  }\n\n  /**\n   * @internal\n   * @inheritDoc\n   * @override\n   */\n  _onDestroy(): void {\n    this.engine._componentsManager.addDestoryComponent(this);\n  }\n}\n","import { BoundingBox, Matrix, Vector3 } from \"@oasis-engine/math\";\nimport { Camera } from \"./Camera\";\nimport { deepClone, ignoreClone } from \"./clone/CloneManager\";\nimport { Component } from \"./Component\";\nimport { Entity } from \"./Entity\";\nimport { RenderContext } from \"./RenderPipeline/RenderContext\";\nimport { Shader } from \"./shader\";\nimport { ShaderDataGroup } from \"./shader/enums/ShaderDataGroup\";\nimport { ShaderData } from \"./shader/ShaderData\";\nimport { ShaderMacroCollection } from \"./shader/ShaderMacroCollection\";\nimport { UpdateFlag } from \"./UpdateFlag\";\n\n/**\n * Renderable components.\n */\nexport abstract class Renderer extends Component {\n  private static _localMatrixProperty = Shader.getPropertyByName(\"u_localMat\");\n  private static _worldMatrixProperty = Shader.getPropertyByName(\"u_modelMat\");\n  private static _mvMatrixProperty = Shader.getPropertyByName(\"u_MVMat\");\n  private static _mvpMatrixProperty = Shader.getPropertyByName(\"u_MVPMat\");\n  private static _mvInvMatrixProperty = Shader.getPropertyByName(\"u_MVInvMat\");\n  private static _normalMatrixProperty = Shader.getPropertyByName(\"u_normalMat\");\n\n  /** ShaderData related to renderer. */\n  @deepClone\n  readonly shaderData: ShaderData = new ShaderData(ShaderDataGroup.Renderer);\n  /** Whether it is clipped by the frustum, needs to be turned on camera.enableFrustumCulling。 */\n  @ignoreClone\n  isCulled: boolean = false;\n\n  /** @internal */\n  @ignoreClone\n  _onUpdateIndex: number = -1;\n\n  /** @internal */\n  @ignoreClone\n  _rendererIndex: number = -1;\n\n  /** @internal */\n  @ignoreClone\n  _globalShaderMacro: ShaderMacroCollection = new ShaderMacroCollection();\n\n  @ignoreClone\n  protected _overrideUpdate: boolean = false;\n\n  @ignoreClone\n  private _transformChangeFlag: UpdateFlag;\n  @deepClone\n  private _bounds: BoundingBox = new BoundingBox(new Vector3(), new Vector3());\n  @ignoreClone\n  private _mvMatrix: Matrix = new Matrix();\n  @ignoreClone\n  private _mvpMatrix: Matrix = new Matrix();\n  @ignoreClone\n  private _mvInvMatrix: Matrix = new Matrix();\n  @ignoreClone\n  private _normalMatrix: Matrix = new Matrix();\n\n  get bounds(): BoundingBox {\n    const changeFlag = this._transformChangeFlag;\n    if (changeFlag.flag) {\n      this._updateBounds(this._bounds);\n      changeFlag.flag = false;\n    }\n    return this._bounds;\n  }\n\n  /**\n   * @internal\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    const prototype = Renderer.prototype;\n    this._overrideUpdate = this.update !== prototype.update;\n    this._transformChangeFlag = this.entity.transform.registerWorldChangeFlag();\n    this.shaderData._addRefCount(1);\n  }\n\n  /**\n   * @internal\n   */\n  _updateShaderData(context: RenderContext) {\n    const shaderData = this.shaderData;\n    const worldMatrix = this.entity.transform.worldMatrix;\n    const mvMatrix = this._mvMatrix;\n    const mvpMatrix = this._mvpMatrix;\n    const mvInvMatrix = this._mvInvMatrix;\n    const normalMatrix = this._normalMatrix;\n\n    Matrix.multiply(context._camera.viewMatrix, worldMatrix, mvMatrix);\n    Matrix.multiply(context._viewProjectMatrix, worldMatrix, mvpMatrix);\n    Matrix.invert(mvMatrix, mvInvMatrix);\n    Matrix.invert(worldMatrix, normalMatrix);\n    normalMatrix.transpose();\n\n    shaderData.setMatrix(Renderer._localMatrixProperty, this.entity.transform.localMatrix);\n    shaderData.setMatrix(Renderer._worldMatrixProperty, worldMatrix);\n    shaderData.setMatrix(Renderer._mvMatrixProperty, mvMatrix);\n    shaderData.setMatrix(Renderer._mvpMatrixProperty, mvpMatrix);\n    shaderData.setMatrix(Renderer._mvInvMatrixProperty, mvInvMatrix);\n    shaderData.setMatrix(Renderer._normalMatrixProperty, normalMatrix);\n  }\n\n  /**\n   * @internal\n   */\n  _onDestroy(): void {\n    const flag = this._transformChangeFlag;\n    if (flag) {\n      flag.destroy();\n      this._transformChangeFlag = null;\n    }\n    this.shaderData._addRefCount(-1);\n  }\n\n  abstract render(camera: Camera): void;\n\n  update(deltaTime: number): void {}\n\n  protected _updateBounds(worldBounds: any): void {}\n\n  _onEnable() {\n    const componentsManager = this.engine._componentsManager;\n    if (this._overrideUpdate) {\n      componentsManager.addOnUpdateRenderers(this);\n    }\n    componentsManager.addRenderer(this);\n  }\n\n  _onDisable() {\n    const componentsManager = this.engine._componentsManager;\n    if (this._overrideUpdate) {\n      componentsManager.removeOnUpdateRenderers(this);\n    }\n    componentsManager.removeRenderer(this);\n  }\n\n  _render(camera: Camera) {\n    this.render(camera);\n  }\n}\n","import { IClone } from \"@oasis-engine/design\";\nimport { RefObject } from \"../asset/RefObject\";\nimport { CloneManager } from \"../clone/CloneManager\";\nimport { Engine } from \"../Engine\";\nimport { RenderElement } from \"../RenderPipeline/RenderElement\";\nimport { ShaderDataGroup } from \"../shader/enums/ShaderDataGroup\";\nimport { Shader } from \"../shader/Shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { RenderState } from \"../shader/state/RenderState\";\nimport { RenderQueueType } from \"./enums/RenderQueueType\";\n\n/**\n * Material.\n */\nexport class Material extends RefObject implements IClone {\n  /** Shader used by the material. */\n  shader: Shader;\n  /** Render queue type. */\n  renderQueueType: RenderQueueType = RenderQueueType.Opaque;\n  /** Shader data. */\n  readonly shaderData: ShaderData = new ShaderData(ShaderDataGroup.Material);\n  /** Render state. */\n  readonly renderState: RenderState = new RenderState(); // todo: later will as a part of shaderData when shader effect frame is OK, that is more powerful and flexible.\n\n  /**\n   * Create a material instance.\n   * @param engine - Engine to which the material belongs\n   * @param shader - Shader used by the material\n   */\n  constructor(engine: Engine, shader: Shader) {\n    super(engine);\n    this.shader = shader;\n  }\n\n  /**\n   * Clone and return the instance.\n   */\n  clone(): Material {\n    const dest = new Material(this._engine, this.shader);\n    this.cloneTo(dest);\n    return dest;\n  }\n\n  /**\n   * Clone to the target material.\n   * @param target - target material\n   */\n  cloneTo(target: Material): void {\n    target.shader = this.shader;\n    target.renderQueueType = this.renderQueueType;\n    this.shaderData.cloneTo(target.shaderData);\n    CloneManager.deepCloneObject(this.renderState, target.renderState);\n  }\n\n  /**\n   * @override\n   */\n  _addRefCount(value: number): void {\n    super._addRefCount(value);\n    this.shaderData._addRefCount(value);\n  }\n\n  /**\n   * @internal\n   * @todo:temporary solution\n   */\n  _preRender(renderElement: RenderElement) {}\n\n  /**\n   * @override\n   */\n  protected _onDestroy(): void {}\n}\n","import { Vector4 } from \"@oasis-engine/math\";\nimport { ClearMode } from \"../base/Constant\";\nimport { Camera } from \"../Camera\";\nimport { Layer } from \"../Layer\";\nimport { Material } from \"../material/Material\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\nimport { RenderQueue } from \"./RenderQueue\";\n\nlet passNum = 0;\n\n/**\n * RednerPass.\n */\nclass RenderPass {\n  public name: string;\n  public enabled: boolean;\n  public priority: number;\n  public renderTarget: RenderTarget;\n  public replaceMaterial: Material;\n  public mask: Layer;\n  public renderOverride: boolean;\n  public clearMode;\n  private _clearParam;\n\n  /**\n   * Create a RenderPass.\n   * @param name - Pass name\n   * @param priority - Priority, less than 0 before the default pass, greater than 0 after the default pass\n   * @param renderTarget - The specified Render Target\n   * @param replaceMaterial -  Replaced material\n   * @param mask - Perform bit and operations with Entity.Layer to filter the objects that this Pass needs to render\n   * @param clearParam - Clear the background color of renderTarget\n   */\n  constructor(\n    name = `RENDER_PASS${passNum++}`,\n    priority = 0,\n    renderTarget = null,\n    replaceMaterial = null,\n    mask = null,\n    clearParam = new Vector4(0, 0, 0, 0)\n  ) {\n    this.name = name;\n    this.enabled = true;\n    this.priority = priority;\n    this.renderTarget = renderTarget;\n    this.replaceMaterial = replaceMaterial;\n    this.mask = mask || Layer.Everything;\n    this.renderOverride = false; // If renderOverride is set to true, you need to implement the render method\n\n    this.clearMode = ClearMode.SOLID_COLOR;\n    this._clearParam = clearParam; // PASS use render target's clearParam\n  }\n\n  /**\n   * Canvas clear parameters, the default is to use the clearColor of RenderTarget.\n   */\n  get clearParam() {\n    return this._clearParam;\n  }\n\n  set clearParam(v) {\n    this._clearParam = v;\n  }\n\n  /**\n   * Rendering callback, will be executed if renderOverride is set to true.\n   * @param camera - Camera\n   * @param queue - RenderQueue\n   */\n  render(camera: Camera, queue: RenderQueue) {}\n\n  /**\n   * Post rendering callback.\n   * @param camera - Camera\n   * @param queue - RenderQueue\n   */\n  preRender(camera: Camera, queue: RenderQueue) {}\n\n  /**\n   * Post rendering callback.\n   * @param camera - Camera\n   * @param queue - RenderQueue\n   */\n  postRender(camera: Camera, queue: RenderQueue) {}\n}\n\nexport { RenderPass };\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { ClearMode } from \"../base\";\nimport { Camera } from \"../Camera\";\nimport { RenderPass } from \"./RenderPass\";\n\n/**\n * @private\n */\nexport class SeparateSpritePass extends RenderPass {\n  private _spriteItems;\n\n  constructor(name = \"SeparateSprite\", priority = 10) {\n    super(name, priority);\n\n    this.clearMode = ClearMode.DONT_CLEAR;\n    this.renderOverride = true;\n\n    this._spriteItems = [];\n  }\n\n  get isUsed() {\n    return this._spriteItems.length > 0;\n  }\n\n  preRender() {\n    this.enabled = this.isUsed;\n  }\n\n  render(camera) {\n    const rhi = camera.renderHardware;\n\n    this._sortByDistance(camera.eyePos);\n    const items = this._spriteItems;\n    const material = camera._renderPipeline._defaultSpriteMaterial;\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      rhi.drawSprite(\n        material,\n        item.positionQuad,\n        item.uvRect,\n        item.tintColor,\n        item.texture,\n        item.renderMode,\n        item.camera\n      );\n    }\n\n    items.length = 0;\n  }\n\n  postRender(camera) {\n    if (this.enabled) {\n      camera.renderHardware.flushSprite(camera.engine, camera._hardwareRenderer._defaultSpriteMaterial);\n    }\n  }\n\n  _sortByDistance(eyePos) {\n    if (this._spriteItems.length > 1) {\n      this._spriteItems = this._spriteItems.sort(function (item1, item2) {\n        if (item1.component.renderPriority === item2.component.renderPriority) {\n          const pos1 = item1.component.node.worldPosition;\n          const pos2 = item2.component.node.worldPosition;\n\n          const dis = Vector3.distanceSquared(pos2, eyePos) - Vector3.distanceSquared(pos1, eyePos);\n          return dis;\n        } else {\n          return item1.component.renderPriority - item2.component.renderPriority;\n        }\n      });\n    }\n  }\n\n  pushSprite(component, positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    this._spriteItems.push({\n      component,\n      positionQuad,\n      uvRect,\n      tintColor,\n      texture,\n      renderMode,\n      camera\n    });\n  }\n}\n","import { Vector4 } from \"@oasis-engine/math\";\nimport { ClearMode } from \"../base\";\nimport { Camera } from \"../Camera\";\nimport { Component } from \"../Component\";\nimport { Layer } from \"../Layer\";\nimport { Material } from \"../material/Material\";\nimport { Shader } from \"../shader\";\nimport { TextureCubeFace } from \"../texture/enums/TextureCubeFace\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\nimport { RenderContext } from \"./RenderContext\";\nimport { RenderElement } from \"./RenderElement\";\nimport { RenderPass } from \"./RenderPass\";\nimport { RenderQueue } from \"./RenderQueue\";\nimport { SeparateSpritePass } from \"./SeparateSpritePass\";\n\n/**\n * Basic render pipeline.\n */\nexport class BasicRenderPipeline {\n  _defaultSpriteMaterial: Material;\n  protected _camera: Camera;\n  private _queue: RenderQueue;\n  private _defaultPass: RenderPass;\n  protected _renderPassArray: Array<RenderPass>;\n  private _canvasDepthPass;\n  private _separateSpritePass;\n\n  /**\n   * Create a basic render pipeline.\n   * @param camera - Camera\n   */\n  constructor(camera: Camera) {\n    this._camera = camera;\n    this._queue = new RenderQueue();\n\n    this._renderPassArray = [];\n    this._defaultPass = new RenderPass(\"default\", 0, null, null, 0);\n    this.addRenderPass(this._defaultPass);\n    this._defaultSpriteMaterial = new Material(camera.engine, Shader.find(\"Sprite\"));\n  }\n\n  /**\n   * Default render pass.\n   */\n  get defaultRenderPass() {\n    return this._defaultPass;\n  }\n\n  /**\n   * Add render pass.\n   * @param nameOrPass - The name of this Pass or RenderPass object. When it is a name, the following parameters need to be provided\n   * @param priority - Priority, less than 0 before the default pass, greater than 0 after the default pass\n   * @param renderTarget - The specified Render Target\n   * @param replaceMaterial -  Replaced material\n   * @param mask - Perform bit and operations with Entity.Layer to filter the objects that this Pass needs to render\n   * @param clearParam - Clear the background color of renderTarget\n   */\n  addRenderPass(\n    nameOrPass: string | RenderPass,\n    priority: number = null,\n    renderTarget: RenderTarget = null,\n    replaceMaterial: Material = null,\n    mask: Layer = null,\n    clearParam = new Vector4(0, 0, 0, 0)\n  ) {\n    if (typeof nameOrPass === \"string\") {\n      const renderPass = new RenderPass(nameOrPass, priority, renderTarget, replaceMaterial, mask, clearParam);\n      this._renderPassArray.push(renderPass);\n    } else if (nameOrPass instanceof RenderPass) {\n      this._renderPassArray.push(nameOrPass);\n    }\n\n    this._renderPassArray.sort(function (p1, p2) {\n      return p1.priority - p2.priority;\n    });\n  }\n\n  /**\n   * Remove render pass by name or render pass object.\n   * @param nameOrPass - Render pass name or render pass object\n   */\n  removeRenderPass(nameOrPass: string | RenderPass): void {\n    let pass: RenderPass;\n    if (typeof nameOrPass === \"string\") pass = this.getRenderPass(nameOrPass);\n    else if (nameOrPass instanceof RenderPass) pass = nameOrPass;\n    if (pass) {\n      const idx = this._renderPassArray.indexOf(pass);\n      this._renderPassArray.splice(idx, 1);\n    }\n  }\n\n  /**\n   * Get render pass by name.\n   * @param  name - Render pass name\n   */\n  getRenderPass(name: string) {\n    for (let i = 0, len = this._renderPassArray.length; i < len; i++) {\n      const pass = this._renderPassArray[i];\n      if (pass.name === name) return pass;\n    }\n\n    return null;\n  }\n\n  /**\n   * Render queue.\n   */\n  get queue(): RenderQueue {\n    return this._queue;\n  }\n\n  /**\n   * Destroy internal resources.\n   */\n  destroy() {}\n\n  /**\n   * Perform scene rendering.\n   * @param context - Render context\n   * @param cubeFace - Render surface of cube texture\n   */\n  render(context: RenderContext, cubeFace?: TextureCubeFace) {\n    const camera = this._camera;\n    const queue = this._queue;\n\n    queue.clear();\n\n    camera.engine._componentsManager.callRender(context);\n\n    queue.sort(camera.entity.transform.worldPosition);\n\n    if (this._canvasDepthPass) this._canvasDepthPass.enabled = false;\n\n    if (this._separateSpritePass && this._separateSpritePass.isUsed) {\n      // If the default rendertarget is not canvas, you need to draw on the canvas again to ensure that there is depth information\n      if (this._defaultPass.renderTarget) {\n        if (!this._canvasDepthPass) {\n          this._canvasDepthPass = new RenderPass(\"CanvasDepthRenderPass\", 0, null, null, 0);\n          this._canvasDepthPass.clearMode = ClearMode.DONT_CLEAR;\n          this.addRenderPass(this._canvasDepthPass);\n        }\n        this._canvasDepthPass.enabled = true;\n      }\n    }\n\n    for (let i = 0, len = this._renderPassArray.length; i < len; i++) {\n      this._drawRenderPass(this._renderPassArray[i], camera, cubeFace);\n    }\n  }\n\n  private _drawRenderPass(pass: RenderPass, camera: Camera, cubeFace?: TextureCubeFace) {\n    pass.preRender(camera, this.queue);\n\n    if (pass.enabled) {\n      const rhi = camera.scene.engine._hardwareRenderer;\n      const renderTarget = camera.renderTarget || pass.renderTarget;\n      rhi.activeRenderTarget(renderTarget, camera);\n      rhi.setRenderTargetFace(renderTarget, cubeFace);\n      rhi.clearRenderTarget(pass.clearMode, pass.clearParam);\n\n      if (pass.renderOverride) {\n        pass.render(camera, this.queue);\n      } else {\n        this.queue.render(camera, pass.replaceMaterial, pass.mask);\n      }\n\n      rhi.blitRenderTarget(renderTarget);\n    }\n\n    pass.postRender(camera, this.queue);\n  }\n\n  /**\n   * Push a render element to the render queue.\n   * @param element - Render element\n   */\n  pushPrimitive(element: RenderElement) {\n    this._queue.pushPrimitive(element);\n  }\n\n  pushSprite(component: Component, positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    if ((component as any).separateDraw) {\n      if (!this._separateSpritePass) {\n        this._separateSpritePass = new SeparateSpritePass();\n        this.addRenderPass(this._separateSpritePass);\n      }\n\n      this._separateSpritePass.pushSprite(component, positionQuad, uvRect, tintColor, texture, renderMode, camera);\n      return;\n    }\n\n    this.queue.pushSprite(component, positionQuad, uvRect, tintColor, texture, renderMode, camera);\n  }\n}\n","import { Matrix } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\n\n/**\n * Rendering context.\n */\nexport class RenderContext {\n  private static _renderContext: RenderContext = new RenderContext();\n\n  /**\n   * @internal\n   */\n  static _getRenderContext(camera: Camera): RenderContext {\n    const context = RenderContext._renderContext;\n    context._camera = camera;\n    Matrix.multiply(camera.projectionMatrix, camera.viewMatrix, context._viewProjectMatrix);\n    return context;\n  }\n\n  /** @internal */\n  _camera: Camera;\n  /** @internal */\n  _viewProjectMatrix: Matrix = new Matrix();\n}\n","import { BoundingFrustum, MathUtil, Matrix, Ray, Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { ClearMode } from \"./base\";\nimport { deepClone, ignoreClone } from \"./clone/CloneManager\";\nimport { Component } from \"./Component\";\nimport { dependencies } from \"./ComponentsDependencies\";\nimport { Entity } from \"./Entity\";\nimport { Layer } from \"./Layer\";\nimport { BasicRenderPipeline } from \"./RenderPipeline/BasicRenderPipeline\";\nimport { RenderContext } from \"./RenderPipeline/RenderContext\";\nimport { ShaderDataGroup } from \"./shader/enums/ShaderDataGroup\";\nimport { Shader } from \"./shader/Shader\";\nimport { ShaderData } from \"./shader/ShaderData\";\nimport { ShaderMacroCollection } from \"./shader/ShaderMacroCollection\";\nimport { TextureCubeFace } from \"./texture/enums/TextureCubeFace\";\nimport { RenderTarget } from \"./texture/RenderTarget\";\nimport { Transform } from \"./Transform\";\nimport { UpdateFlag } from \"./UpdateFlag\";\n\n/**\n * @todo\n */\ntype Sky = {};\n\nclass MathTemp {\n  static tempMat4 = new Matrix();\n  static tempVec4 = new Vector4();\n  static tempVec3 = new Vector3();\n}\n\n/**\n * ClearFlag, which controls camera's background.\n */\nexport enum ClearFlags {\n  /* Clear depth and skybox. */\n  DepthSky,\n  /* Clear depth and color. */\n  DepthColor,\n  /* Clear depth only. */\n  Depth,\n  /* Do nothing. */\n  None\n}\n\n/**\n * Camera component, as the entrance to the three-dimensional world.\n */\n@dependencies(Transform)\nexport class Camera extends Component {\n  private static _viewMatrixProperty = Shader.getPropertyByName(\"u_viewMat\");\n  private static _projectionMatrixProperty = Shader.getPropertyByName(\"u_projMat\");\n  private static _vpMatrixProperty = Shader.getPropertyByName(\"u_VPMat\");\n  private static _inverseViewMatrixProperty = Shader.getPropertyByName(\"u_viewInvMat\");\n  private static _inverseProjectionMatrixProperty = Shader.getPropertyByName(\"u_projInvMat\");\n  private static _cameraPositionProperty = Shader.getPropertyByName(\"u_cameraPos\");\n\n  /** Rendering priority - A Camera with higher priority will be rendererd on top of a camera with lower priority. */\n  priority: number = 0;\n\n  /** Whether to enable frustum culling, it is enabled by default. */\n  enableFrustumCulling: boolean = true;\n\n  /**\n   * Culling mask - which layers the camera renders.\n   * @remarks Support bit manipulation, conresponding to Entity's layer.\n   */\n  cullingMask: Layer = Layer.Everything;\n\n  /** Shader data. */\n  readonly shaderData: ShaderData = new ShaderData(ShaderDataGroup.Camera);\n\n  /** @internal */\n  _globalShaderMacro: ShaderMacroCollection = new ShaderMacroCollection();\n  /** @internal */\n  @deepClone\n  _frustum: BoundingFrustum = new BoundingFrustum();\n  /** @internal */\n  @ignoreClone\n  _renderPipeline: BasicRenderPipeline;\n\n  private _isOrthographic: boolean = false;\n  private _isProjMatSetting = false;\n  private _clearMode: ClearMode = ClearMode.SOLID_COLOR;\n  private _nearClipPlane: number = 0.1;\n  private _farClipPlane: number = 100;\n  private _fieldOfView: number = 45;\n  private _orthographicSize: number = 10;\n  private _isProjectionDirty = true;\n  private _isInvProjMatDirty: boolean = true;\n  private _isFrustumProjectDirty: boolean = true;\n  private _customAspectRatio: number | undefined = undefined;\n  private _renderTarget: RenderTarget = null;\n\n  @ignoreClone\n  private _frustumViewChangeFlag: UpdateFlag;\n  @ignoreClone\n  private _transform: Transform;\n  @ignoreClone\n  private _isViewMatrixDirty: UpdateFlag;\n  @ignoreClone\n  private _isInvViewProjDirty: UpdateFlag;\n  @deepClone\n  private _projectionMatrix: Matrix = new Matrix();\n  @deepClone\n  private _viewMatrix: Matrix = new Matrix();\n  @deepClone\n  private _backgroundColor: Vector4 = new Vector4();\n  @deepClone\n  private _viewport: Vector4 = new Vector4(0, 0, 1, 1);\n  @deepClone\n  private _inverseProjectionMatrix: Matrix = new Matrix();\n  @deepClone\n  private _inverseViewMatrix: Matrix = new Matrix();\n  @deepClone\n  private _lastAspectSize: Vector2 = new Vector2(0, 0);\n  @deepClone\n  private _invViewProjMat: Matrix = new Matrix();\n\n  /**\n   * Near clip plane - the cloest point to the camera when rendering occurs.\n   */\n  get nearClipPlane(): number {\n    return this._nearClipPlane;\n  }\n\n  set nearClipPlane(value: number) {\n    this._nearClipPlane = value;\n    this._projMatChange();\n  }\n\n  /**\n   * Far clip plane - the furthest point to the camera when rendering occurs.\n   */\n  get farClipPlane(): number {\n    return this._farClipPlane;\n  }\n\n  set farClipPlane(value: number) {\n    this._farClipPlane = value;\n    this._projMatChange();\n  }\n\n  /**\n   * The camera's view angle. activing when camera use perspective projection.\n   */\n  get fieldOfView(): number {\n    return this._fieldOfView;\n  }\n\n  set fieldOfView(value: number) {\n    this._fieldOfView = value;\n    this._projMatChange();\n  }\n\n  /**\n   * Aspect ratio. The default is automatically calculated by the viewport's aspect ratio. If it is manually set, the manual value will be kept. Call resetAspectRatio() to restore it.\n   */\n  get aspectRatio(): number {\n    const canvas = this._entity.engine.canvas;\n    return this._customAspectRatio ?? (canvas.width * this._viewport.z) / (canvas.height * this._viewport.w);\n  }\n\n  set aspectRatio(value: number) {\n    this._customAspectRatio = value;\n    this._projMatChange();\n  }\n\n  /**\n   * Viewport, normalized expression, the upper left corner is (0, 0), and the lower right corner is (1, 1).\n   * @remarks Re-assignment is required after modification to ensure that the modification takes effect.\n   */\n  get viewport(): Vector4 {\n    return this._viewport;\n  }\n\n  set viewport(value: Vector4) {\n    if (value !== this._viewport) {\n      value.cloneTo(this._viewport);\n    }\n    this._projMatChange();\n  }\n\n  /**\n   * Whether it is orthogonal, the default is false. True will use orthographic projection, false will use perspective projection.\n   */\n  get isOrthographic(): boolean {\n    return this._isOrthographic;\n  }\n\n  set isOrthographic(value: boolean) {\n    this._isOrthographic = value;\n    this._projMatChange();\n  }\n\n  /**\n   * Half the size of the camera in orthographic mode.\n   */\n  get orthographicSize(): number {\n    return this._orthographicSize;\n  }\n\n  set orthographicSize(value: number) {\n    this._orthographicSize = value;\n    this._projMatChange();\n  }\n\n  /**\n   * Clear background flags.\n   */\n  get clearFlags(): ClearFlags {\n    throw \"not implemented\";\n  }\n\n  /**\n   * @todo Skybox refactor\n   */\n  set clearFlags(value: ClearFlags) {\n    throw \"not implemented\";\n  }\n\n  /**\n   * Clear the background color of the viewport, which takes effect when clearFlags is DepthColor.\n   */\n  get backgroundColor(): Vector4 {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(value: Vector4) {\n    this.setClearMode(this._clearMode, value);\n  }\n\n  /**\n   * Clear the background sky of the viewport, active when clearFlags is DepthSky.\n   * @todo Render pipeline modification\n   */\n  get backgroundSky(): Sky {\n    throw new Error(\"not implemented\");\n  }\n\n  /**\n   * View matrix.\n   */\n  get viewMatrix(): Readonly<Matrix> {\n    // Remove scale\n    if (this._isViewMatrixDirty.flag) {\n      this._isViewMatrixDirty.flag = false;\n      Matrix.invert(this._transform.worldMatrix, this._viewMatrix);\n    }\n    return this._viewMatrix;\n  }\n\n  /**\n   * The projection matrix is ​​calculated by the relevant parameters of the camera by default. If it is manually set, the manual value will be maintained. Call resetProjectionMatrix() to restore it.\n   */\n  set projectionMatrix(value: Matrix) {\n    this._projectionMatrix = value;\n    this._isProjMatSetting = true;\n    this._projMatChange();\n  }\n\n  get projectionMatrix(): Matrix {\n    const canvas = this._entity.engine.canvas;\n    if (\n      (!this._isProjectionDirty || this._isProjMatSetting) &&\n      this._lastAspectSize.x === canvas.width &&\n      this._lastAspectSize.y === canvas.height\n    ) {\n      return this._projectionMatrix;\n    }\n    this._isProjectionDirty = false;\n    this._lastAspectSize.x = canvas.width;\n    this._lastAspectSize.y = canvas.height;\n    const aspectRatio = this.aspectRatio;\n    if (!this._isOrthographic) {\n      Matrix.perspective(\n        MathUtil.degreeToRadian(this._fieldOfView),\n        aspectRatio,\n        this._nearClipPlane,\n        this._farClipPlane,\n        this._projectionMatrix\n      );\n    } else {\n      const width = this._orthographicSize * aspectRatio;\n      const height = this._orthographicSize;\n      Matrix.ortho(-width, width, -height, height, this._nearClipPlane, this._farClipPlane, this._projectionMatrix);\n    }\n    return this._projectionMatrix;\n  }\n\n  /**\n   * Whether to enable HDR.\n   * @todo When render pipeline modification\n   */\n  get enableHDR(): boolean {\n    console.log(\"not implemention\");\n    return false;\n  }\n\n  set enableHDR(value: boolean) {\n    console.log(\"not implemention\");\n  }\n\n  /**\n   * RenderTarget. After setting, it will be rendered to the renderTarget. If it is empty, it will be rendered to the main canvas.\n   */\n  get renderTarget(): RenderTarget | null {\n    return this._renderTarget;\n  }\n\n  set renderTarget(value: RenderTarget | null) {\n    this._renderTarget = value;\n  }\n\n  /**\n   * Create the Camera component.\n   * @param entity - Entity\n   */\n  constructor(entity: Entity) {\n    super(entity);\n\n    const transform = this.entity.transform;\n    this._transform = transform;\n    this._isViewMatrixDirty = transform.registerWorldChangeFlag();\n    this._isInvViewProjDirty = transform.registerWorldChangeFlag();\n    this._frustumViewChangeFlag = transform.registerWorldChangeFlag();\n    this._renderPipeline = new BasicRenderPipeline(this);\n    this.shaderData._addRefCount(1);\n\n    this.setClearMode();\n  }\n\n  /**\n   * Restore the automatic calculation of projection matrix through fieldOfView, nearClipPlane and farClipPlane.\n   */\n  resetProjectionMatrix(): void {\n    this._isProjMatSetting = false;\n    this._projMatChange();\n  }\n\n  /**\n   * Restore the automatic calculation of the aspect ratio through the viewport aspect ratio.\n   */\n  resetAspectRatio(): void {\n    this._customAspectRatio = undefined;\n    this._projMatChange();\n  }\n\n  /**\n   * Transform a point from world space to viewport space.\n   * @param point - Point in world space\n   * @param out - A point in the viewport space, X and Y are the viewport space coordinates, Z is the viewport depth, the near clipping plane is 0, the far clipping plane is 1, and W is the world unit distance from the camera\n   * @returns Point in viewport space\n   */\n  worldToViewportPoint(point: Vector3, out: Vector4): Vector4 {\n    Matrix.multiply(this.projectionMatrix, this.viewMatrix, MathTemp.tempMat4);\n    MathTemp.tempVec4.setValue(point.x, point.y, point.z, 1.0);\n    Vector4.transform(MathTemp.tempVec4, MathTemp.tempMat4, MathTemp.tempVec4);\n\n    const w = MathTemp.tempVec4.w;\n    const nx = MathTemp.tempVec4.x / w;\n    const ny = MathTemp.tempVec4.y / w;\n    const nz = MathTemp.tempVec4.z / w;\n\n    // Transform of coordinate axis.\n    out.x = (nx + 1.0) * 0.5;\n    out.y = (1.0 - ny) * 0.5;\n    out.z = nz;\n    out.w = w;\n    return out;\n  }\n\n  /**\n   * Transform a point from viewport space to world space.\n   * @param point - Point in viewport. X and Y are the viewport space coordinates, Z is the viewport depth. The near clipping plane is 0, and the far clipping plane is 1.\n   * @param out - Point in world space\n   * @returns Point in world space\n   */\n  viewportToWorldPoint(point: Vector3, out: Vector3): Vector3 {\n    const invViewProjMat = this.invViewProjMat;\n    return this._innerViewportToWorldPoint(point, invViewProjMat, out);\n  }\n\n  /**\n   * Generate a ray by a point in viewport.\n   * @param point Point in viewport point.\n   * @param out - Ray\n   * @returns Ray\n   */\n  viewportPointToRay(point: Vector2, out: Ray): Ray {\n    const clipPoint = MathTemp.tempVec3;\n    // Use the intersection of the near clipping plane as the origin point.\n    clipPoint.setValue(point.x, point.y, 0);\n    const origin = this.viewportToWorldPoint(clipPoint, out.origin);\n    // Use the intersection of the far clipping plane as the origin point.\n    clipPoint.z = 1.0;\n    const farPoint: Vector3 = this._innerViewportToWorldPoint(clipPoint, this._invViewProjMat, clipPoint);\n    Vector3.subtract(farPoint, origin, out.direction);\n    out.direction.normalize();\n\n    return out;\n  }\n\n  /**\n   * Transform the X and Y coordinates of a point from screen space to viewport space\n   * @param point - Point in screen space\n   * @param out - Point in viewport space\n   * @returns Point in viewport space\n   */\n  screenToViewportPoint<T extends Vector2 | Vector3>(point: Vector3 | Vector2, out: T): T {\n    const canvas = this.engine.canvas;\n    const viewport = this.viewport;\n    out.x = (point.x / canvas.width - viewport.x) / viewport.z;\n    out.y = (point.y / canvas.height - viewport.y) / viewport.w;\n    return out;\n  }\n\n  /**\n   * Transform the X and Y coordinates of a point from viewport space to screen space.\n   * @param point - Point in viewport space\n   * @param out - Point in screen space\n   * @returns Point in screen space\n   */\n  viewportToScreenPoint<T extends Vector2 | Vector3 | Vector4>(point: T, out: T): T {\n    const canvas = this.engine.canvas;\n    const viewport = this.viewport;\n    out.x = (viewport.x + point.x * viewport.z) * canvas.width;\n    out.y = (viewport.y + point.y * viewport.w) * canvas.height;\n    return out;\n  }\n\n  /**\n   * Transform a point from world space to screen space.\n   * @param point - Point in world space\n   * @param out - Point of screen space\n   * @returns Point of screen space\n   */\n  worldToScreenPoint(point: Vector3, out: Vector4): Vector4 {\n    this.worldToViewportPoint(point, out);\n    return this.viewportToScreenPoint(out, out);\n  }\n\n  /**\n   * Transform a point from screen space to world space.\n   * @param point - Screen space point\n   * @param out - Point in world space\n   * @returns Point in world space\n   */\n  screenToWorldPoint(point: Vector3, out: Vector3): Vector3 {\n    this.screenToViewportPoint(point, out);\n    return this.viewportToWorldPoint(out, out);\n  }\n\n  /**\n   * Manually call the rendering of the camera.\n   * @param cubeFace - Cube rendering surface collection\n   */\n  render(cubeFace?: TextureCubeFace): void {\n    // compute cull frustm.\n    const context = RenderContext._getRenderContext(this);\n    if (this.enableFrustumCulling && (this._frustumViewChangeFlag.flag || this._isFrustumProjectDirty)) {\n      this._frustum.calculateFromMatrix(context._viewProjectMatrix);\n      this._frustumViewChangeFlag.flag = false;\n      this._isFrustumProjectDirty = false;\n    }\n\n    this._updateShaderData(context);\n\n    // union scene and camera macro.\n    ShaderMacroCollection.unionCollection(\n      this.scene.shaderData._macroCollection,\n      this.shaderData._macroCollection,\n      this._globalShaderMacro\n    );\n\n    this._renderPipeline.render(context, cubeFace);\n    this._engine._renderCount++;\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  _onActive() {\n    this.entity.scene.attachRenderCamera(this);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  _onInActive() {\n    this.entity.scene.detachRenderCamera(this);\n  }\n\n  /**\n   * @override\n   * @inheritdoc\n   */\n  _onDestroy() {\n    this._renderPipeline?.destroy();\n    this._isInvViewProjDirty.destroy();\n    this._isViewMatrixDirty.destroy();\n    this.shaderData._addRefCount(-1);\n  }\n\n  private _projMatChange() {\n    this._isFrustumProjectDirty = true;\n    this._isProjectionDirty = true;\n    this._isInvProjMatDirty = true;\n    this._isInvViewProjDirty.flag = true;\n  }\n\n  private _innerViewportToWorldPoint(point: Vector3, invViewProjMat: Matrix, out: Vector3): Vector3 {\n    // Depth is a normalized value, 0 is nearPlane, 1 is farClipPlane.\n    const depth = point.z * 2 - 1;\n    // Transform to clipping space matrix\n    const clipPoint = MathTemp.tempVec4;\n    clipPoint.setValue(point.x * 2 - 1, 1 - point.y * 2, depth, 1);\n    Vector4.transform(clipPoint, invViewProjMat, clipPoint);\n    const invW = 1.0 / clipPoint.w;\n    out.x = clipPoint.x * invW;\n    out.y = clipPoint.y * invW;\n    out.z = clipPoint.z * invW;\n    return out;\n  }\n\n  private _updateShaderData(context: RenderContext) {\n    const shaderData = this.shaderData;\n    shaderData.setMatrix(Camera._viewMatrixProperty, this.viewMatrix);\n    shaderData.setMatrix(Camera._projectionMatrixProperty, this.projectionMatrix);\n    shaderData.setMatrix(Camera._vpMatrixProperty, context._viewProjectMatrix);\n    shaderData.setMatrix(Camera._inverseViewMatrixProperty, this.inverseViewMatrix);\n    shaderData.setMatrix(Camera._inverseProjectionMatrixProperty, this.inverseProjectionMatrix);\n    shaderData.setVector3(Camera._cameraPositionProperty, this._transform.worldPosition);\n  }\n\n  /**\n   * @private\n   * The inverse matrix of view projection matrix.\n   */\n  get invViewProjMat(): Matrix {\n    if (this._isInvViewProjDirty.flag) {\n      this._isInvViewProjDirty.flag = false;\n      Matrix.multiply(this.inverseViewMatrix, this.inverseProjectionMatrix, this._invViewProjMat);\n    }\n    return this._invViewProjMat;\n  }\n\n  /**\n   * @private\n   * The inverse of the projection matrix.\n   */\n  get inverseProjectionMatrix(): Readonly<Matrix> {\n    if (this._isInvProjMatDirty) {\n      this._isInvProjMatDirty = false;\n      Matrix.invert(this.projectionMatrix, this._inverseProjectionMatrix);\n    }\n    return this._inverseProjectionMatrix;\n  }\n\n  //-------------------------------------------------deprecated---------------------------------------------------\n\n  /**\n   * @deprecated\n   * View matrix inverse matrix.\n   */\n  get inverseViewMatrix(): Readonly<Matrix> {\n    this._transform.worldMatrix.cloneTo(this._inverseViewMatrix);\n    return this._inverseViewMatrix;\n  }\n\n  /**\n   * @deprecated\n   * @todo Involving the rendering pipeline to modify the rhi.clearRenderTarget method.\n   * @param clearMode\n   * @param backgroundColor\n   */\n  setClearMode(\n    clearMode: ClearMode = ClearMode.SOLID_COLOR,\n    backgroundColor: Vector4 = new Vector4(0.25, 0.25, 0.25, 1)\n  ): void {\n    this._clearMode = clearMode;\n    this._backgroundColor = backgroundColor;\n    this._renderPipeline.defaultRenderPass.clearParam = backgroundColor;\n    this._renderPipeline.defaultRenderPass.clearMode = clearMode;\n  }\n}\n","import { AssetPromise } from \"./AssetPromise\";\n\nconst mimeType = {\n  json: \"json\",\n  gltf: \"json\",\n  mtl: \"json\",\n  prefab: \"json\",\n  txt: \"text\",\n  bin: \"arraybuffer\",\n  png: \"image\",\n  webp: \"image\",\n  jpg: \"image\"\n};\n\nconst defaultRetryCount = 4;\nconst defaultTimeout = 15000;\nconst defaultInterval = 500;\n\nexport type RequestConfig = {\n  type?: XMLHttpRequestResponseType | \"image\";\n  retryCount?: number;\n  retryInterval?: number;\n  timeout?: number;\n} & RequestInit;\n\n/**\n * Web request.\n * @param url - The link\n * @param config - Load configuration\n */\nexport function request<T>(url: string, config: RequestConfig = {}): AssetPromise<T> {\n  return new AssetPromise((resolve, reject, setProgress) => {\n    const retryCount = config.retryCount ?? defaultRetryCount;\n    const retryInterval = config.retryInterval ?? defaultInterval;\n    config.timeout = config.timeout ?? defaultTimeout;\n    config.type = config.type ?? getMimeTypeFromUrl(url);\n    const realRequest = config.type === \"image\" ? requestImage : requestRes;\n    let lastError: Error;\n    const executor = new MultiExecutor(\n      () => {\n        return realRequest<T>(url, config)\n          .onProgress(setProgress)\n          .then((res) => {\n            resolve(res);\n            executor.stop();\n          })\n          .catch((err) => (lastError = err));\n      },\n      retryCount,\n      retryInterval\n    );\n    executor.start(() => {\n      reject(lastError);\n    });\n  });\n}\n\nfunction requestImage<T>(url: string, config: RequestConfig): AssetPromise<T> {\n  return new AssetPromise((resolve, reject) => {\n    const { timeout } = config;\n    const img = new Image();\n    const onerror = () => {\n      reject(new Error(`request ${url} fail`));\n    };\n    img.onerror = onerror;\n\n    img.onabort = onerror;\n\n    const timeoutId = setTimeout(() => {\n      reject(new Error(`request ${url} timeout`));\n    }, timeout);\n\n    img.onload = ((timeoutId) => {\n      return () => {\n        // Call requestAnimationFrame to avoid iOS's bug.\n        requestAnimationFrame(() => {\n          //@ts-ignore\n          resolve(img);\n        });\n        clearTimeout(timeoutId);\n      };\n    })(timeoutId);\n\n    img.crossOrigin = \"anonymous\";\n\n    img.src = url;\n  });\n}\n\nfunction requestRes<T>(url: string, config: RequestConfig): AssetPromise<T> {\n  return new AssetPromise((resolve, reject, setProgress) => {\n    const xhr = new XMLHttpRequest();\n    xhr.timeout = config.timeout;\n    config.method = config.method ?? \"get\";\n    xhr.onload = () => {\n      if (xhr.status < 200 || xhr.status >= 300) {\n        reject(new Error(`request failed from: ${url}`));\n        return;\n      }\n      const result = xhr.response ?? xhr.responseText;\n      resolve(result);\n    };\n    xhr.onerror = () => {\n      reject(new Error(`request failed from: ${url}`));\n    };\n    xhr.ontimeout = () => {\n      reject(new Error(`request timeout from: ${url}`));\n    };\n    xhr.onprogress = (e) => {\n      setProgress(e.loaded / e.total);\n    };\n    xhr.open(config.method, url, true);\n    xhr.withCredentials = config.credentials === \"include\";\n    //@ts-ignore\n    xhr.responseType = config.type;\n    const headers = config.headers;\n    if (headers) {\n      Object.keys(headers).forEach((name) => {\n        xhr.setRequestHeader(name, headers[name]);\n      });\n    }\n    xhr.send(config.body);\n  });\n}\n\nfunction getMimeTypeFromUrl(url: string) {\n  const extname = url.substring(url.lastIndexOf(\".\") + 1);\n  return mimeType[extname];\n}\n\nexport class MultiExecutor {\n  private _timeoutId: number = -100;\n  private _currentCount = 0;\n  constructor(\n    private execFunc: (count?: number) => Promise<any>,\n    private totalCount: number,\n    private interval: number\n  ) {\n    this.exec = this.exec.bind(this);\n  }\n\n  private done: Function;\n  start(done?: Function): void {\n    this.done = done;\n    this.exec();\n  }\n\n  stop(): void {\n    clearTimeout(this._timeoutId);\n  }\n\n  private exec(): void {\n    if (this._currentCount >= this.totalCount) {\n      this.done && this.done();\n      return;\n    }\n    this._currentCount++;\n    this.execFunc(this._currentCount).then(() => {\n      //@ts-ignore\n      this._timeoutId = setTimeout(this.exec, this.interval);\n    });\n  }\n}\n","import { LoadItem } from \"./LoadItem\";\nimport { AssetPromise } from \"./AssetPromise\";\nimport { RequestConfig, request } from \"./request\";\nimport { ResourceManager } from \"./ResourceManager\";\n/**\n * Loader abstract class.\n */\nexport abstract class Loader<T> {\n  request: <U>(url: string, config: RequestConfig) => AssetPromise<U> = request;\n  abstract load(item: LoadItem, resouceManager: ResourceManager): AssetPromise<T>;\n  constructor(public readonly useCache: boolean) {}\n}\n","/**\n * Asset Type.\n */\nexport enum AssetType {\n  /**\n   * Plain text.\n   * @remarks Will not be cached based on url in ResourceManager.\n   */\n  Text = 0,\n  /**\n   * JSON.\n   * @remarks Will not be cached based on url in ResourceManager.\n   */\n  JSON = 1,\n  /**\n   * ArrayBuffer.\n   * @remarks Will not be cached based on url in ResourceManager.\n   */\n  Buffer = 2,\n  /** 2D Texture. */\n  Texture2D = 3,\n  /** Cube Texture. */\n  TextureCube = 4,\n  /** Material. */\n  Material = 5,\n  /** Mesh. */\n  Mesh = 6,\n  /** Animation Clip. */\n  AnimationClip = 7,\n  /** Prefab.*/\n  Perfab = 8,\n  /** Compress Texture. */\n  KTX = 9,\n  /** Cube Compress Texture. */\n  KTXCube = 10\n  /** @todo Scene. */\n  // Scene = 9\n}\n","import { SceneFeature } from \"../SceneFeature\";\nimport { Collider } from \"./Collider\";\n\nexport class ColliderFeature extends SceneFeature {\n  colliders: Collider[];\n  constructor() {\n    super();\n\n    this.colliders = [];\n  }\n\n  /**\n   * Add a collider component.\n   * @param collider - The collider component to add\n   */\n  attachCollider(collider: Collider) {\n    this.colliders.push(collider);\n  }\n\n  /**\n   * Remove a collider component.\n   * @param collider - The collider component to remove\n   */\n  detachCollider(collider: Collider) {\n    const index = this.colliders.indexOf(collider);\n    if (index != -1) {\n      this.colliders.splice(index, 1);\n    }\n  }\n}\n","import { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { ColliderFeature } from \"./ColliderFeature\";\n\n/**\n * Define collider data.\n */\nexport class Collider extends Component {\n  /**\n   * @param {Entity} entity\n   */\n  constructor(entity: Entity) {\n    super(entity);\n  }\n\n  _onEnable(): void {\n    this.scene.findFeature(ColliderFeature).attachCollider(this);\n  }\n\n  _onDisable(): void {\n    this.scene.findFeature(ColliderFeature).detachCollider(this);\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\nimport { Collider } from \"./Collider\";\n\n/**\n * Axis Aligned Bound Box (AABB).\n * @extends Collider\n */\nexport class ABoxCollider extends Collider {\n  private static _tempVec3: Vector3 = new Vector3();\n\n  public boxMin: Vector3;\n  public boxMax: Vector3;\n  private _corners: Array<Vector3> = [];\n  private _cornerFlag: boolean = false;\n\n  /**\n   * Constructor of ABoxCollider.\n   * @param entity - Entity which the box belongs to\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    this.boxMin = new Vector3(-0.5, -0.5, -0.5);\n    this.boxMax = new Vector3(0.5, 0.5, 0.5);\n  }\n\n  /**\n   * Set box from the minimum point of the box and the maximum point of the box.\n   * @param min - The minimum point of the box\n   * @param max - The maximum point of the box\n   */\n  setBoxMinMax(min: Vector3, max: Vector3) {\n    this.boxMin = min;\n    this.boxMax = max;\n\n    this._cornerFlag = true;\n  }\n\n  /**\n   * Set box from the center point and the size of the bounding box.\n   * @param center - The center point\n   * @param size - The size of the bounding box\n   */\n  setBoxCenterSize(center: Vector3, size: Vector3) {\n    const halfSize = ABoxCollider._tempVec3;\n    Vector3.scale(size, 0.5, halfSize);\n    Vector3.add(center, halfSize, this.boxMax);\n    Vector3.subtract(center, halfSize, this.boxMin);\n\n    this._cornerFlag = true;\n  }\n\n  /**\n   * Get the eight corners of this bounding box.\n   */\n  getCorners(): Vector3[] {\n    if (this._cornerFlag) {\n      const minX = this.boxMin.x;\n      const minY = this.boxMin.y;\n      const minZ = this.boxMin.z;\n      const w = this.boxMax.x - minX;\n      const h = this.boxMax.y - minY;\n      const d = this.boxMax.z - minZ;\n\n      if (this._corners.length === 0) {\n        for (let i = 0; i < 8; ++i) {\n          this._corners.push(new Vector3());\n        }\n      }\n\n      this._corners[0].setValue(minX + w, minY + h, minZ + d);\n      this._corners[1].setValue(minX, minY + h, minZ + d);\n      this._corners[2].setValue(minX, minY, minZ + d);\n      this._corners[3].setValue(minX + w, minY, minZ + d);\n      this._corners[4].setValue(minX + w, minY + h, minZ);\n      this._corners[5].setValue(minX, minY + h, minZ);\n      this._corners[6].setValue(minX, minY, minZ);\n      this._corners[7].setValue(minX + w, minY, minZ);\n\n      this._cornerFlag = false;\n    }\n\n    return this._corners;\n    // if (this._corners.length === 0) {\n    //   const minX = this.boxMin.x;\n    //   const minY = this.boxMin.y;\n    //   const minZ = this.boxMin.z;\n    //   const w = this.boxMax.x - minX;\n    //   const h = this.boxMax.y - minY;\n    //   const d = this.boxMax.z - minZ;\n\n    //   this._corners = [\n    //     new Vector3(minX + w, minY + h, minZ + d),\n    //     new Vector3(minX, minY + h, minZ + d),\n    //     new Vector3(minX, minY, minZ + d),\n    //     new Vector3(minX + w, minY, minZ + d),\n    //     new Vector3(minX + w, minY + h, minZ),\n    //     new Vector3(minX, minY + h, minZ),\n    //     new Vector3(minX, minY, minZ),\n    //     new Vector3(minX + w, minY, minZ)\n    //   ];\n    // }\n\n    // return this._corners;\n  }\n}\n","import { Collider } from \"./Collider\";\nimport { Vector3 } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\n/**\n * A bounding sphere.\n */\nexport class ASphereCollider extends Collider {\n  center: Vector3;\n\n  radius: number;\n  /**\n   * Constructor of ASphereCollider.\n   * @param  entity - Entity which the sphere belongs to\n   */\n  constructor(entity: Entity) {\n    super(entity);\n\n    /** The center point of the sphere. */\n    this.center = new Vector3();\n\n    /** The radius of the sphere. */\n    this.radius = 1;\n  }\n\n  /**\n   * Set the center and radius of the sphere.\n   * @param center - The center point of the sphere\n   * @param radius - The radius of the sphere\n   */\n  setSphere(center: Vector3, radius: number) {\n    this.center = center;\n    this.radius = radius;\n  }\n}\n","import { Collider } from \"./Collider\";\nimport { Vector3 } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\n\n/**\n * Represents a plane in three dimensional space.\n */\nexport class PlaneCollider extends Collider {\n  planePoint: Vector3;\n\n  normal: Vector3;\n\n  /**\n   * Constructor of PlaneCollider.\n   * @param entity - Entity which the plane belongs to\n   */\n  constructor(entity: Entity) {\n    super(entity);\n\n    /** The point through the plane. */\n    this.planePoint = new Vector3();\n\n    /** The normal direction of the plane. */\n    this.normal = new Vector3(0, 1, 0);\n  }\n\n  /**\n   * Set a plane from point and normal.\n   * @param  point - The point through the plane\n   * @param  normal - The normal direction of the plane\n   */\n  setPlane(point: Vector3, normal: Vector3) {\n    this.planePoint = point;\n    this.normal = normal;\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\n\n/**\n * The result of raycast test.\n */\nexport class RaycastHit {\n  public distance: number;\n  public collider: any;\n  public point: Vector3;\n  /**\n   * Constructor of RaycastHit.\n   */\n  constructor() {\n    /** The distance from the collider point to the origin of the ray. */\n    this.distance = Number.MAX_VALUE;\n\n    /** The collider that has been intersecting. */\n    this.collider = null;\n\n    /** The point where the ray intersects.  */\n    this.point = null;\n  }\n}\n","import { BoundingBox, BoundingSphere, Matrix, Plane, Ray, Vector3 } from \"@oasis-engine/math\";\nimport { ABoxCollider } from \"../collider/ABoxCollider\";\nimport { ASphereCollider } from \"../collider/ASphereCollider\";\nimport { ColliderFeature } from \"../collider/ColliderFeature\";\nimport { PlaneCollider } from \"../collider/PlaneCollider\";\nimport { Layer } from \"../Layer\";\nimport { Scene } from \"../Scene\";\nimport { RaycastHit } from \"./RaycastHit\";\n\n// TODO\n/** @internal */\nconst _tempVec3 = new Vector3();\n/** @internal */\nconst _tempPlane = new Plane();\n/** @internal */\nconst _tepmBox = new BoundingBox();\n/** @internal */\nconst _tempShpere = new BoundingSphere();\n\n/**\n * Perform ray detection on all Colliders in the scene and return to the one closest to the beginning of the ray.\n * @param _ray - The ray to perform\n * @param _outPos - The point where the ray intersects\n * @return The collider that has been intersecting\n */\n(Scene.prototype as any).raycast = function (_ray, _outPos: Vector3, tag: Layer = Layer.Everything) {\n  const ray = new Ray(_ray.origin, _ray.direction);\n  const cf = this.findFeature(ColliderFeature);\n  const colliders = cf.colliders;\n\n  let nearestHit = new RaycastHit();\n\n  for (let i = 0, len = colliders.length; i < len; i++) {\n    const collider = colliders[i];\n    if (!collider.entity.isActiveInHierarchy) {\n      continue;\n    }\n\n    if (!(collider.entity.tag & tag)) {\n      continue;\n    }\n    const hit = new RaycastHit();\n    if (collider.raycast(ray, hit)) {\n      if (hit.distance < nearestHit.distance) {\n        nearestHit = hit;\n      }\n    }\n  } // end of for\n\n  if (_outPos && nearestHit.collider) {\n    nearestHit.point.cloneTo(_outPos);\n  }\n\n  return nearestHit.collider;\n};\n\n/**\n * Perform ray cast.\n * @param ray - The ray\n * @param hit - The raycasthit\n */\n(ABoxCollider.prototype as any).raycast = function (ray, hit) {\n  const localRay = _getLocalRay(this, ray);\n  // TODO\n  this.boxMin.cloneTo(_tepmBox.min);\n  this.boxMax.cloneTo(_tepmBox.max);\n  const intersect = localRay.intersectBox(_tepmBox);\n  if (intersect !== -1) {\n    _updateHitResult(this, localRay, intersect, hit, ray.origin);\n    return true;\n  } else {\n    return false;\n  } // end of else\n};\n\n(ASphereCollider.prototype as any).raycast = function (ray, hit) {\n  const localRay = _getLocalRay(this, ray);\n  // TODO\n  this.center.cloneTo(_tempShpere.center);\n  _tempShpere.radius = this.radio;\n  const intersect = localRay.intersectSphere(_tempShpere);\n  if (intersect !== -1) {\n    _updateHitResult(this, localRay, intersect, hit, ray.origin);\n    return true;\n  } else {\n    return false;\n  } // end of else\n};\n\n(PlaneCollider.prototype as any).raycast = function (ray, hit) {\n  const localRay = _getLocalRay(this, ray);\n  // TODO\n  this.normal.cloneTo(_tempPlane.normal);\n  _tempPlane.distance = -Vector3.dot(this.planePoint, _tempPlane.normal);\n  const intersect = localRay.intersectPlane(_tempPlane);\n  if (intersect !== -1) {\n    _updateHitResult(this, localRay, intersect, hit, ray.origin);\n    return true;\n  } else {\n    return false;\n  } // end of else\n};\n\n/**\n * Calculate the raycasthit in world space.\n * @param ray - The ray\n * @param distance - The distance\n * @param outHit - The raycasthit\n */\nfunction _updateHitResult(collider, ray: Ray, distance: number, outHit: RaycastHit, origin: Vector3) {\n  const hitPos = _tempVec3;\n  ray.getPoint(distance, hitPos);\n  Vector3.transformCoordinate(hitPos, collider.entity.transform.worldMatrix, hitPos);\n\n  outHit.distance = Vector3.distance(origin, hitPos);\n  outHit.collider = collider;\n  outHit.point = hitPos;\n}\n\n/**\n * transform ray to local space\n * @param {Ray} ray\n * @private\n */\n\nfunction _getLocalRay(collider, ray) {\n  const worldToLocal = collider.entity.getInvModelMatrix();\n\n  // o = worldToLocal * vec4(ray.origin, 1)\n  const o = new Vector3();\n  Vector3.transformCoordinate(ray.origin, worldToLocal, o);\n\n  // d = worldToLocal * vec4(ray.direction, 0)\n  const d = new Vector3();\n  _transformDirection(d, ray.direction, worldToLocal);\n\n  return new Ray(o, d);\n}\n\n// a: vec3\n// m: mat4\n// return m * vec3(a, 0)\nfunction _transformDirection(out: Vector3, a: Vector3, m: Matrix) {\n  const x = a.x;\n  const y = a.y;\n  const z = a.z;\n  const e = m.elements;\n  out.x = x * e[0] + y * e[4] + z * e[8];\n  out.y = x * e[1] + y * e[5] + z * e[9];\n  out.z = x * e[2] + y * e[6] + z * e[10];\n  return out;\n}\n","import { BoundingBox, Vector3 } from \"@oasis-engine/math\";\nimport { Engine, EngineObject } from \"..\";\nimport { Primitive } from \"../graphic/Primitive\";\nimport { SubPrimitive } from \"../graphic/SubPrimitive\";\n\n/**\n * Mesh Asset Object\n */\nexport class Mesh extends EngineObject {\n  name: string;\n  primitives: Primitive[] = [];\n  groups: SubPrimitive[] = [];\n  weights: number[];\n  readonly bounds: BoundingBox = new BoundingBox(new Vector3(), new Vector3());\n\n  /**\n   * Contructor of mesh\n   * @param name - Name\n   */\n  constructor(engine: Engine, name?: string) {\n    super(engine);\n    this.name = name;\n  }\n\n  updatePrimitiveWeightsIndices(weightsIndices: number[]) {\n    // this.primitives.forEach((primitive) => {\n    //   primitive.updateWeightsIndices(weightsIndices);\n    // });\n  }\n\n  destroy() {\n    this.primitives = null;\n  }\n}\n","import { Matrix } from \"@oasis-engine/math\";\nimport { EngineObject } from \"../base/EngineObject\";\n\nlet skinID = 0;\n\n/**\n * Mesh skin data, equal glTF skins define\n */\nexport class Skin extends EngineObject {\n  public inverseBindMatrices: Matrix[];\n  public joints: string[];\n  public skeleton: string;\n  /**\n   * Contructor of skin\n   * @param name - name\n   */\n  constructor(name: string) {\n    super(null);\n\n    this.inverseBindMatrices = []; // inverse bind matrix array, element type: gl-matrix.mat4\n    this.joints = []; // joints name array, element type: string\n    this.skeleton = \"none\"; // root bone name\n  }\n}\n","import { BoundingBox } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { ignoreClone, shallowClone } from \"../clone/CloneManager\";\nimport { Entity } from \"../Entity\";\nimport { Material } from \"../material/Material\";\nimport { Renderer } from \"../Renderer\";\nimport { RenderElement } from \"../RenderPipeline/RenderElement\";\nimport { Mesh } from \"./Mesh\";\n\nfunction addPrimitivesRefCount(mesh: Mesh, refCount: number): void {\n  const primitives = mesh.primitives;\n  for (let i = 0, l = primitives.length; i < l; i++) {\n    primitives[i]._addRefCount(refCount);\n  }\n}\n\n/**\n * MeshRenderer Component\n */\nexport class MeshRenderer extends Renderer {\n  private _mesh: Mesh;\n  @ignoreClone\n  private _instanceMaterials: Material[] = [];\n  @shallowClone\n  private _sharedMaterials: Material[] = [];\n\n  constructor(entity: Entity) {\n    super(entity);\n\n    this._mesh = null; // Mesh Asset Object\n  }\n\n  /**\n   * Current mesh object.\n   */\n  get mesh() {\n    return this._mesh;\n  }\n\n  /**\n   * Specify mesh which will be used to render.\n   * @param mesh - Mesh Object\n   */\n  set mesh(mesh: Mesh) {\n    if (this._mesh) {\n      addPrimitivesRefCount(this._mesh, -1);\n    }\n    addPrimitivesRefCount(mesh, 1);\n    this._mesh = mesh;\n    this._sharedMaterials = [];\n    this._instanceMaterials = [];\n  }\n\n  /**\n   * Specify a material that will be used by a primitive and the material could be shared.\n   * @param primitiveIndex - Primitive's index\n   * @param material - Material.\n   */\n  setSharedMaterial(primitiveIndex: number, material: Material) {\n    if (this._sharedMaterials[primitiveIndex]) {\n      this._sharedMaterials[primitiveIndex]._addRefCount(-1);\n    }\n    material._addRefCount(1);\n    this._sharedMaterials[primitiveIndex] = material;\n  }\n\n  /**\n   * Specify a material that will be used by a primitive.\n   * @param primitiveIndex - Primitive's index\n   * @param material - Material\n   */\n  setMaterial(primitiveIndex: number, material: Material) {\n    if (this._instanceMaterials[primitiveIndex]) {\n      this._instanceMaterials[primitiveIndex]._addRefCount(-1);\n    }\n    material._addRefCount(1);\n    this._instanceMaterials[primitiveIndex] = material;\n  }\n\n  /**\n   * Get the material object exclusive to this component\n   * @param primitiveIndex - Primitive's index\n   * @return Material\n   */\n  getInstanceMaterial(primitiveIndex: number): Material {\n    return this._instanceMaterials[primitiveIndex];\n  }\n\n  /**\n   * Get the shared primitive material object\n   * @param primitiveIndex Primitive's index\n   * @return Material\n   */\n  getSharedMaterial(primitiveIndex: number): Material {\n    return this._sharedMaterials[primitiveIndex];\n  }\n\n  /**\n   * Execute render\n   * @param camera\n   */\n  render(camera: Camera) {\n    const mesh = this._mesh;\n    if (!mesh) {\n      return;\n    }\n\n    const renderPipeline = camera._renderPipeline;\n    const { primitives, groups } = mesh;\n\n    //-- render every primitive\n    for (let i = 0, len = primitives.length; i < len; i++) {\n      const primitive = primitives[i];\n      const material = this._instanceMaterials[i] || this._sharedMaterials[i];\n      if (material) {\n        const element = RenderElement.getFromPool();\n        element.setValue(this, primitive, groups[i], material);\n        renderPipeline.pushPrimitive(element);\n      } else {\n        Logger.error(\"Primitive has no material: \" + primitive.name);\n      }\n    } // end of for\n  }\n\n  /**\n   * Destroy the component.\n   */\n  destroy() {\n    super.destroy();\n\n    //-- release mesh\n    this._mesh = null;\n\n    //-- materials\n    this._instanceMaterials = [];\n    this._sharedMaterials = [];\n\n    // delete reference count\n    for (let i = 0; i < this._instanceMaterials.length; i++) {\n      this._instanceMaterials[i]._addRefCount(-1);\n    }\n\n    // delete reference count\n    for (let i = 0; i < this._sharedMaterials.length; i++) {\n      this._sharedMaterials[i]._addRefCount(-1);\n    }\n\n    if (this._mesh) {\n      addPrimitivesRefCount(this._mesh, -1);\n    }\n  }\n\n  /**\n   * @override\n   */\n  protected _updateBounds(worldBounds: BoundingBox): void {\n    const localBounds = this.mesh.bounds;\n    const worldMatrix = this._entity.transform.worldMatrix;\n\n    BoundingBox.transform(localBounds, worldMatrix, worldBounds);\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { TextureFilterMode } from \"./enums/TextureFilterMode\";\nimport { TextureFormat } from \"./enums/TextureFormat\";\nimport { TextureWrapMode } from \"./enums/TextureWrapMode\";\nimport { Texture } from \"./Texture\";\n\n/**\n * Two-dimensional texture.\n */\nexport class Texture2D extends Texture {\n  private _format: TextureFormat;\n  /** Backward compatible with WebGL1.0. */\n  private _compressedMipFilled: number = 0;\n\n  /**\n   * Texture format.\n   * @readonly\n   */\n  get format(): TextureFormat {\n    return this._format;\n  }\n\n  /**\n   * Create Texture2D.\n   * @param engine - Define the engine to use to render this texture\n   * @param width - Texture width\n   * @param height - Texture height\n   * @param format - Texture format. default  `TextureFormat.R8G8B8A8`\n   * @param mipmap - Whether to use multi-level texture\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    format: TextureFormat = TextureFormat.R8G8B8A8,\n    mipmap: boolean = true\n  ) {\n    super(engine);\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    const formatDetail = Texture._getFormatDetail(format, gl, isWebGL2);\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = formatDetail;\n    this._rhi = rhi;\n    this._target = gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    (formatDetail.isCompressed && !isWebGL2) || this._initMipmap(false);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Repeat;\n  }\n\n  /**\n   * Setting pixels data through color buffer data, designated area and texture mipmapping level,it's also applicable to compressed formats.\n   * @remarks If it is the WebGL1.0 platform and the texture format is compressed, the first upload must be filled with textures.\n   * @param colorBuffer - Color buffer data\n   * @param mipLevel - Texture mipmapping level\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Data width. if it's empty, width is the width corresponding to mipLevel minus x , width corresponding to mipLevel is Math.max(1, this.width >> mipLevel)\n   * @param height - Data height. if it's empty, height is the height corresponding to mipLevel minus y , height corresponding to mipLevel is Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipWidth = Math.max(1, this._width >> mipLevel);\n    const mipHeight = Math.max(1, this._height >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipWidth - x;\n    height = height || mipHeight - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedMipFilled & mipBit) {\n        gl.compressedTexSubImage2D(this._target, mipLevel, x, y, width, height, internalFormat, colorBuffer);\n      } else {\n        gl.compressedTexImage2D(this._target, mipLevel, internalFormat, width, height, 0, colorBuffer);\n        this._compressedMipFilled |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(this._target, mipLevel, x, y, width, height, baseFormat, dataType, colorBuffer);\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * Setting pixels data through TexImageSource, designated area and texture mipmapping level.\n   * @param imageSource - The source of texture\n   * @param mipLevel - Texture mipmapping level\n   * @param flipY - Whether to flip the Y axis\n   * @param premultiplyAlpha - Whether to premultiply the transparent channel\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   */\n  setImageSource(\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(this._target, mipLevel, x || 0, y || 0, baseFormat, dataType, imageSource);\n    this._unbind();\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified area.\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   */\n  getPixelBuffer(x: number, y: number, width: number, height: number, out: ArrayBufferView): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(null, x, y, width, height, out);\n  }\n}\n","import { Matrix } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { ignoreClone } from \"../clone/CloneManager\";\nimport { Entity } from \"../Entity\";\nimport { RenderContext } from \"../RenderPipeline/RenderContext\";\nimport { Shader } from \"../shader\";\nimport { ShaderProperty } from \"../shader/ShaderProperty\";\nimport { TextureFilterMode } from \"../texture/enums/TextureFilterMode\";\nimport { TextureFormat } from \"../texture/enums/TextureFormat\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { MeshRenderer } from \"./MeshRenderer\";\nimport { Skin } from \"./Skin\";\n\n/**\n * SkinnedMeshRenderer\n */\nexport class SkinnedMeshRenderer extends MeshRenderer {\n  private static _jointCountProperty: ShaderProperty = Shader.getPropertyByName(\"u_jointCount\");\n  private static _jointSamplerProperty: ShaderProperty = Shader.getPropertyByName(\"u_jointSampler\");\n  private static _jointMatrixProperty: ShaderProperty = Shader.getPropertyByName(\"u_jointMatrix\");\n\n  private static _maxJoints: number = 0;\n\n  @ignoreClone\n  public matrixPalette: Float32Array;\n  @ignoreClone\n  public jointNodes: Entity[];\n  @ignoreClone\n  public jointTexture: Texture2D;\n\n  @ignoreClone\n  private _hasInitJoints: boolean = false;\n  @ignoreClone\n  private _mat: Matrix;\n  @ignoreClone\n  private _weights: number[];\n  @ignoreClone\n  private weightsIndices: number[] = [];\n  @ignoreClone\n  /** Whether to use joint texture. Automatically used when the device can't support the maxium number of bones. */\n  private _useJointTexture: boolean = false;\n\n  private _skin: Skin;\n\n  /**\n   * Constructor of SkinnedMeshRenderer\n   * @param entity - Entity\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    this._mat = new Matrix();\n    this._weights = null;\n    this._skin = null;\n  }\n\n  /**\n   * @internal\n   */\n  _updateShaderData(context: RenderContext) {\n    super._updateShaderData(context);\n\n    if (!this._useJointTexture && this.matrixPalette) {\n      this.shaderData.setFloatArray(SkinnedMeshRenderer._jointMatrixProperty, this.matrixPalette);\n    }\n  }\n\n  /**\n   * Set morph target weights\n   * @param weights - Weights\n   */\n  setWeights(weights: number[]) {\n    this._weights = weights;\n    if (!weights) {\n      return;\n    }\n    const len = weights.length;\n    for (let i = 0; i < len; i++) {\n      this.weightsIndices[i] = i;\n    }\n\n    const weightsIndices = this.weightsIndices;\n\n    for (let i = 0; i < len - 1; i++) {\n      for (let j = i + 1; j < len; j++) {\n        if (weights[j] > weights[i]) {\n          let t = weights[i];\n          weights[i] = weights[j];\n          weights[j] = t;\n          t = weightsIndices[i];\n          weightsIndices[i] = weightsIndices[j];\n          weightsIndices[j] = t;\n        }\n      }\n    }\n    this.mesh.updatePrimitiveWeightsIndices(weightsIndices);\n  }\n\n  /**\n   * Skin Object.\n   */\n  get skin() {\n    return this._skin;\n  }\n\n  set skin(skin) {\n    this._skin = skin;\n  }\n\n  get weights() {\n    return this._weights;\n  }\n\n  _initJoints() {\n    if (!this._skin) return;\n    const skin = this._skin;\n\n    const joints = skin.joints;\n    const jointNodes = [];\n    for (let i = joints.length - 1; i >= 0; i--) {\n      jointNodes[i] = this.findByNodeName(this.entity, joints[i]);\n    } // end of for\n    this.matrixPalette = new Float32Array(jointNodes.length * 16);\n    this.jointNodes = jointNodes;\n\n    /** Whether to use a skeleton texture */\n    const rhi = this.entity.engine._hardwareRenderer;\n    if (!rhi) return;\n    const maxAttribUniformVec4 = rhi.renderStates.getParameter(rhi.gl.MAX_VERTEX_UNIFORM_VECTORS);\n    const maxJoints = Math.floor((maxAttribUniformVec4 - 20) / 4);\n    const shaderData = this.shaderData;\n    const jointCount = this.jointNodes?.length;\n    if (jointCount) {\n      shaderData.enableMacro(\"O3_HAS_SKIN\");\n      shaderData.setInt(SkinnedMeshRenderer._jointCountProperty, jointCount);\n      if (joints.length > maxJoints) {\n        if (rhi.canIUseMoreJoints) {\n          this._useJointTexture = true;\n          shaderData.enableMacro(\"O3_USE_JOINT_TEXTURE\");\n          shaderData.setTexture(SkinnedMeshRenderer._jointSamplerProperty, this.jointTexture);\n        } else {\n          Logger.error(\n            `component's joints count(${joints}) greater than device's MAX_VERTEX_UNIFORM_VECTORS number ${maxAttribUniformVec4}, and don't support jointTexture in this device. suggest joint count less than ${maxJoints}.`,\n            this\n          );\n        }\n      } else {\n        const maxJoints = Math.max(SkinnedMeshRenderer._maxJoints, joints.length);\n        SkinnedMeshRenderer._maxJoints = maxJoints;\n        shaderData.disableMacro(\"O3_USE_JOINT_TEXTURE\");\n        shaderData.enableMacro(\"O3_JOINTS_NUM\", maxJoints.toString());\n      }\n    } else {\n      shaderData.disableMacro(\"O3_HAS_SKIN\");\n    }\n  }\n\n  private findByNodeName(entity: Entity, nodeName: string) {\n    if (!entity) return null;\n\n    const n = entity.findByName(nodeName);\n\n    if (n) return n;\n\n    return this.findByNodeName(entity.parent, nodeName);\n  }\n\n  private _findParent(entity: Entity, nodeName: string) {\n    if (entity) {\n      const parent = entity.parent;\n      if (!parent) return null;\n      if (parent.name === nodeName) return parent;\n\n      const brother = parent.findByName(nodeName);\n      if (brother) return brother;\n\n      return this._findParent(parent, nodeName);\n    }\n    return null;\n  }\n\n  /**\n   * @internal\n   */\n  update() {\n    if (!this._hasInitJoints) {\n      this._initJoints();\n      this._hasInitJoints = true;\n    }\n    if (this._skin) {\n      const joints = this.jointNodes;\n      const ibms = this._skin.inverseBindMatrices;\n      const matrixPalette = this.matrixPalette;\n      const worldToLocal = this.entity.getInvModelMatrix();\n\n      const mat = this._mat;\n      for (let i = joints.length - 1; i >= 0; i--) {\n        mat.identity();\n        if (joints[i]) {\n          Matrix.multiply(joints[i].transform.worldMatrix, ibms[i], mat);\n        } else {\n          ibms[i].cloneTo(mat);\n        }\n        Matrix.multiply(worldToLocal, mat, mat);\n        matrixPalette.set(mat.elements, i * 16);\n      } // end of for\n      if (this._useJointTexture) {\n        this.createJointTexture();\n      }\n    }\n  }\n\n  /**\n   * Generate joint texture.\n   * Format: (4 * RGBA) * jointCont\n   */\n  createJointTexture() {\n    if (!this.jointTexture) {\n      const engine = this.engine;\n      const rhi = engine._hardwareRenderer;\n      if (!rhi) return;\n      this.jointTexture = new Texture2D(engine, 4, this.jointNodes.length, TextureFormat.R32G32B32A32, false);\n      this.jointTexture.filterMode = TextureFilterMode.Point;\n    }\n    this.jointTexture.setPixelBuffer(this.matrixPalette);\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { Renderer } from \"../Renderer\";\n\n/**\n * LOD rendering group\n */\nexport class LODGroup extends Renderer {\n  private _lods = [];\n\n  /**\n   * Add a LOD level.\n   * @param distance - Distance between current entity and the camera.\n   * @param renderer - Renderer, when LOD level enabled, use this renderer to render.\n   */\n  addLod(distance: number, renderer: Renderer) {\n    // Disable component render function.\n    renderer.enabled = false;\n\n    this._lods.push({\n      distance,\n      rendererAbility: renderer\n    });\n\n    this._lods.sort((a, b) => b.distance - a.distance);\n  }\n\n  /**\n   * @private\n   */\n  render(camera: Camera) {\n    if (this._lods.length <= 0) return;\n\n    const dist = Vector3.distance(camera.entity.transform.worldPosition, this.entity.transform.worldPosition);\n\n    const lods = this._lods;\n    let activeLevel = 0;\n    for (let i = lods.length - 1; i >= 0; i--) {\n      const lod = lods[i];\n      if (dist < lod.distance) {\n        activeLevel = i;\n        break;\n      }\n    } // end of for\n\n    const lod = lods[activeLevel];\n    lod.rendererAbility.render(camera);\n  }\n}\n","/**\n * Transparent mode.\n */\nexport enum AlphaMode {\n  /** Opaque mode. */\n  Opaque,\n  /** Color blending mode. */\n  Blend,\n  /** Transparency cutoff mode. */\n  CutOff\n}\n","import { Color } from \"@oasis-engine/math\";\nimport { Engine } from \"../Engine\";\nimport { BlendFactor } from \"../shader/enums/BlendFactor\";\nimport { BlendOperation } from \"../shader/enums/BlendOperation\";\nimport { CullMode } from \"../shader/enums/CullMode\";\nimport { Shader } from \"../shader/Shader\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { AlphaMode } from \"./enums/AlphaMode\";\nimport { RenderQueueType } from \"./enums/RenderQueueType\";\nimport { Material } from \"./Material\";\n\n/**\n * Blinn-phong Material.\n */\nexport class BlinnPhongMaterial extends Material {\n  /**\n   * Ambient color.\n   */\n  get ambientColor(): Color {\n    return this._ambientColor;\n  }\n\n  set ambientColor(value: Color) {\n    this._ambientColor = value;\n    this.shaderData.setColor(\"u_ambientColor\", value);\n  }\n\n  /**\n   * Ambient texture.\n   */\n  get ambientTexture(): Texture2D {\n    return this._ambientTexture;\n  }\n\n  set ambientTexture(value: Texture2D) {\n    this._ambientTexture = value;\n\n    if (value) {\n      this.shaderData.enableMacro(\"O3_AMBIENT_TEXTURE\");\n      this.shaderData.setTexture(\"u_ambientTexture\", value);\n    } else {\n      this.shaderData.disableMacro(\"O3_AMBIENT_TEXTURE\");\n    }\n  }\n\n  /**\n   * Emissive color.\n   */\n  get emissiveColor(): Color {\n    return this._emissiveColor;\n  }\n\n  set emissiveColor(value: Color) {\n    this._emissiveColor = value;\n    this.shaderData.setColor(\"u_emissiveColor\", value);\n  }\n\n  /**\n   * Emissive texture.\n   */\n  get emissiveTexture(): Texture2D {\n    return this._emissiveTexture;\n  }\n\n  set emissiveTexture(value: Texture2D) {\n    this._emissiveTexture = value;\n\n    if (value) {\n      this.shaderData.enableMacro(\"O3_EMISSIVE_TEXTURE\");\n      this.shaderData.setTexture(\"u_emissiveTexture\", value);\n    } else {\n      this.shaderData.disableMacro(\"O3_EMISSIVE_TEXTURE\");\n    }\n  }\n\n  /**\n   * Diffuse color.\n   */\n  get diffuseColor(): Color {\n    return this._diffuseColor;\n  }\n\n  set diffuseColor(value: Color) {\n    this._diffuseColor = value;\n    this.shaderData.setColor(\"u_diffuseColor\", value);\n  }\n\n  /**\n   * Diffuse texture.\n   */\n  get diffuseTexture(): Texture2D {\n    return this._diffuseTexture;\n  }\n\n  set diffuseTexture(value: Texture2D) {\n    this._diffuseTexture = value;\n\n    if (value) {\n      this.shaderData.enableMacro(\"O3_DIFFUSE_TEXTURE\");\n      this.shaderData.setTexture(\"u_diffuseTexture\", value);\n    } else {\n      this.shaderData.disableMacro(\"O3_DIFFUSE_TEXTURE\");\n    }\n  }\n\n  /**\n   * Specular color.\n   */\n  get specularColor(): Color {\n    return this._specularColor;\n  }\n\n  set specularColor(value: Color) {\n    this._specularColor = value;\n    this.shaderData.setColor(\"u_specularColor\", value);\n  }\n\n  /**\n   * Specular texture.\n   */\n  get specularTexture(): Texture2D {\n    return this._specularTexture;\n  }\n\n  set specularTexture(value: Texture2D) {\n    this._specularTexture = value;\n\n    if (value) {\n      this.shaderData.enableMacro(\"O3_SPECULAR_TEXTURE\");\n      this.shaderData.setTexture(\"u_specularTexture\", value);\n    } else {\n      this.shaderData.disableMacro(\"O3_SPECULAR_TEXTURE\");\n    }\n  }\n\n  /**\n   * Set the specular reflection coefficient, the larger the value, the more convergent the specular reflection effect.\n   */\n  get shininess(): number {\n    return this._shininess;\n  }\n\n  set shininess(value: number) {\n    this._shininess = value;\n    this.shaderData.setFloat(\"u_shininess\", value);\n  }\n\n  /**\n   * Transparent mode.\n   */\n  get alphaMode(): AlphaMode {\n    return this._alphaMode;\n  }\n\n  set alphaMode(v: AlphaMode) {\n    const target = this.renderState.blendState.targetBlendState;\n    const depthState = this.renderState.depthState;\n\n    switch (v) {\n      case AlphaMode.Opaque:\n      case AlphaMode.CutOff:\n        {\n          target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.One;\n          target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.Zero;\n          target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n          depthState.writeEnabled = true;\n          this.renderQueueType = RenderQueueType.Opaque;\n        }\n        break;\n      case AlphaMode.Blend:\n        {\n          target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.SourceAlpha;\n          target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n          target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n          depthState.writeEnabled = false;\n          this.renderQueueType = RenderQueueType.Transparent;\n        }\n        break;\n    }\n  }\n\n  /**\n   * Whether to render both sides.\n   * @remarks Only the front side is rendered by default\n   */\n  get doubleSided(): boolean {\n    return this._doubleSided;\n  }\n\n  set doubleSided(v: boolean) {\n    if (v) {\n      this.renderState.rasterState.cullMode = CullMode.Off;\n    } else {\n      this.renderState.rasterState.cullMode = CullMode.Back;\n    }\n  }\n\n  private _ambientColor: Color = new Color(0, 0, 0, 1);\n  private _emissiveColor: Color = new Color(0, 0, 0, 1);\n  private _diffuseColor: Color = new Color(1, 1, 1, 1);\n  private _specularColor: Color = new Color(1, 1, 1, 1);\n  private _ambientTexture: Texture2D;\n  private _emissiveTexture: Texture2D;\n  private _diffuseTexture: Texture2D;\n  private _specularTexture: Texture2D;\n  private _shininess: number = 16;\n  private _alphaMode: AlphaMode = AlphaMode.Opaque;\n  private _doubleSided: boolean = false;\n\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"blinn-phong\"));\n    this.shaderData.enableMacro(\"O3_NEED_WORLDPOS\");\n\n    this.ambientColor = this._ambientColor;\n    this.emissiveColor = this._emissiveColor;\n    this.diffuseColor = this._diffuseColor;\n    this.specularColor = this._specularColor;\n    this.shininess = this._shininess;\n  }\n\n  /**\n   * @override\n   */\n  clone(): BlinnPhongMaterial {\n    var dest: BlinnPhongMaterial = new BlinnPhongMaterial(this._engine);\n    this.cloneTo(dest);\n    return dest;\n  }\n}\n","import { Color, Matrix } from \"@oasis-engine/math\";\nimport { Engine } from \"../Engine\";\nimport { BlendFactor } from \"../shader/enums/BlendFactor\";\nimport { BlendOperation } from \"../shader/enums/BlendOperation\";\nimport { CullMode } from \"../shader/enums/CullMode\";\nimport { Shader } from \"../shader/Shader\";\nimport { TextureCubeMap } from \"../texture\";\nimport { Texture2D } from \"../texture/Texture2D\";\nimport { AlphaMode } from \"./enums/AlphaMode\";\nimport { RenderQueueType } from \"./enums/RenderQueueType\";\nimport { Material } from \"./Material\";\n\n/**\n * PBR (Physically-Based Rendering) Material.\n */\nexport class PBRMaterial extends Material {\n  /**\n   * Base color.\n   */\n  get baseColor(): Color {\n    return this._baseColor;\n  }\n\n  set baseColor(v: Color) {\n    this._baseColor = v;\n    this.shaderData.setColor(\"u_baseColorFactor\", v);\n  }\n\n  /**\n   * Base color texture.\n   */\n  get baseColorTexture(): Texture2D {\n    return this._baseColorTexture;\n  }\n\n  set baseColorTexture(v: Texture2D) {\n    this._baseColorTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_BASECOLORMAP\");\n      this.shaderData.setTexture(\"u_baseColorSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_BASECOLORMAP\");\n    }\n  }\n\n  /**\n   * Transparent coefficient.\n   */\n  get opacity(): number {\n    return this.baseColor.a;\n  }\n\n  set opacity(val: number) {\n    this.baseColor.a = val;\n  }\n\n  /**\n   * Transparent texture.\n   * */\n  get opacityTexture(): Texture2D {\n    return this._opacityTexture;\n  }\n\n  set opacityTexture(v: Texture2D) {\n    this._opacityTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_OPACITYMAP\");\n      this.shaderData.setTexture(\"u_opacitySampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_OPACITYMAP\");\n    }\n  }\n\n  /**\n   * Metallic factor.\n   */\n  get metallicFactor(): number {\n    return this._metallicFactor;\n  }\n\n  set metallicFactor(v: number) {\n    this._metallicFactor = v;\n    this.shaderData.setFloat(\"u_metal\", v);\n  }\n\n  /**\n   * Rough factor.\n   */\n  get roughnessFactor(): number {\n    return this._roughnessFactor;\n  }\n\n  set roughnessFactor(v: number) {\n    this._roughnessFactor = v;\n    this.shaderData.setFloat(\"u_roughness\", v);\n  }\n\n  /**\n   * Metallic texture.\n   */\n  get metallicTexture(): Texture2D {\n    return this._metallicTexture;\n  }\n\n  set metallicTexture(v: Texture2D) {\n    this._metallicTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_METALMAP\");\n      this.shaderData.setTexture(\"u_metallicSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_METALMAP\");\n    }\n  }\n\n  /**\n   * Rough texture.\n   */\n  get roughnessTexture(): Texture2D {\n    return this._roughnessTexture;\n  }\n\n  set roughnessTexture(v: Texture2D) {\n    this._roughnessTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_ROUGHNESSMAP\");\n      this.shaderData.setTexture(\"u_roughnessSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_ROUGHNESSMAP\");\n    }\n  }\n\n  /**\n   * Metallic rough texture.\n   */\n  get metallicRoughnessTexture(): Texture2D {\n    return this._metallicRoughnessTexture;\n  }\n\n  set metallicRoughnessTexture(v: Texture2D) {\n    this._metallicRoughnessTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_METALROUGHNESSMAP\");\n      this.shaderData.setTexture(\"u_metallicRoughnessSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_METALROUGHNESSMAP\");\n    }\n  }\n\n  /**\n   * Normal texture.\n   */\n  get normalTexture(): Texture2D {\n    return this._normalTexture;\n  }\n\n  set normalTexture(v: Texture2D) {\n    this._normalTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"O3_HAS_NORMALMAP\");\n      this.shaderData.setTexture(\"u_normalSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"O3_HAS_NORMALMAP\");\n    }\n  }\n\n  /**\n   * Normal scale factor.\n   */\n  get normalScale(): number {\n    return this._normalScale;\n  }\n\n  set normalScale(v: number) {\n    this._normalScale = v;\n    this.shaderData.setFloat(\"u_normalScale\", v);\n  }\n\n  /**\n   * Emissive texture.\n   */\n  get emissiveTexture(): Texture2D {\n    return this._emissiveTexture;\n  }\n\n  set emissiveTexture(v: Texture2D) {\n    this._emissiveTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_EMISSIVEMAP\");\n      this.shaderData.setTexture(\"u_emissiveSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_EMISSIVEMAP\");\n    }\n  }\n\n  /**\n   * Emissive color.\n   */\n  get emissiveColor(): Color {\n    return this._emissiveColor;\n  }\n\n  set emissiveColor(v: Color) {\n    this._emissiveColor = v;\n    this.shaderData.setColor(\"u_emissiveFactor\", v);\n  }\n\n  /**\n   * Occlusive texture.\n   */\n  get occlusionTexture(): Texture2D {\n    return this._occlusionTexture;\n  }\n\n  set occlusionTexture(v: Texture2D) {\n    this._occlusionTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_OCCLUSIONMAP\");\n      this.shaderData.setTexture(\"u_occlusionSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_OCCLUSIONMAP\");\n    }\n  }\n\n  /**\n   * Occlusive intensity.\n   */\n  get occlusionStrength(): number {\n    return this._occlusionStrength;\n  }\n\n  set occlusionStrength(v: number) {\n    this._occlusionStrength = v;\n    this.shaderData.setFloat(\"u_occlusionStrength\", v);\n  }\n\n  /**\n   * Alpha cutoff value.\n   * @remarks fragments with alpha channel lower than cutoff value will be discarded.\n   */\n  get alphaCutoff(): number {\n    return this._alphaCutoff;\n  }\n\n  set alphaCutoff(v: number) {\n    this._alphaCutoff = v;\n    this.shaderData.setFloat(\"u_alphaCutoff\", v);\n  }\n\n  /**\n   * Specular color.\n   */\n  get specularColor(): Color {\n    return this._specularColor;\n  }\n\n  set specularColor(v: Color) {\n    this._specularColor = v;\n    this.shaderData.setColor(\"u_specularFactor\", v);\n  }\n\n  /**\n   * Glossiness factor.\n   */\n  get glossinessFactor(): number {\n    return this._glossinessFactor;\n  }\n\n  set glossinessFactor(v: number) {\n    this._glossinessFactor = v;\n    this.shaderData.setFloat(\"u_glossinessFactor\", v);\n  }\n\n  /**\n   * Specular and glossiness texture.\n   */\n  get specularGlossinessTexture(): Texture2D {\n    return this._specularGlossinessTexture;\n  }\n\n  set specularGlossinessTexture(v: Texture2D) {\n    this._specularGlossinessTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_SPECULARGLOSSINESSMAP\");\n      this.shaderData.setTexture(\"u_specularGlossinessSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_SPECULARGLOSSINESSMAP\");\n    }\n  }\n\n  /**\n   * Reflection texture.\n   * @remarks if this texture is not set, the global environmentMapLight's specularTexture will be used.\n   */\n  get reflectionTexture(): TextureCubeMap {\n    return this._reflectionTexture;\n  }\n\n  set reflectionTexture(v: TextureCubeMap) {\n    this._reflectionTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_REFLECTIONMAP\");\n      this.shaderData.setTexture(\"u_reflectionSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_REFLECTIONMAP\");\n    }\n  }\n\n  /**\n   * Reflection intensity.\n   */\n  get envMapIntensity(): number {\n    return this._envMapIntensity;\n  }\n\n  set envMapIntensity(v: number) {\n    this._envMapIntensity = v;\n    this.shaderData.setFloat(\"u_envMapIntensity\", v);\n  }\n\n  /**\n   * The ratio of IOR(index of refraction) from air to medium.eg. 1 / 1.33 from air to water.\n   */\n  get refractionRatio(): number {\n    return this._refractionRatio;\n  }\n\n  set refractionRatio(v: number) {\n    this._refractionRatio = v;\n    this.shaderData.setFloat(\"u_refractionRatio\", v);\n  }\n\n  /**\n   * The depth value of the local refraction texture, used to simulate the refraction distance.\n   */\n  get refractionDepth(): number {\n    return this._refractionDepth;\n  }\n\n  set refractionDepth(v: number) {\n    this._refractionDepth = v;\n    this.shaderData.setFloat(\"u_refractionDepth\", v);\n  }\n\n  /**\n   * Local refraction texture.\n   */\n  get refractionTexture(): Texture2D {\n    return this._refractionTexture;\n  }\n\n  set refractionTexture(v: Texture2D) {\n    this._refractionTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_REFRACTIONMAP\");\n      this.shaderData.setTexture(\"u_refractionSampler\", v);\n      this.shaderData.setMatrix(\"u_PTMMatrix\", this._PTMMatrix);\n    } else {\n      this.shaderData.disableMacro(\"HAS_REFRACTIONMAP\");\n    }\n  }\n\n  /**\n   * Perturbation texture.\n   */\n  get perturbationTexture(): Texture2D {\n    return this._perturbationTexture;\n  }\n\n  set perturbationTexture(v: Texture2D) {\n    this._perturbationTexture = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"HAS_PERTURBATIONMAP\");\n      this.shaderData.setTexture(\"u_perturbationSampler\", v);\n    } else {\n      this.shaderData.disableMacro(\"HAS_PERTURBATIONMAP\");\n    }\n  }\n\n  /**\n   * Offset of the perturbation texture coordinate on S.\n   */\n  get perturbationUOffset(): number {\n    return this._perturbationUOffset;\n  }\n\n  set perturbationUOffset(v: number) {\n    this._perturbationUOffset = v;\n    this.shaderData.setFloat(\"u_perturbationUOffset\", v);\n  }\n\n  /**\n   * Offset of the perturbation texture coordinate on T.\n   */\n  get perturbationVOffset(): number {\n    return this._perturbationVOffset;\n  }\n\n  set perturbationVOffset(v: number) {\n    this._perturbationVOffset = v;\n    this.shaderData.setFloat(\"u_perturbationVOffset\", v);\n  }\n\n  /**\n   * Whether the frag color is affected by light.\n   */\n  get unLight(): boolean {\n    return this._unLight;\n  }\n\n  set unLight(v: boolean) {\n    this._unLight = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"UNLIT\");\n    } else {\n      this.shaderData.disableMacro(\"UNLIT\");\n    }\n  }\n\n  /**\n   * Whether to use SRGB color space.\n   */\n  get srgb(): boolean {\n    return this._srgb;\n  }\n\n  set srgb(v: boolean) {\n    this._srgb = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"MANUAL_SRGB\");\n    } else {\n      this.shaderData.disableMacro(\"MANUAL_SRGB\");\n    }\n  }\n\n  /**\n   * Whether sRGB linear correction uses approximate fast algorithm.\n   * */\n  get srgbFast(): boolean {\n    return this._srgbFast;\n  }\n\n  set srgbFast(v: boolean) {\n    this._srgbFast = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"SRGB_FAST_APPROXIMATION\");\n    } else {\n      this.shaderData.disableMacro(\"SRGB_FAST_APPROXIMATION\");\n    }\n  }\n\n  /**\n   * Whether to use Gamma correction.\n   */\n  get gamma(): boolean {\n    return this._gamma;\n  }\n\n  set gamma(v: boolean) {\n    this._gamma = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"GAMMA\");\n    } else {\n      this.shaderData.disableMacro(\"GAMMA\");\n    }\n  }\n\n  /**\n   * Whether to take the brightness value of the opacityTexture as the transparency.\n   */\n  get getOpacityFromRGB(): boolean {\n    return this._getOpacityFromRGB;\n  }\n\n  set getOpacityFromRGB(v: boolean) {\n    this._getOpacityFromRGB = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"GETOPACITYFROMRGB\");\n    } else {\n      this.shaderData.disableMacro(\"GETOPACITYFROMRGB\");\n    }\n  }\n\n  /**\n   * Whether to use metallic-roughness workflow.\n   * @remarks PBR renderring will use specular-glossiness workflow if this value is false.\n   */\n  get isMetallicWorkflow(): boolean {\n    return this._isMetallicWorkflow;\n  }\n\n  set isMetallicWorkflow(v: boolean) {\n    this._isMetallicWorkflow = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"IS_METALLIC_WORKFLOW\");\n    } else {\n      this.shaderData.disableMacro(\"IS_METALLIC_WORKFLOW\");\n    }\n  }\n\n  /**\n   * Whether to refract global environmentMapLight, default reflection.\n   * */\n  get envMapModeRefract(): boolean {\n    return this._envMapModeRefract;\n  }\n\n  set envMapModeRefract(v: boolean) {\n    this._envMapModeRefract = v;\n\n    if (v) {\n      this.shaderData.enableMacro(\"ENVMAPMODE_REFRACT\");\n    } else {\n      this.shaderData.disableMacro(\"ENVMAPMODE_REFRACT\");\n    }\n  }\n\n  /**\n   * Transparent mode.\n   */\n  get alphaMode(): AlphaMode {\n    return this._alphaMode;\n  }\n\n  set alphaMode(v: AlphaMode) {\n    const target = this.renderState.blendState.targetBlendState;\n    const depthState = this.renderState.depthState;\n\n    this.shaderData.disableMacro(\"ALPHA_CUTOFF\");\n    this.shaderData.disableMacro(\"ALPHA_BLEND\");\n\n    switch (v) {\n      case AlphaMode.Opaque:\n        {\n          target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.One;\n          target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.Zero;\n          target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n          depthState.writeEnabled = true;\n          this.renderQueueType = RenderQueueType.Opaque;\n        }\n        break;\n      case AlphaMode.Blend:\n        {\n          this.shaderData.enableMacro(\"ALPHA_BLEND\");\n          target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.SourceAlpha;\n          target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n          target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n          depthState.writeEnabled = false;\n          this.renderQueueType = RenderQueueType.Transparent;\n        }\n        break;\n      case AlphaMode.CutOff:\n        {\n          this.shaderData.enableMacro(\"ALPHA_CUTOFF\");\n          target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.One;\n          target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.Zero;\n          target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n          depthState.writeEnabled = true;\n          this.renderQueueType = RenderQueueType.AlphaTest;\n        }\n        break;\n    }\n  }\n\n  /**\n   * Whether to render both sides.\n   * @remarks Only the front side is rendered by default\n   */\n  get doubleSided(): boolean {\n    return this._doubleSided;\n  }\n\n  set doubleSided(v: boolean) {\n    if (v) {\n      this.renderState.rasterState.cullMode = CullMode.Off;\n    } else {\n      this.renderState.rasterState.cullMode = CullMode.Back;\n    }\n  }\n\n  private _baseColor: Color = new Color(1, 1, 1, 1);\n  private _metallicFactor: number = 1;\n  private _roughnessFactor: number = 1;\n  private _normalScale: number = 1;\n  private _emissiveColor = new Color(0, 0, 0, 1);\n  private _occlusionStrength: number = 1;\n  private _alphaCutoff: number = 0.5;\n  private _specularColor = new Color(1, 1, 1, 1);\n  private _glossinessFactor: number = 0;\n  private _envMapIntensity: number = 1;\n  private _refractionRatio: number = 1 / 1.33;\n  private _refractionDepth: number = 1;\n  private _perturbationUOffset: number = 0;\n  private _perturbationVOffset: number = 0;\n  private _PTMMatrix = new Matrix(0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0, 0.0, 0.0, 0.5, 0.0, 0.5, 0.5, 0.5, 1.0);\n  private _baseColorTexture: Texture2D;\n  private _opacityTexture: Texture2D;\n  private _metallicTexture: Texture2D;\n  private _roughnessTexture: Texture2D;\n  private _metallicRoughnessTexture: Texture2D;\n  private _normalTexture: Texture2D;\n  private _emissiveTexture: Texture2D;\n  private _occlusionTexture: Texture2D;\n  private _specularGlossinessTexture: Texture2D;\n  private _reflectionTexture: TextureCubeMap;\n  private _refractionTexture: Texture2D;\n  private _perturbationTexture: Texture2D;\n\n  private _unLight: boolean = false;\n  private _srgb: boolean = false;\n  private _srgbFast: boolean = false;\n  private _gamma: boolean = false;\n  private _getOpacityFromRGB: boolean = false;\n  private _isMetallicWorkflow: boolean = true;\n  private _envMapModeRefract: boolean = false;\n  private _alphaMode: AlphaMode = AlphaMode.Opaque;\n  private _doubleSided: boolean = false;\n\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"pbr\"));\n    this.shaderData.enableMacro(\"O3_NEED_WORLDPOS\");\n\n    this.baseColor = this._baseColor;\n    this.metallicFactor = this._metallicFactor;\n    this.roughnessFactor = this._roughnessFactor;\n    this.normalScale = this._normalScale;\n    this.emissiveColor = this._emissiveColor;\n    this.occlusionStrength = this._occlusionStrength;\n    this.alphaCutoff = this._alphaCutoff;\n    this.specularColor = this._specularColor;\n    this.glossinessFactor = this._glossinessFactor;\n    this.envMapIntensity = this._envMapIntensity;\n    this.refractionRatio = this._refractionRatio;\n    this.refractionDepth = this._refractionDepth;\n    this.perturbationUOffset = this._perturbationUOffset;\n    this.perturbationVOffset = this._perturbationVOffset;\n\n    this.unLight = this._unLight;\n    this.srgb = this._srgb;\n    this.srgbFast = this._srgbFast;\n    this.gamma = this._gamma;\n    this.getOpacityFromRGB = this._getOpacityFromRGB;\n    this.isMetallicWorkflow = this._isMetallicWorkflow;\n    this.envMapModeRefract = this._envMapModeRefract;\n    this.alphaMode = this._alphaMode;\n  }\n\n  clone(): PBRMaterial {\n    const dest = new PBRMaterial(this._engine);\n    this.cloneTo(dest);\n    return dest;\n  }\n}\n","/**\n * Define the face of the cube texture.\n */\nexport enum TextureCubeFace {\n  /** Positive X face for a cube-mapped texture. */\n  PositiveX = 0,\n  /** Negative X face for a cube-mapped texture. */\n  NegativeX = 1,\n  /** Positive Y face for a cube-mapped texture. */\n  PositiveY = 2,\n  /** Negative Y face for a cube-mapped texture. */\n  NegativeY = 3,\n  /** Positive Z face for a cube-mapped texture. */\n  PositiveZ = 4,\n  /** Negative Z face for a cube-mapped texture. */\n  NegativeZ = 5\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { TextureCubeFace } from \"./enums/TextureCubeFace\";\nimport { TextureFilterMode } from \"./enums/TextureFilterMode\";\nimport { TextureFormat } from \"./enums/TextureFormat\";\nimport { TextureWrapMode } from \"./enums/TextureWrapMode\";\nimport { Texture } from \"./Texture\";\n\n/**\n * Cube texture.\n */\nexport class TextureCubeMap extends Texture {\n  private _format: TextureFormat;\n  /** Backward compatible with WebGL1.0. */\n  private _compressedFaceFilled: number[] = [0, 0, 0, 0, 0, 0];\n\n  /**\n   * Texture format.\n   */\n  get format(): TextureFormat {\n    return this._format;\n  }\n\n  /**\n   * Create TextureCube.\n   * @param engine - Define the engine to use to render this texture\n   * @param size - Texture size. texture width must be equal to height in cube texture\n   * @param format - Texture format,default TextureFormat.R8G8B8A8\n   * @param mipmap - Whether to use multi-level texture\n   */\n  constructor(engine: Engine, size: number, format: TextureFormat = TextureFormat.R8G8B8A8, mipmap: boolean = true) {\n    super(engine);\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportTextureFormat(format, rhi)) {\n      throw new Error(`Texture format is not supported:${TextureFormat[format]}`);\n    }\n\n    if (mipmap && !isWebGL2 && !Texture._isPowerOf2(size)) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    const formatDetail = Texture._getFormatDetail(format, gl, isWebGL2);\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = formatDetail;\n    this._rhi = rhi;\n    this._target = gl.TEXTURE_CUBE_MAP;\n    this._mipmap = mipmap;\n    this._width = size;\n    this._height = size;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    (formatDetail.isCompressed && !isWebGL2) || this._initMipmap(true);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n\n  /**\n   * Setting pixels data through cube face,color buffer data, designated area and texture mipmapping level,it's also applicable to compressed formats.\n   * @remarks When compressed texture is in WebGL1, the texture must be filled first before writing the sub-region\n   * @param face - Cube face\n   * @param colorBuffer - Color buffer data\n   * @param mipLevel - Texture mipmapping level\n   * @param x - X coordinate of area start\n   * @param y -  Y coordinate of area start\n   * @param width - Data width.if it's empty, width is the width corresponding to mipLevel minus x , width corresponding to mipLevel is Math.max(1, this.width >> mipLevel)\n   * @param height - Data height.if it's empty, height is the height corresponding to mipLevel minus y , height corresponding to mipLevel is Math.max(1, this.height >> mipLevel)\n   */\n  setPixelBuffer(\n    face: TextureCubeFace,\n    colorBuffer: ArrayBufferView,\n    mipLevel: number = 0,\n    x?: number,\n    y?: number,\n    width?: number,\n    height?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const { internalFormat, baseFormat, dataType, isCompressed } = this._formatDetail;\n    const mipSize = Math.max(1, this._width >> mipLevel);\n\n    x = x || 0;\n    y = y || 0;\n    width = width || mipSize - x;\n    height = height || mipSize - y;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n\n    if (isCompressed) {\n      const mipBit = 1 << mipLevel;\n      if (isWebGL2 || this._compressedFaceFilled[face] & mipBit) {\n        gl.compressedTexSubImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          x,\n          y,\n          width,\n          height,\n          internalFormat,\n          colorBuffer\n        );\n      } else {\n        gl.compressedTexImage2D(\n          gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n          mipLevel,\n          internalFormat,\n          width,\n          height,\n          0,\n          colorBuffer\n        );\n        this._compressedFaceFilled[face] |= mipBit;\n      }\n    } else {\n      gl.texSubImage2D(\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n        mipLevel,\n        x,\n        y,\n        width,\n        height,\n        baseFormat,\n        dataType,\n        colorBuffer\n      );\n    }\n\n    this._unbind();\n  }\n\n  /**\n   * Setting pixels data through cube face, TexImageSource, designated area and texture mipmapping level.\n   * @param face - Cube face\n   * @param imageSource - The source of texture\n   * @param mipLevel - Texture mipmapping level\n   * @param flipY - Whether to flip the Y axis\n   * @param premultipltAlpha - Whether to premultiply the transparent channel\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   */\n  setImageSource(\n    face: TextureCubeFace,\n    imageSource: TexImageSource,\n    mipLevel: number = 0,\n    flipY: boolean = false,\n    premultiplyAlpha: boolean = false,\n    x?: number,\n    y?: number\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const { baseFormat, dataType } = this._formatDetail;\n\n    this._bind();\n\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, +flipY);\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, +premultiplyAlpha);\n    gl.texSubImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X + face,\n      mipLevel,\n      x || 0,\n      y || 0,\n      baseFormat,\n      dataType,\n      imageSource\n    );\n    this._unbind();\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   */\n  getPixelBuffer(\n    face: TextureCubeFace,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    if (this._formatDetail.isCompressed) {\n      throw new Error(\"Unable to read compressed texture\");\n    }\n    super._getPixelBuffer(face, x, y, width, height, out);\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferDepthFormat } from \"./enums/RenderBufferDepthFormat\";\nimport { TextureFilterMode } from \"./enums/TextureFilterMode\";\nimport { TextureWrapMode } from \"./enums/TextureWrapMode\";\nimport { Texture } from \"./Texture\";\n\n/**\n * The texture is used for the output of depth information in off-screen rendering.\n */\nexport class RenderDepthTexture extends Texture {\n  /** @internal */\n  public _isCube: boolean = false;\n\n  private _format: RenderBufferDepthFormat;\n  private _autoMipmap: boolean = false;\n\n  /**\n   * Render depth texture format.\n   */\n  get format(): RenderBufferDepthFormat {\n    return this._format;\n  }\n\n  /**\n   * Whether to automatically generate multi-level textures.\n   */\n  get autoGenerateMipmaps(): boolean {\n    return this._autoMipmap;\n  }\n\n  set autoGenerateMipmaps(value: boolean) {\n    this._autoMipmap = value;\n  }\n\n  /**\n   * Create RenderDepthTexture.\n   * @param engine - Define the engine to use to render this depth texture\n   * @param width - Texture width\n   * @param height - Texture height\n   * @param format - Texture format. default RenderBufferDepthFormat.Depth, engine will automatically select the supported precision\n   * @param mipmap - Whether to use multi-level texture\n   * @param isCube - Whether it's cube texture\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    format: RenderBufferDepthFormat = RenderBufferDepthFormat.Depth,\n    mipmap: boolean = false,\n    isCube: boolean = false\n  ) {\n    super(engine);\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportRenderBufferDepthFormat(format, rhi, true)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = Texture._getRenderBufferDepthFormatDetail(format, gl, isWebGL2);\n    this._isCube = isCube;\n    this._rhi = rhi;\n    this._target = isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    this._initMipmap(isCube);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n}\n","import { EngineObject } from \"../base\";\nimport { GLCapabilityType } from \"../base/Constant\";\nimport { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferDepthFormat } from \"./enums/RenderBufferDepthFormat\";\nimport { TextureCubeFace } from \"./enums/TextureCubeFace\";\nimport { RenderColorTexture } from \"./RenderColorTexture\";\nimport { RenderDepthTexture } from \"./RenderDepthTexture\";\nimport { Texture } from \"./Texture\";\n\n/**\n * The render target used for off-screen rendering.\n */\nexport class RenderTarget extends EngineObject {\n  public _frameBuffer: WebGLFramebuffer;\n  public _MSAAFrameBuffer: WebGLFramebuffer | null;\n\n  private _rhi;\n  private _width: number;\n  private _height: number;\n  private _antiAliasing: number;\n  private _colorTextures: RenderColorTexture[];\n  private _depthTexture: RenderDepthTexture | null;\n  private _depthRenderBuffer: WebGLRenderbuffer | null;\n  private _MSAAColorRenderBuffers: WebGLRenderbuffer[] = [];\n  private _MSAADepthRenderBuffer: WebGLRenderbuffer | null;\n  private _oriDrawBuffers: GLenum[];\n  private _blitDrawBuffers: GLenum[] | null;\n\n  /**\n   * Render target width.\n   * @readonly\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * Render target height.\n   * @readonly\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * Render color texture count.\n   * @readonly\n   */\n  get colorTextureCount(): number {\n    return this._colorTextures.length;\n  }\n\n  /**\n   * Depth texture.\n   * @readonly\n   */\n  get depthTexture(): RenderDepthTexture | null {\n    return this._depthTexture;\n  }\n\n  /**\n   * Anti-aliasing level.\n   * @remarks If the anti-aliasing level set is greater than the maximum level supported by the hardware, the maximum level of the hardware will be used.\n   * @readonly\n   */\n  get antiAliasing(): number {\n    return this._antiAliasing;\n  }\n\n  /**\n   * Create a render target through color texture and depth format.\n   * @param engine - Define the engine to use for this off-screen rendering\n   * @param width - Render target width\n   * @param height - Render target height\n   * @param colorTexture - Render color texture\n   * @param depthFormat - Depth format. default RenderBufferDepthFormat.Depth, engine will automatically select the supported precision\n   * @param antiAliasing - Anti-aliasing level, default is 1\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    colorTexture: RenderColorTexture,\n    depthFormat?: RenderBufferDepthFormat | null,\n    antiAliasing?: number\n  );\n\n  /**\n   * Create a render target through color texture and depth format.\n   * @remarks If the color texture is not transmitted, only the depth texture is generated.\n   * @param engine - Define the engine to use for this off-screen rendering\n   * @param width - Render target width\n   * @param height - Render target height\n   * @param colorTexture - Render color texture\n   * @param depthTexture - Render depth texture\n   * @param antiAliasing - Anti-aliasing level, default is 1\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    colorTexture: RenderColorTexture | null,\n    depthTexture: RenderDepthTexture,\n    antiAliasing?: number\n  );\n\n  /**\n   * Create a render target with color texture array and depth format.\n   * @param engine - Define the engine to use for this off-screen rendering\n   * @param width - Render target width\n   * @param height - Render target height\n   * @param colorTextures - Render color texture array\n   * @param depthFormat - Depth format. default RenderBufferDepthFormat.Depth,engine will automatically select the supported precision\n   * @param antiAliasing - Anti-aliasing level, default is 1\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    colorTextures: RenderColorTexture[],\n    depthFormat?: RenderBufferDepthFormat | null,\n    antiAliasing?: number\n  );\n\n  /**\n   * Create a render target with color texture array and depth texture.\n   * @param engine - Define the engine to use for this off-screen rendering\n   * @param width - Render target width\n   * @param height - Render target height\n   * @param colorTextures - Render color texture array\n   * @param depthTexture - Depth texture\n   * @param antiAliasing - Anti-aliasing level, default is 1\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    colorTextures: RenderColorTexture[],\n    depthTexture: RenderDepthTexture,\n    antiAliasing?: number\n  );\n\n  /**\n   * @internal\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    renderTexture: RenderColorTexture | Array<RenderColorTexture> | null,\n    depth: RenderDepthTexture | RenderBufferDepthFormat | null = RenderBufferDepthFormat.Depth,\n    antiAliasing: number = 1\n  ) {\n    super(engine);\n    const rhi = engine._hardwareRenderer;\n\n    /** @TODO\n     * MRT + Cube + [,MSAA]\n     * MRT + MSAA\n     */\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n\n    if (!(depth instanceof RenderDepthTexture) && !Texture._supportRenderBufferDepthFormat(depth, rhi, false)) {\n      throw new Error(`RenderBufferDepthFormat is not supported:${RenderBufferDepthFormat[depth]}`);\n    }\n\n    if ((renderTexture as RenderColorTexture[])?.length > 1 && !rhi.canIUse(GLCapabilityType.drawBuffers)) {\n      throw new Error(\"MRT is not supported\");\n    }\n\n    // Handle this._colorTextures\n    if (renderTexture) {\n      this._colorTextures = renderTexture instanceof Array ? renderTexture.slice() : [renderTexture];\n    } else {\n      this._colorTextures = [];\n    }\n\n    if (this._colorTextures.some((v: RenderColorTexture) => v.width !== width || v.height !== height)) {\n      throw new Error(\"RenderColorTexture's size must as same as RenderTarget\");\n    }\n\n    if (depth instanceof RenderDepthTexture && (depth.width !== width || depth.height !== height)) {\n      throw new Error(\"RenderDepthTexture's size must as same as RenderTarget\");\n    }\n\n    // TODO: necessary to support MRT + Cube + [,MSAA] ?\n    if (this._colorTextures.length > 1 && this._colorTextures.some((v: RenderColorTexture) => v._isCube)) {\n      throw new Error(\"MRT+Cube+[,MSAA] is not supported\");\n    }\n\n    const maxAntiAliasing = rhi.capability.maxAntiAliasing;\n    if (antiAliasing > maxAntiAliasing) {\n      Logger.warn(`MSAA antiAliasing exceeds the limit and is automatically downgraded to:${maxAntiAliasing}`);\n      antiAliasing = maxAntiAliasing;\n    }\n\n    this._rhi = rhi;\n    this._width = width;\n    this._height = height;\n    this._frameBuffer = gl.createFramebuffer();\n    this._antiAliasing = antiAliasing;\n\n    if (depth instanceof RenderDepthTexture) {\n      this._depthTexture = depth;\n    }\n\n    // Bind main FBO\n    this._bindMainFBO(depth);\n\n    // Bind MSAA FBO\n    if (antiAliasing > 1) {\n      this._MSAAFrameBuffer = gl.createFramebuffer();\n      this._bindMSAAFBO(depth);\n    }\n  }\n\n  /**\n   * Get the render color texture by index.\n   * @param index\n   */\n  public getColorTexture(index: number = 0): RenderColorTexture | null {\n    return this._colorTextures[index];\n  }\n\n  /**\n   * Destroy render target.\n   */\n  public destroy(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    gl.deleteFramebuffer(this._frameBuffer);\n    this._depthRenderBuffer && gl.deleteRenderbuffer(this._depthRenderBuffer);\n    this._MSAAFrameBuffer && gl.deleteFramebuffer(this._MSAAFrameBuffer);\n    this._MSAADepthRenderBuffer && gl.deleteRenderbuffer(this._MSAADepthRenderBuffer);\n\n    for (let i = 0; i < this._colorTextures.length; i++) {\n      this._colorTextures[i].destroy();\n    }\n\n    for (let i = 0; i < this._MSAAColorRenderBuffers.length; i++) {\n      gl.deleteRenderbuffer(this._MSAAColorRenderBuffers[i]);\n    }\n\n    this._depthTexture && this._depthTexture.destroy();\n\n    this._frameBuffer = null;\n    this._colorTextures.length = 0;\n    this._depthTexture = null;\n    this._depthRenderBuffer = null;\n    this._MSAAFrameBuffer = null;\n    this._MSAAColorRenderBuffers.length = 0;\n    this._MSAADepthRenderBuffer = null;\n  }\n\n  /**\n   * Activate this RenderTarget.\n   * @remarks\n   * If MSAA is turned on, MSAA FBO is activated, and then this._blitRenderTarget() is performed to exchange FBO.\n   * If MSAA is not turned on, activate the main FBO.\n   */\n  public _activeRenderTarget(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n\n    if (this._MSAAFrameBuffer) {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n    }\n  }\n\n  /**\n   * Set which face of the cube texture to render to.\n   * @param faceIndex - Cube texture face\n   */\n  public _setRenderTargetFace(faceIndex: TextureCubeFace = TextureCubeFace.PositiveX): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const colorTexture = this._colorTextures[0];\n    const depthTexture = this._depthTexture;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    // Bind render color texture\n    if (colorTexture?._isCube) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n        colorTexture._glTexture,\n        0\n      );\n    }\n\n    // Bind depth texture\n    if (depthTexture?._isCube) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        depthTexture._formatDetail.attachment,\n        gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex,\n        depthTexture._glTexture,\n        0\n      );\n    }\n\n    // Revert current activated render target\n    this._activeRenderTarget();\n  }\n\n  /**\n   * Blit FBO.\n   */\n  public _blitRenderTarget(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const mask = gl.COLOR_BUFFER_BIT | (this._depthTexture ? gl.DEPTH_BUFFER_BIT : 0);\n    const colorTextureLength = this._colorTextures.length;\n\n    gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._MSAAFrameBuffer);\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._frameBuffer);\n\n    for (let textureIndex = 0; textureIndex < colorTextureLength; textureIndex++) {\n      const attachment = gl.COLOR_ATTACHMENT0 + textureIndex;\n\n      this._blitDrawBuffers[textureIndex] = attachment;\n\n      gl.readBuffer(attachment);\n      gl.drawBuffers(this._blitDrawBuffers);\n      gl.blitFramebuffer(0, 0, this._width, this._height, 0, 0, this._width, this._height, mask, gl.NEAREST);\n\n      this._blitDrawBuffers[textureIndex] = gl.NONE;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n\n  /**\n   * Bind main FBO.\n   */\n  private _bindMainFBO(renderDepth: RenderDepthTexture | RenderBufferDepthFormat | null): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const colorTextureLength = this._colorTextures.length;\n    const drawBuffers = new Array(colorTextureLength);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._frameBuffer);\n\n    /** Color render buffer */\n    for (let i = 0; i < colorTextureLength; i++) {\n      const colorTexture = this._colorTextures[i];\n      const attachment = gl.COLOR_ATTACHMENT0 + i;\n\n      drawBuffers[i] = attachment;\n\n      // Cube texture please call _setRenderTargetFace()\n      if (!colorTexture._isCube) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, colorTexture._glTexture, 0);\n      }\n    }\n\n    if (colorTextureLength > 1) {\n      gl.drawBuffers(drawBuffers);\n    }\n    this._oriDrawBuffers = drawBuffers;\n\n    /** Depth render buffer */\n    if (renderDepth !== null) {\n      if (renderDepth instanceof RenderDepthTexture) {\n        // Cube texture _setRenderTargetFace()\n        if (!renderDepth._isCube) {\n          gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            renderDepth._formatDetail.attachment,\n            gl.TEXTURE_2D,\n            renderDepth._glTexture,\n            0\n          );\n        }\n      } else if (this._antiAliasing <= 1) {\n        const { internalFormat, attachment } = Texture._getRenderBufferDepthFormatDetail(renderDepth, gl, isWebGL2);\n        const depthRenderBuffer = gl.createRenderbuffer();\n\n        this._depthRenderBuffer = depthRenderBuffer;\n\n        gl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, this._width, this._height);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, depthRenderBuffer);\n      }\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  /**\n   * Bind MSAA FBO.\n   */\n  private _bindMSAAFBO(renderDepth: RenderDepthTexture | RenderBufferDepthFormat | null): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const MSAADepthRenderBuffer = gl.createRenderbuffer();\n    const colorTextureLength = this._colorTextures.length;\n\n    this._blitDrawBuffers = new Array(colorTextureLength);\n    this._MSAADepthRenderBuffer = MSAADepthRenderBuffer;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._MSAAFrameBuffer);\n\n    // Prepare MRT+MSAA color RBOs\n    for (let i = 0; i < colorTextureLength; i++) {\n      const MSAAColorRenderBuffer = gl.createRenderbuffer();\n\n      this._MSAAColorRenderBuffers[i] = MSAAColorRenderBuffer;\n      this._blitDrawBuffers[i] = gl.NONE;\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAAColorRenderBuffer);\n      gl.renderbufferStorageMultisample(\n        gl.RENDERBUFFER,\n        this._antiAliasing,\n        this._colorTextures[i]._formatDetail.internalFormat,\n        this._width,\n        this._height\n      );\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.RENDERBUFFER, MSAAColorRenderBuffer);\n    }\n    gl.drawBuffers(this._oriDrawBuffers);\n\n    // Prepare MSAA depth RBO\n    if (renderDepth !== null) {\n      const { internalFormat, attachment } =\n        renderDepth instanceof RenderDepthTexture\n          ? renderDepth._formatDetail\n          : Texture._getRenderBufferDepthFormatDetail(renderDepth, gl, isWebGL2);\n\n      gl.bindRenderbuffer(gl.RENDERBUFFER, MSAADepthRenderBuffer);\n      gl.renderbufferStorageMultisample(gl.RENDERBUFFER, this._antiAliasing, internalFormat, this._width, this._height);\n      gl.framebufferRenderbuffer(gl.FRAMEBUFFER, attachment, gl.RENDERBUFFER, MSAADepthRenderBuffer);\n    }\n\n    this._checkFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  }\n\n  /**\n   * Check FBO.\n   */\n  private _checkFrameBuffer(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._rhi.gl;\n    const isWebGL2: boolean = this._rhi.isWebGL2;\n    const e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    switch (e) {\n      case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n        throw new Error(\n          \"The attachment types are mismatched or not all framebuffer attachment points are framebuffer attachment complete\"\n        );\n      case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n        throw new Error(\"There is no attachment\");\n      case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n        throw new Error(\" Height and width of the attachment are not the same.\");\n      case gl.FRAMEBUFFER_UNSUPPORTED:\n        throw new Error(\n          \"The format of the attachment is not supported or if depth and stencil attachments are not the same renderbuffer\"\n        );\n    }\n\n    if (isWebGL2 && e === gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE) {\n      throw new Error(\n        \"The values of gl.RENDERBUFFER_SAMPLES are different among attached renderbuffers, or are non-zero if the attached images are a mix of renderbuffers and textures.\"\n      );\n    }\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { Engine } from \"../Engine\";\nimport { RenderBufferColorFormat } from \"./enums/RenderBufferColorFormat\";\nimport { TextureCubeFace } from \"./enums/TextureCubeFace\";\nimport { TextureFilterMode } from \"./enums/TextureFilterMode\";\nimport { TextureWrapMode } from \"./enums/TextureWrapMode\";\nimport { Texture } from \"./Texture\";\n\n/**\n * The texture is used for the output of color information in off-screen rendering.\n */\nexport class RenderColorTexture extends Texture {\n  /** @internal */\n  public _isCube: boolean = false;\n\n  private _format: RenderBufferColorFormat;\n  private _autoMipmap: boolean = false;\n\n  /**\n   * Render color texture format.\n   * @readonly\n   */\n  get format(): RenderBufferColorFormat {\n    return this._format;\n  }\n\n  /**\n   * Whether to automatically generate multi-level textures.\n   */\n  get autoGenerateMipmaps(): boolean {\n    return this._autoMipmap;\n  }\n\n  set autoGenerateMipmaps(value: boolean) {\n    this._autoMipmap = value;\n  }\n\n  /**\n   * Create RenderColorTexture.\n   * @param engine - Define the engine to use to render this color texture\n   * @param width - Texture width\n   * @param height - Texture height\n   * @param format - Texture format. default RenderBufferColorFormat.R8G8B8A8\n   * @param mipmap - Whether to use multi-level texture\n   * @param isCube - Whether it's cube texture\n   */\n  constructor(\n    engine: Engine,\n    width: number,\n    height: number,\n    format: RenderBufferColorFormat = RenderBufferColorFormat.R8G8B8A8,\n    mipmap: boolean = false,\n    isCube: boolean = false\n  ) {\n    super(engine);\n    const rhi = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = rhi.gl;\n    const isWebGL2: boolean = rhi.isWebGL2;\n\n    if (!Texture._supportRenderBufferColorFormat(format, rhi)) {\n      throw new Error(`RenderBufferColorFormat is not supported:${RenderBufferColorFormat[format]}`);\n    }\n\n    if (isCube && width !== height) {\n      throw new Error(\"The cube texture must have the same width and height\");\n    }\n    if (mipmap && !isWebGL2 && (!Texture._isPowerOf2(width) || !Texture._isPowerOf2(height))) {\n      Logger.warn(\n        \"non-power-2 texture is not supported for mipmap in WebGL1,and has automatically downgraded to non-mipmap\"\n      );\n      mipmap = false;\n    }\n\n    this._glTexture = gl.createTexture();\n    this._formatDetail = Texture._getRenderBufferColorFormatDetail(format, gl, isWebGL2);\n    this._isCube = isCube;\n    this._rhi = rhi;\n    this._target = isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n    this._mipmap = mipmap;\n    this._width = width;\n    this._height = height;\n    this._format = format;\n    this._mipmapCount = this._getMipmapCount();\n\n    this._initMipmap(isCube);\n\n    this.filterMode = TextureFilterMode.Bilinear;\n    this.wrapModeU = this.wrapModeV = TextureWrapMode.Clamp;\n  }\n\n  /**\n   * Get the pixel color buffer according to the specified cube face and area.\n   * @param face - You can choose which cube face to read if it's cube texture\n   * @param x - X coordinate of area start\n   * @param y - Y coordinate of area start\n   * @param width - Area width\n   * @param height - Area height\n   * @param out - Color buffer\n   */\n  public getPixelBuffer(\n    face: TextureCubeFace | null,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    out: ArrayBufferView\n  ): void {\n    super._getPixelBuffer(face, x, y, width, height, out);\n  }\n}\n","/**\n * Buffer usage.\n */\nexport enum BufferUsage {\n  /** The buffer content are intended to be specified once, and used many times */\n  Static,\n  /** The buffer contents are intended to be respecified repeatedly, and used many times */\n  Dynamic,\n  /** The buffer contents are intended to be specified once, and used at most a few times */\n  Stream\n}\n","/**\n * Vertex element format.\n */\nexport enum VertexElementFormat {\n  /** 32-bit float */\n  Float,\n  /** Two-dimensional 32-bit float */\n  Vector2,\n  /** Three-dimensional 32-bit float */\n  Vector3,\n  /** Four-dimensional 32-bit float */\n  Vector4,\n  /** Four-dimensional 8-bit integer,range is [-128,127] */\n  Byte4,\n  /** Four-dimensional 8-bit Unsigned integer, range is [0,255] */\n  UByte4,\n  /** Four-dimensional 8-bit Normalized integer, range is [-1,1] */\n  NormalizedByte4,\n  /** Four-dimensional 8-bit Normalized unsigned integer, range is [0,1] */\n  NormalizedUByte4,\n  /** Two-dimensional 16-bit integer, range is[-32768, 32767] */\n  Short2,\n  /** Two-dimensional 16-bit Unsigned integer, range is [0, 65535] */\n  UShort2,\n  /** Two-dimensional 16-bit Unsigned integer, range is [-1, 1] */\n  NormalizedShort2,\n  /** Two-dimensional 16-bit Normalized unsigned integer, range is [0, 1] */\n  NormalizedUShort2,\n  /** Four-dimensional 16-bit integer, range is [-32768, 32767] */\n  Short4,\n  /** Four-dimensional 16-bit Unsigned integer, range is [0, 65535] */\n  UShort4,\n  /** Four-dimensional 16-bit Normalized integer, range is[-1, 1] */\n  NormalizedShort4,\n  /** Four-dimensional 16-bit Normalized unsigned integer, range is [0, 1] */\n  NormalizedUShort4\n}\n","/**\n * Index format.\n */\nexport enum IndexFormat {\n  /** 8 bit */\n  UInt8,\n  /** 16 bit */\n  UInt16,\n  /** 32 bit */\n  UInt32\n}\n","import { BufferUsage } from \"./enums/BufferUsage\";\nimport { VertexElementFormat } from \"./enums/VertexElementFormat\";\nimport { DataType } from \"../base/Constant\";\nimport { IndexFormat } from \"./enums/IndexFormat\";\n\nexport interface ElementInfo {\n  size: number;\n  type: DataType;\n}\n\nexport class BufferUtil {\n  /**\n   * @internal\n   */\n  static _getGLBufferUsage(gl: WebGLRenderingContext, bufferUsage: BufferUsage): number {\n    switch (bufferUsage) {\n      case BufferUsage.Static:\n        return gl.STATIC_DRAW;\n      case BufferUsage.Dynamic:\n        return gl.DYNAMIC_DRAW;\n      case BufferUsage.Stream:\n        return gl.STREAM_DRAW;\n    }\n  }\n\n  static _getGLIndexType(indexFormat: IndexFormat): DataType {\n    switch (indexFormat) {\n      case IndexFormat.UInt8:\n        return DataType.UNSIGNED_BYTE;\n      case IndexFormat.UInt16:\n        return DataType.UNSIGNED_SHORT;\n      case IndexFormat.UInt32:\n        return DataType.UNSIGNED_INT;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static _getElementInfo(format: VertexElementFormat): ElementInfo {\n    let size: number;\n    let type: DataType;\n    switch (format) {\n      case VertexElementFormat.Float:\n        size = 1;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector2:\n        size = 2;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector3:\n        size = 3;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Vector4:\n        size = 4;\n        type = DataType.FLOAT;\n        break;\n      case VertexElementFormat.Byte4:\n        size = 4;\n        type = DataType.UNSIGNED_BYTE;\n        break;\n      case VertexElementFormat.Short2:\n        size = 2;\n        type = DataType.SHORT;\n        break;\n      case VertexElementFormat.Short4:\n        size = 4;\n        type = DataType.SHORT;\n        break;\n      case VertexElementFormat.UShort2:\n        size = 2;\n        type = DataType.UNSIGNED_SHORT;\n        break;\n      case VertexElementFormat.UShort4:\n        size = 4;\n        type = DataType.UNSIGNED_SHORT;\n        break;\n      default:\n        break;\n    }\n    return { size, type };\n  }\n}\n","/**\n * Buffer binding flag.\n */\nexport enum BufferBindFlag {\n  /** Vertex buffer binding flag */\n  VertexBuffer,\n  /** Index buffer binding flag */\n  IndexBuffer\n}\n","/**\n * Define update strategy when call bufferData/bufferSubData func.\n */\nexport enum SetDataOptions {\n  /** Can overwrite part of used buffer data and ensure correct rendering */\n  None,\n  /** Discard old buffer and create a new buffer, and won't affect the previous rendering */\n  Discard\n  ///** Need to ensure that the buffer data will not be overwritten, and won't interrupting rendering if setData immediately */\n  //NoOverwrite\n}\n","import { RefObject } from \"../asset/RefObject\";\nimport { Engine } from \"../Engine\";\nimport { HardwareRenderer } from \"../HardwareRenderer\";\nimport { BufferUtil } from \"./BufferUtil\";\nimport { BufferBindFlag } from \"./enums/BufferBindFlag\";\nimport { BufferUsage } from \"./enums/BufferUsage\";\nimport { SetDataOptions } from \"./enums/SetDataOptions\";\n\n/**\n * Buffer.\n */\nexport class Buffer extends RefObject {\n  _glBindTarget: number;\n  _glBufferUsage: number;\n  _nativeBuffer: WebGLBuffer;\n\n  private _hardwareRenderer: HardwareRenderer;\n  private _type: BufferBindFlag;\n  private _byteLength: number;\n  private _bufferUsage: BufferUsage;\n\n  /**\n   * Engine.\n   */\n  get engine(): Engine {\n    return this._engine;\n  }\n\n  /**\n   * Buffer binding flag.\n   */\n  get type(): BufferBindFlag {\n    return this._type;\n  }\n\n  /**\n   * Byte length.\n   */\n  get byteLength(): number {\n    return this._byteLength;\n  }\n\n  /**\n   * Buffer usage.\n   */\n  get bufferUsage(): BufferUsage {\n    return this._bufferUsage;\n  }\n\n  /**\n   * Create Buffer.\n   * @param engine - Engine\n   * @param type - Buffer binding flag\n   * @param byteLength - Byte length\n   * @param bufferUsage - Buffer usage\n   */\n  constructor(engine: Engine, type: BufferBindFlag, byteLength: number, bufferUsage?: BufferUsage);\n\n  /**\n   * Create Buffer.\n   * @param engine - Engine\n   * @param type - Buffer binding flag\n   * @param byteLength - Byte length\n   * @param bufferUsage - Buffer usage\n   */\n  constructor(engine: Engine, type: BufferBindFlag, data: ArrayBuffer | ArrayBufferView, bufferUsage?: BufferUsage);\n\n  constructor(\n    engine: Engine,\n    type: BufferBindFlag,\n    byteLengthOrData: number | ArrayBuffer | ArrayBufferView,\n    bufferUsage: BufferUsage = BufferUsage.Static\n  ) {\n    super(engine);\n    this._engine = engine;\n    this._type = type;\n    this._bufferUsage = bufferUsage;\n\n    const hardwareRenderer = engine._hardwareRenderer;\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = hardwareRenderer.gl;\n    const glBufferUsage = BufferUtil._getGLBufferUsage(gl, bufferUsage);\n    const glBindTarget = type === BufferBindFlag.VertexBuffer ? gl.ARRAY_BUFFER : gl.ELEMENT_ARRAY_BUFFER;\n\n    this._nativeBuffer = gl.createBuffer();\n    this._hardwareRenderer = hardwareRenderer;\n    this._glBufferUsage = glBufferUsage;\n    this._glBindTarget = glBindTarget;\n\n    this.bind();\n    if (typeof byteLengthOrData === \"number\") {\n      this._byteLength = byteLengthOrData;\n      gl.bufferData(glBindTarget, byteLengthOrData, glBufferUsage);\n    } else {\n      this._byteLength = byteLengthOrData.byteLength;\n      gl.bufferData(glBindTarget, byteLengthOrData, glBufferUsage);\n    }\n    gl.bindBuffer(glBindTarget, null);\n  }\n\n  /**\n   * Bind buffer.\n   */\n  bind(): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.bindBuffer(this._glBindTarget, this._nativeBuffer);\n  }\n\n  /**\n   * Set buffer data.\n   * @param data - Input buffer data\n   */\n  setData(data: ArrayBuffer | ArrayBufferView): void;\n\n  /**\n   * Set buffer data.\n   * @param data - Input buffer data\n   * @param bufferByteOffset - buffer byte offset\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * Set buffer data.\n   * @param data - Input buffer data\n   * @param bufferByteOffset - Buffer byte offset\n   * @param dataOffset - Buffer byte offset\n   * @param dataLength - Data length\n   */\n  setData(data: ArrayBuffer | ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength?: number): void;\n\n  /**\n   * Set buffer data.\n   * @param data - Input buffer data\n   * @param bufferByteOffset - Buffer byte offset\n   * @param dataOffset - Buffer byte offset\n   * @param dataLength - Data length\n   * @param options - Update strategy: None/Discard/NoOverwrite\n   */\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number,\n    dataOffset: number,\n    dataLength: number,\n    options: SetDataOptions\n  ): void;\n\n  setData(\n    data: ArrayBuffer | ArrayBufferView,\n    bufferByteOffset: number = 0,\n    dataOffset: number = 0,\n    dataLength?: number,\n    options: SetDataOptions = SetDataOptions.None\n  ): void {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n    const glBindTarget: number = this._glBindTarget;\n    this.bind();\n\n    if (options === SetDataOptions.Discard) {\n      gl.bufferData(glBindTarget, this._byteLength, this._glBufferUsage);\n    }\n\n    // TypeArray is BYTES_PER_ELEMENT, unTypeArray is 1\n    const byteSize = (<Uint8Array>data).BYTES_PER_ELEMENT || 1;\n    const dataByteLength = dataLength ? byteSize * dataLength : data.byteLength;\n\n    if (dataOffset !== 0 || dataByteLength < data.byteLength) {\n      const isArrayBufferView = (<ArrayBufferView>data).byteOffset !== undefined;\n      if (isWebGL2 && isArrayBufferView) {\n        gl.bufferSubData(glBindTarget, bufferByteOffset, <ArrayBufferView>data, dataOffset, dataByteLength / byteSize);\n      } else {\n        const subData = new Uint8Array(\n          isArrayBufferView ? (<ArrayBufferView>data).buffer : <ArrayBuffer>data,\n          dataOffset * byteSize,\n          dataByteLength\n        );\n        gl.bufferSubData(glBindTarget, bufferByteOffset, subData);\n      }\n    } else {\n      gl.bufferSubData(glBindTarget, bufferByteOffset, data);\n    }\n    gl.bindBuffer(glBindTarget, null);\n  }\n\n  /**\n   * Get buffer data.\n   * @param data - Output buffer data\n   */\n  getData(data: ArrayBufferView): void;\n\n  /**\n   * Get buffer data.\n   * @param data - Output buffer data\n   * @param bufferByteOffset - Buffer byte offset\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number): void;\n\n  /**\n   * Get buffer data.\n   * @param data - Output buffer data\n   * @param bufferByteOffset - Buffer byte offset\n   * @param dataOffset - Output data offset\n   * @param dataLength - Output data length\n   */\n  getData(data: ArrayBufferView, bufferByteOffset: number, dataOffset: number, dataLength: number): void;\n\n  getData(data: ArrayBufferView, bufferByteOffset: number = 0, dataOffset: number = 0, dataLength?: number): void {\n    const isWebGL2: boolean = this._hardwareRenderer.isWebGL2;\n\n    if (isWebGL2) {\n      const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n      this.bind();\n      gl.getBufferSubData(this._glBindTarget, bufferByteOffset, data, dataOffset, dataLength);\n    } else {\n      throw \"Buffer is write-only on WebGL1.0 platforms.\";\n    }\n  }\n\n  /**\n   * @override\n   * Destroy.\n   */\n  _onDestroy() {\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.deleteBuffer(this._nativeBuffer);\n    this._nativeBuffer = null;\n    this._hardwareRenderer = null;\n  }\n\n  /**\n   * @deprecated\n   */\n  resize(dataLength: number) {\n    this.bind();\n    const gl: WebGLRenderingContext & WebGL2RenderingContext = this._hardwareRenderer.gl;\n    gl.bufferData(this._glBindTarget, dataLength, this._glBufferUsage);\n    this._byteLength = dataLength;\n  }\n}\n","/**\n * Primitive topology.\n */\nexport enum PrimitiveTopology {\n  /** Draws a single dot */\n  Points = 0,\n  /** Draws a line between a pair of vertices */\n  Lines = 1,\n  /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\n  LineLoop = 2,\n  /** Draws a straight line to the next vertex. */\n  LineStrip = 3,\n  /** Draws a triangle for a group of three vertices */\n  Triangles = 4,\n  /** Draws a triangle strip */\n  TriangleStrip = 5,\n  /** Draws a triangle fan */\n  TriangleFan = 6\n}\n","import { IndexFormat } from \"./enums/IndexFormat\";\nimport { Buffer } from \"./Buffer\";\n\n/**\n * Index buffer binding.\n */\nexport class IndexBufferBinding {\n  /** @internal */\n  _buffer: Buffer;\n  /** @internal */\n  _format: IndexFormat;\n\n  /**\n   * Index buffer.\n   */\n  get buffer(): Buffer {\n    return this._buffer;\n  }\n\n  /**\n   * Index buffer format.\n   */\n  get format(): IndexFormat {\n    return this._format;\n  }\n\n  /**\n   * Create index buffer binding.\n   * @param buffer - Index buffer\n   * @param format - Index buffer format\n   */\n  constructor(buffer: Buffer, format: IndexFormat) {\n    this._buffer = buffer;\n    this._format = format;\n  }\n}\n","import { Buffer } from \"./Buffer\";\n\n/**\n * Vertex buffer binding.\n */\nexport class VertexBufferBinding {\n  /** @internal */\n  _buffer: Buffer;\n  /** @internal */\n  _stride: number;\n\n  /**\n   * Vertex buffer.\n   */\n  get buffer(): Buffer {\n    return this._buffer;\n  }\n\n  /**\n   * Vertex buffer stride.\n   */\n  get stride(): number {\n    return this._stride;\n  }\n\n  /**\n   * Create vertex buffer.\n   * @param buffer - Vertex buffer\n   * @param stride - Vertex buffer stride\n   */\n  constructor(buffer: Buffer, stride: number) {\n    this._buffer = buffer;\n    this._stride = stride;\n  }\n}\n","import { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { RefObject } from \"../asset/RefObject\";\nimport { Engine } from \"../Engine\";\nimport { Buffer } from \"../graphic/Buffer\";\nimport { Shader } from \"../shader/Shader\";\nimport { ShaderMacro } from \"../shader/ShaderMacro\";\nimport { ShaderMacroCollection } from \"../shader/ShaderMacroCollection\";\nimport { ShaderProgram } from \"../shader/ShaderProgram\";\nimport { BufferUtil } from \"./BufferUtil\";\nimport { IndexFormat } from \"./enums/IndexFormat\";\nimport { VertexElementFormat } from \"./enums/VertexElementFormat\";\nimport { IndexBufferBinding } from \"./IndexBufferBinding\";\nimport { SubPrimitive } from \"./SubPrimitive\";\nimport { VertexBufferBinding } from \"./VertexBufferBinding\";\nimport { VertexElement } from \"./VertexElement\";\n\n/**\n * @private\n */\nexport class Primitive extends RefObject {\n  private static _uvMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_UV\");\n  private static _normalMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_NORMAL\");\n  private static _tangentMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_TANGENT\");\n  private static _vertexColorMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_VERTEXCOLOR\");\n  private static _vertexAlphaMacro: ShaderMacro = Shader.getMacroByName(\"O3_HAS_VERTEXALPHA\");\n\n  /** Primitive name */\n  name: string;\n  /** Instanced count, disable instanced drawing when set zero */\n  instanceCount: number = 0;\n\n  /** @internal */\n  _macroCollection: ShaderMacroCollection = new ShaderMacroCollection(); // CM&SS:temp\n  _vertexElementMap: object = {};\n  _glIndexType: number;\n  _platformPrimitive: IPlatformPrimitive;\n\n  private _vertexBufferBindings: VertexBufferBinding[] = [];\n  private _indexBufferBinding: IndexBufferBinding = null;\n  private _vertexElements: VertexElement[] = [];\n\n  /**\n   *\n   */\n  get vertexBufferBindings(): Readonly<VertexBufferBinding[]> {\n    return this._vertexBufferBindings;\n  }\n\n  /**\n   * Vertex element collection.\n   */\n  get vertexElements(): Readonly<VertexElement[]> {\n    return this._vertexElements;\n  }\n\n  /**\n   * Index buffer binding.\n   */\n  get indexBufferBinding(): IndexBufferBinding {\n    return this._indexBufferBinding;\n  }\n\n  targets: any[] = [];\n\n  constructor(engine: Engine, name?: string) {\n    super(engine);\n    this.name = name;\n    this._platformPrimitive = this._engine._hardwareRenderer.createPlatformPrimitive(this);\n  }\n\n  /**\n   * Set vertex buffer binding.\n   * @param vertexBuffer - Vertex buffer\n   * @param stride - Vertex buffer stride\n   * @param firstIndex - Vertex buffer binding index, default is 0\n   */\n  setVertexBufferBinding(vertexBuffer: Buffer, stride: number, firstIndex?: number): void;\n\n  /**\n   * Set vertex buffer binding.\n   * @param vertexBufferBinding - Vertex buffer binding\n   * @param firstIndex - Vertex buffer binding index, default is 0\n   */\n  setVertexBufferBinding(vertexBufferBinding: VertexBufferBinding, firstIndex?: number): void;\n\n  setVertexBufferBinding(\n    bufferOrBinding: Buffer | VertexBufferBinding,\n    strideOrFirstIndex: number = 0,\n    firstIndex: number = 0\n  ): void {\n    let binding = <VertexBufferBinding>bufferOrBinding;\n    const isBinding = binding.buffer !== undefined;\n    isBinding || (binding = new VertexBufferBinding(<Buffer>bufferOrBinding, strideOrFirstIndex));\n\n    const bindings = this._vertexBufferBindings;\n    bindings.length <= firstIndex && (bindings.length = firstIndex + 1);\n    this._setVertexBufferBinding(isBinding ? strideOrFirstIndex : firstIndex, binding);\n  }\n\n  /**\n   * Set vertex buffer binding.\n   * @param bufferBindings - Vertex buffer binding collection\n   * @param firstIndex - First buffer binding index\n   */\n  setVertexBufferBindings(bufferBindings: VertexBufferBinding[], firstIndex: number = 0): void {\n    const bindings = this._vertexBufferBindings;\n    const count = bufferBindings.length;\n    const needLength = firstIndex + count;\n    bindings.length < needLength && (bindings.length = needLength);\n    for (let i = 0; i < count; i++) {\n      this._setVertexBufferBinding(firstIndex + i, bufferBindings[i]);\n    }\n  }\n\n  /**\n   * Set index buffer.\n   * @param buffer - Index buffer\n   * @param format - Index buffer format\n   */\n  setIndexBufferBinding(buffer: Buffer, format: IndexFormat): void;\n\n  /**\n   * Set index buffer.\n   * @param bufferBinding - Index buffer binding\n   */\n  setIndexBufferBinding(bufferBinding: IndexBufferBinding): void;\n\n  setIndexBufferBinding(bufferOrBinding: Buffer | IndexBufferBinding, format?: IndexFormat): void {\n    let binding = <IndexBufferBinding>bufferOrBinding;\n    const isBinding = binding.buffer !== undefined;\n    isBinding || (binding = new IndexBufferBinding(<Buffer>bufferOrBinding, format));\n    this._indexBufferBinding = binding;\n    this._glIndexType = BufferUtil._getGLIndexType(binding.format);\n  }\n\n  /**\n   * Set vertex elements.\n   * @param elements - Vertex element collection\n   */\n  setVertexElements(elements: VertexElement[]): void {\n    this._clearVertexElements();\n    for (let i = 0, n = elements.length; i < n; i++) {\n      this._addVertexElement(elements[i]);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _draw(shaderProgram: ShaderProgram, subPrimitive: SubPrimitive): void {\n    this._platformPrimitive.draw(shaderProgram, subPrimitive);\n  }\n\n  /**\n   * @override\n   */\n  _addRefCount(value: number): void {\n    super._addRefCount(value);\n    const vertexBufferBindings = this._vertexBufferBindings;\n    for (let i = 0, n = vertexBufferBindings.length; i < n; i++) {\n      vertexBufferBindings[i]._buffer._addRefCount(value);\n    }\n  }\n\n  /**\n   * @override\n   * Destroy.\n   */\n  _onDestroy() {\n    this._vertexBufferBindings = null;\n    this._indexBufferBinding = null;\n    this._vertexElements = null;\n    this._vertexElementMap = null;\n    this._platformPrimitive.destroy();\n  }\n\n  private _clearVertexElements(): void {\n    this._vertexElements.length = 0;\n    const vertexElementMap = this._vertexElementMap;\n    for (var k in vertexElementMap) {\n      delete vertexElementMap[k];\n    }\n\n    this._macroCollection.disable(Primitive._uvMacro);\n    this._macroCollection.disable(Primitive._normalMacro);\n    this._macroCollection.disable(Primitive._tangentMacro);\n    this._macroCollection.disable(Primitive._vertexColorMacro);\n    this._macroCollection.disable(Primitive._vertexAlphaMacro);\n  }\n\n  private _addVertexElement(element: VertexElement): void {\n    const { semantic, format } = element;\n    this._vertexElementMap[semantic] = element;\n    this._vertexElements.push(element);\n\n    // init primitive shaderData\n    switch (semantic) {\n      case \"TEXCOORD_0\":\n        this._macroCollection.enable(Primitive._uvMacro);\n        break;\n      case \"NORMAL\":\n        this._macroCollection.enable(Primitive._normalMacro);\n        break;\n      case \"TANGENT\":\n        this._macroCollection.enable(Primitive._tangentMacro);\n        break;\n      case \"COLOR_0\":\n        this._macroCollection.enable(Primitive._vertexColorMacro);\n        if (format === VertexElementFormat.Vector4) this._macroCollection.enable(Primitive._vertexAlphaMacro);\n        break;\n    }\n  }\n\n  private _setVertexBufferBinding(index: number, binding: VertexBufferBinding): void {\n    if (this._getRefCount() > 0) {\n      const lastBinding = this._vertexBufferBindings[index];\n      lastBinding && lastBinding._buffer._addRefCount(-1);\n      binding._buffer._addRefCount(1);\n    }\n    this._vertexBufferBindings[index] = binding;\n  }\n}\n","import { VertexElementFormat } from \"./enums/VertexElementFormat\";\nimport { ElementInfo, BufferUtil } from \"./BufferUtil\";\n\n/**\n * Vertex element.\n */\nexport class VertexElement {\n  public readonly normalized = false;\n\n  _glElementInfo: ElementInfo;\n\n  private _semantic: string;\n  private _offset: number;\n  private _format: VertexElementFormat;\n  private _bindingIndex: number;\n  private _instanceStepRate: number;\n\n  /**\n   * Vertex semantic.\n   */\n  get semantic(): string {\n    return this._semantic;\n  }\n\n  /**\n   * Vertex data byte offset.\n   */\n  get offset(): number {\n    return this._offset;\n  }\n\n  /**\n   * Vertex data format.\n   */\n  get format(): VertexElementFormat {\n    return this._format;\n  }\n\n  /**\n   * Vertex buffer binding index.\n   */\n  get bindingIndex(): number {\n    return this._bindingIndex;\n  }\n\n  /**\n   * Instance cadence, the number of instances drawn for each vertex in the buffer, non-instance elements must be 0.\n   */\n  get instanceStepRate(): number {\n    return this._instanceStepRate;\n  }\n\n  /**\n   * Create vertex element.\n   * @param semantic - Input vertex semantic\n   * @param offset - Vertex data byte offset\n   * @param format - Vertex data format\n   * @param bindingIndex - Vertex buffer binding index\n   * @param instanceStepRate - Instance cadence, the number of instances drawn for each vertex in the buffer, non-instance elements must be 0.\n   */\n  constructor(\n    semantic: string,\n    offset: number,\n    format: VertexElementFormat,\n    bindingIndex: number,\n    instanceStepRate: number = 0\n  ) {\n    this._semantic = semantic;\n    this._offset = offset;\n    this._format = format;\n    this._bindingIndex = bindingIndex;\n    this._glElementInfo = BufferUtil._getElementInfo(this.format);\n    this._instanceStepRate = Math.floor(instanceStepRate);\n  }\n\n  /**\n   * @deprecated\n   */\n  get elementInfo(): ElementInfo {\n    return this._glElementInfo;\n  }\n}\n","import { PrimitiveTopology } from \"./enums/PrimitiveTopology\";\n\n/**\n * Sub primitive.\n */\nexport class SubPrimitive {\n  /** Start drawing offset */\n  start: number;\n  /** Drawing count */\n  count: number;\n  /** Drawing topology */\n  topology: PrimitiveTopology;\n\n  /**\n   * Create sub primitive.\n   * @param start - Start drawing offset\n   * @param count - Drawing count\n   * @param topology - Drawing topology\n   */\n  constructor(start: number = 0, count: number = 0, topology: PrimitiveTopology = PrimitiveTopology.Triangles) {\n    this.start = start;\n    this.count = count;\n    this.topology = topology;\n  }\n}\n","import { Matrix, Quaternion, Vector3, Vector4 } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { Entity } from \"../Entity\";\nimport { Renderer } from \"../Renderer\";\nimport { Texture2D } from \"../texture/Texture2D\";\n\ninterface IUvRect {\n  u: number;\n  v: number;\n  width: number;\n  height: number;\n}\n\ninterface IRect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\ninterface IPositionQuad {\n  leftTop: Vector3;\n  leftBottom: Vector3;\n  rightTop: Vector3;\n  rightBottom: Vector3;\n}\n\n/**\n * Sprite renderer.\n * @class\n */\nexport class SpriteRenderer extends Renderer {\n  private static _tempVec40: Vector4 = new Vector4();\n  private static _tempVec41: Vector4 = new Vector4();\n  private static _tempVec42: Vector4 = new Vector4();\n  private static _tempVec43: Vector4 = new Vector4();\n\n  private _uvRect: IUvRect;\n  private _worldSize: number[] = [];\n  private _positionQuad: IPositionQuad;\n  private _rotationAngle: number = 0;\n  private _anchor: number[];\n  protected _texture: Texture2D;\n  protected _rect: IRect;\n  private _worldSizeFactor: number;\n\n  /**\n   * Render mode: 2D or 3D, default is 2D.\n   */\n  renderMode: string = \"2D\";\n  /**\n   * Rendering color for the Sprite graphic.\n   */\n  public tintColor: Vector4 = new Vector4(1, 1, 1, 1);\n  public transformMatrix: Matrix;\n\n  /**\n   * Constructor of SpriteRenderer.\n   * @param {Entity} entity\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    this._worldSizeFactor = 100;\n\n    this.setTexture(undefined);\n    this.setRect(undefined);\n    this.setAnchor(undefined);\n    this.setUvRect();\n    this.setWorldSize();\n\n    this._positionQuad = {\n      leftTop: new Vector3(),\n      leftBottom: new Vector3(),\n      rightTop: new Vector3(),\n      rightBottom: new Vector3()\n    };\n  }\n\n  set texture(v) {\n    this.setTexture(v);\n    this.setRect();\n    this.setUvRect();\n    this.setWorldSize();\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  set anchor(v) {\n    this._anchor = v || [0.5, 0.5];\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  set rect(v) {\n    this.setRect(v);\n    this.setUvRect();\n    this.setWorldSize();\n  }\n\n  get rect() {\n    return this._rect;\n  }\n\n  protected setTexture(texture) {\n    // TODO: compatible resource\n    if (texture && texture.asset) {\n      texture = texture.asset;\n    }\n\n    this._texture = texture;\n  }\n\n  /**\n   * Angle of rotation.\n   * @member {Vector4}\n   */\n  get rotationAngle() {\n    return this._rotationAngle;\n  }\n\n  set rotationAngle(v) {\n    this._rotationAngle = v;\n  }\n\n  protected setRect(rect?) {\n    let rectObject;\n    try {\n      if (rect) {\n        rectObject = JSON.parse(rect);\n      }\n    } catch (error) {\n      Logger.warn(\"Rect is not valid JSON format\");\n    }\n\n    this._rect = rect || {\n      x: 0,\n      y: 0,\n      width: this._texture?.width ?? 0,\n      height: this._texture?.height ?? 0\n    };\n  }\n\n  protected setAnchor(anchor) {\n    this._anchor = anchor || [0.5, 0.5];\n  }\n\n  protected setWorldSize() {\n    const { _worldSizeFactor } = this;\n    this._worldSize = [this._rect.width / _worldSizeFactor, this._rect.height / _worldSizeFactor];\n  }\n\n  protected setUvRect() {\n    let w, h;\n\n    if (this._texture) {\n      w = this._texture.width;\n      h = this._texture.height;\n    } else {\n      w = this._rect.width;\n      h = this._rect.height;\n    }\n    this._uvRect = {\n      u: this._rect.x / w,\n      v: this._rect.y / h,\n      width: this._rect.width / w,\n      height: this._rect.height / h\n    };\n  }\n\n  /**\n   * Refresh render data and push to pipeline.\n   * @param {Camera} camera\n   */\n  render(camera: Camera) {\n    this._updatePositionQuad(camera);\n    this._transformByMatrix();\n    camera._renderPipeline.pushSprite(\n      this,\n      this._positionQuad,\n      this._uvRect,\n      this.tintColor,\n      this.texture,\n      this.renderMode,\n      camera\n    );\n  }\n\n  _transformByMatrix() {\n    if (!this.transformMatrix) return;\n    const matrix = this.transformMatrix;\n\n    let temp: Vector3 = this._positionQuad.leftTop;\n    const leftTop: Vector4 = SpriteRenderer._tempVec40;\n    leftTop.setValue(temp.x, temp.y, temp.z, 1);\n\n    temp = this._positionQuad.leftBottom;\n    const leftBottom: Vector4 = SpriteRenderer._tempVec41;\n    leftBottom.setValue(temp.x, temp.y, temp.z, 1);\n\n    temp = this._positionQuad.rightTop;\n    const rightTop: Vector4 = SpriteRenderer._tempVec42;\n    rightTop.setValue(temp.x, temp.y, temp.z, 1);\n\n    temp = this._positionQuad.rightBottom;\n    const rightBottom: Vector4 = SpriteRenderer._tempVec43;\n    rightBottom.setValue(temp.x, temp.y, temp.z, 1);\n\n    Vector4.transform(leftTop, matrix, leftTop);\n    Vector4.transform(leftBottom, matrix, leftBottom);\n    Vector4.transform(rightTop, matrix, rightTop);\n    Vector4.transform(rightBottom, matrix, rightBottom);\n\n    this._positionQuad.leftTop.setValue(leftTop.x, leftTop.y, leftTop.z);\n    this._positionQuad.leftBottom.setValue(leftBottom.x, leftBottom.y, leftBottom.z);\n    this._positionQuad.rightTop.setValue(rightTop.x, rightTop.y, rightTop.z);\n    this._positionQuad.rightBottom.setValue(rightBottom.x, rightBottom.y, rightBottom.z);\n  }\n\n  /**\n   * Update position.\n   * @param {Camera} camera\n   * @private\n   */\n  _updatePositionQuad(camera: Camera) {\n    if (this.renderMode === \"2D\") {\n      const m = camera.viewMatrix.elements;\n      const vx = new Vector3(m[0], m[4], m[8]);\n      const vy = new Vector3(m[1], m[5], m[9]);\n      //-- center pos\n      const c: Vector3 = this.entity.worldPosition.clone();\n      const s = this._worldSize;\n      const ns = this.entity.scale;\n\n      vx.scale(s[0] * ns.x);\n      vy.scale(s[1] * ns.y);\n\n      if (this._rotationAngle !== 0) {\n        const vz = new Vector3(m[2], m[6], m[10]);\n\n        const rotation: Quaternion = new Quaternion();\n        Quaternion.rotationAxisAngle(vz, this._rotationAngle, rotation);\n\n        Vector3.transformByQuat(vx, rotation, vx);\n        Vector3.transformByQuat(vy, rotation, vy);\n      }\n\n      const cx: Vector3 = new Vector3();\n      const cy: Vector3 = new Vector3();\n      Vector3.scale(vx, (this.anchor[0] - 0.5) * 2, cx);\n      Vector3.scale(vy, (this.anchor[1] - 0.5) * 2, cy);\n\n      c.subtract(cx).add(cy);\n\n      //-- quad pos\n      const leftTop: Vector3 = this._positionQuad.leftTop;\n      Vector3.subtract(c, vx, leftTop);\n      leftTop.add(vy);\n\n      const leftBottom: Vector3 = this._positionQuad.leftBottom;\n      Vector3.subtract(c, vx, leftBottom);\n      leftBottom.subtract(vy);\n\n      const rightBottom: Vector3 = this._positionQuad.rightBottom;\n      Vector3.add(c, vx, rightBottom);\n      rightBottom.subtract(vy);\n\n      const rightTop: Vector3 = this._positionQuad.rightTop;\n      Vector3.add(c, vx, rightTop);\n      rightTop.add(vy);\n    } else {\n      // TODO: 3D\n    }\n  }\n}\n","/**\n * Animation wrap mode.\n * @readonly\n */\nexport enum WrapMode {\n  /** Play once */\n  ONCE = 0,\n  /** Loop play */\n  LOOP = 1\n  // FOREVER: 2,\n  // PINGPONG: 3\n}\n\n/**\n * Animation event type.\n * @readonly\n */\nexport enum AnimationEventType {\n  /** Triggered when the animation over if the wrapMode === WrapMode.ONCE */\n  FINISHED = 0,\n  /** Triggered when the animation over if the wrapMode === WrapMode.LOOP */\n  LOOP_END = 1,\n  /** Triggered when the animation plays to the frame */\n  FRAME_EVENT = 2\n}\n\n/**\n * Animation interpolation method.\n * @readonly\n */\nexport enum InterpolationType {\n  /** Linear interpolation */\n  LINEAR = 0,\n  /** Cubic spline interpolation */\n  CUBICSPLINE = 1,\n  /** Stepped interpolation */\n  STEP = 2\n}\n","import { EngineObject } from \"../base/EngineObject\";\nimport { InterpolationType } from \"./AnimationConst\";\nimport { IChannel, ISample, List, Value } from \"./types\";\n\nexport enum TagetType {\n  position = 0,\n  rotation = 1,\n  scale = 2,\n  other = 3\n}\n\n/**\n * Data for an animation, set of Samples and Channels.\n * @extends AssetObject\n */\nexport class AnimationClip extends EngineObject {\n  private static _tagetTypeMap: Object = {\n    position: TagetType.position,\n    rotation: TagetType.rotation,\n    scale: TagetType.scale\n  };\n\n  public duration: number;\n\n  public durationIndex: number;\n\n  public samplers: ISample[];\n\n  public channels: IChannel[];\n  /**\n   * @constructor\n   * @param name - The AnimationClip's name.\n   */\n  constructor(public readonly name: string) {\n    super(null);\n\n    this.samplers = [];\n\n    this.channels = [];\n  }\n\n  /**\n   * Add sampler to samplers of the AnimationClip.\n   * @param _input - The index of an accessor containing keyframe input values.\n   * @param _output - The index of an accessor containing keyframe output values.\n   * @param _outputSize - The length of the output values.\n   * @param _interpolation - Interpolation algorithm.\t\n   */\n  public addSampler(\n    _input: List,\n    _output: List,\n    _outputSize: number,\n    _interpolation: InterpolationType = InterpolationType.LINEAR\n  ) {\n    // FIXME - adapt old error animation export file\n    if (_interpolation === InterpolationType.CUBICSPLINE) {\n      if (_outputSize <= 4) {\n        _interpolation = InterpolationType.LINEAR;\n      } else {\n        _outputSize /= 3;\n      }\n    }\n\n    // The sampler object, defines an curve\n    const sampler = {\n      input: _input,\n      output: _output,\n      outputSize: _outputSize,\n      interpolation: _interpolation\n    };\n    this.samplers.push(sampler);\n  }\n\n  /**\n   * Add channel to channels of the AnimationClip.\n   * @param samplerIndex - The sampler's index in channel's sampler property.\n   * @param targetID - Entity name.\n   * @param targetPath - Transform property name: position, rotation, scale.\n   */\n  public addChannel(samplerIndex: number, targetID: string, targetPath: string) {\n    const bindSampler = this.samplers[samplerIndex];\n\n    let tagetType: TagetType = AnimationClip._tagetTypeMap[targetPath];\n    // The channel object, bind a Sample to an Object property.\n    const channel = {\n      sampler: bindSampler,\n      target: {\n        id: targetID,\n        path: targetPath,\n        pathType: tagetType ?? TagetType.other\n      }\n    };\n\n    this.channels.push(channel);\n  }\n\n  /**\n   * Get length of the channel.\n   * @return {number} Number of channels.\n   */\n  public getChannelCount(): number {\n    return this.channels.length;\n  }\n\n  /**\n   * Get the object which the channel acting on.\n   * @return Channel objects.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public getChannelObject(channelIndex: number) {\n    return this.channels[channelIndex];\n  }\n\n  /**\n   * Get frame count of the channel.\n   * @return Channel frame count.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public getFrameCount(channelIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    return sampler.input.length;\n  }\n\n  /**\n   * Get frame time of the channel by channelIndex and frameIndex.\n   * @return channel frame time\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   * @param frameIndex - The keyframe's index in sampler.input.\n   */\n  public getFrameTime(channelIndex: number, frameIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    return sampler.input[frameIndex];\n  }\n\n  /**\n   * Get length of the channel.\n   * @return channel time length\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public getChannelTimeLength(channelIndex: number): number {\n    const sampler = this.channels[channelIndex].sampler;\n    const frameCount = sampler.input.length;\n    return sampler.input[frameCount - 1];\n  }\n\n  /**\n   * Get the channel value.\n   * @return channel value\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public createChannelValue(channelIndex: number): number | Float32Array | number[] {\n    const sampler = this.channels[channelIndex].sampler;\n\n    return new Float32Array(sampler.outputSize);\n  }\n\n  /**\n   * @private\n   * @param outValue - The output value after interpolation.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   * @param frameIndex - The keyframe's index in sampler.input.\n   * @param nextFrameIndex - The next keyframe's index in sampler.input.\n   * @param alpha - The weight of the next keyframe in interpolation algorithm.\n   */\n  public evaluate(\n    outValue: Value,\n    channelIndex: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ): Value {\n    const channel = this.channels[channelIndex];\n    const output = channel.sampler.output;\n    const outputSize = channel.sampler.outputSize;\n\n    switch (channel.sampler.interpolation) {\n      case InterpolationType.CUBICSPLINE:\n        this.evaluateCubicSpline(outValue, output, outputSize, frameIndex, nextFrameIndex, alpha);\n        break;\n      case InterpolationType.LINEAR:\n        this.evaluateLinear(outValue, output, outputSize, frameIndex, nextFrameIndex, alpha);\n        break;\n    }\n\n    return outValue;\n  }\n\n  public evaluateCubicSpline(\n    outValue: Value,\n    output: List,\n    outputSize: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ) {\n    const squared = alpha * alpha;\n    const cubed = alpha * squared;\n    const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n    const part2 = -2.0 * cubed + 3.0 * squared;\n    const part3 = cubed - 2.0 * squared + alpha;\n    const part4 = cubed - squared;\n\n    for (let i = outputSize; i >= 0; i--) {\n      const t1 = output[frameIndex * outputSize * 3 + i];\n      const v1 = output[frameIndex * outputSize * 3 + outputSize + i];\n      const t2 = output[frameIndex * outputSize * 3 + outputSize * 2 + i];\n      const v2 = output[nextFrameIndex * outputSize * 3 + outputSize + i];\n\n      outValue[i] = v1 * part1 + v2 * part2 + t1 * part3 + t2 * part4;\n    }\n  }\n\n  public evaluateLinear(\n    outValue: Value,\n    output: List,\n    outputSize: number,\n    frameIndex: number,\n    nextFrameIndex: number,\n    alpha: number\n  ) {\n    switch (outputSize) {\n      case 1:\n        outValue[0] = output[frameIndex] * (1 - alpha) + output[nextFrameIndex] * alpha;\n        break;\n      case 4:\n        // const start = new Quaternion(\n        //   output[frameIndex * outputSize],\n        //   output[frameIndex * outputSize + 1],\n        //   output[frameIndex * outputSize + 2],\n        //   output[frameIndex * outputSize + 3]\n        // );\n        // const end = new Quaternion(\n        //   output[nextFrameIndex * outputSize],\n        //   output[nextFrameIndex * outputSize + 1],\n        //   output[nextFrameIndex * outputSize + 2],\n        //   output[nextFrameIndex * outputSize + 3]\n        // );\n        // Quaternion.slerp(start, end, alpha, <Quaternion>outValue);\n        this._quaSlerp(outValue, output, frameIndex * outputSize, output, nextFrameIndex * outputSize, alpha);\n        break;\n      default:\n        for (let i = outputSize; i >= 0; i--) {\n          outValue[i] =\n            output[frameIndex * outputSize + i] * (1 - alpha) + output[nextFrameIndex * outputSize + i] * alpha;\n        }\n        break;\n    } // End of switch\n  }\n\n  private _quaSlerp(out, a, aIndex, b, bIndex, t) {\n    // Benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0 + aIndex],\n      ay = a[1 + aIndex],\n      az = a[2 + aIndex],\n      aw = a[3 + aIndex];\n    let bx = b[0 + bIndex],\n      by = b[1 + bIndex],\n      bz = b[2 + bIndex],\n      bw = b[3 + bIndex];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // Calc cosine.\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // Adjust signs (if necessary).\n    if (cosom < 0.0) {\n      cosom = -cosom;\n      bx = -bx;\n      by = -by;\n      bz = -bz;\n      bw = -bw;\n    }\n    // Calculate coefficients.\n    if (1.0 - cosom > 0.000001) {\n      // Standard case (slerp)\n      omega = Math.acos(cosom);\n      sinom = Math.sin(omega);\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\n      scale1 = Math.sin(t * omega) / sinom;\n    } else {\n      // The \"from\" quaternions and the \"to\" quaternions are very close, so we can do a linear interpolation.\n      scale0 = 1.0 - t;\n      scale1 = t;\n    }\n    // Calculate final values.\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n  }\n}\n","import { Event } from \"../base/Event\";\nimport { EventDispatcher } from \"../base/EventDispatcher\";\nimport { Logger } from \"../base/Logger\";\nimport { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { SkinnedMeshRenderer } from \"../mesh/SkinnedMeshRenderer\";\nimport { AnimationClip } from \"./AnimationClip\";\nimport { AnimationEventType, WrapMode } from \"./AnimationConst\";\nimport { AnimationOptions, IChannelState, IChannelTarget } from \"./types\";\n\n/**\n * AnimationClip playback.\n * @extends EventDispatcher\n * @see class AnimationClip\n * @private\n */\nexport class AnimationLayer extends EventDispatcher {\n  /**\n   * @return Whether the AnimationClip is playing.\n   */\n  get isPlaying(): boolean {\n    return this._animClip && this._isPlaying;\n  }\n\n  public layerWeight: number;\n\n  public mixTagetLayer: AnimationLayer;\n\n  public isFading: number;\n\n  public fadeDeltaTime: number;\n\n  public crossFadeDuration: number;\n\n  public fadeDuration: number;\n\n  public crossFadeDeltaTime: number;\n\n  public isMixLayer: boolean;\n\n  public hasMixLayer: boolean;\n\n  public mixEntity: Entity;\n\n  private _activedEvents: Event[];\n\n  private _animClip: AnimationClip;\n\n  private _isPlaying: boolean;\n\n  private _wrapMode: WrapMode;\n\n  private _channelStates: IChannelState[];\n\n  private _animClipLength: number;\n\n  private _frameEvents: any[];\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super(null);\n\n    this.layerWeight = 1.0;\n\n    this._activedEvents = [];\n  }\n\n  /**\n   * @param nextAnimClip - anim clip to playback next.\n   * @param rootEntity - The root entity of the skeleton animation.\n   * @return Whether can mix with current AnimationClip.\n   */\n  public canMix(nextAnimClip: AnimationClip, rootEntity: Entity): boolean {\n    if (!this._animClip || !this._isPlaying || this.isMixLayer || this.isFading) {\n      return false;\n    }\n\n    if (this._animClip.getChannelCount() !== nextAnimClip.getChannelCount()) {\n      return false;\n    }\n\n    const count = this._animClip.getChannelCount();\n    for (let i = count - 1; i >= 0; i--) {\n      const curChannel = this._animClip.getChannelObject(i);\n      const curTargetObject = this._findChannelTarget(rootEntity, curChannel.target);\n\n      const nextChannel = nextAnimClip.getChannelObject(i);\n      const nextTargetObject = this._findChannelTarget(rootEntity, nextChannel.target);\n\n      if (curTargetObject !== nextTargetObject) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Mix animClip with target animationLayer.\n   * @param animClip - AnimationClip to be mixed.\n   * @param targetLayer - Target animationLayer.\n   * @param rootEntity - The root entity of the skeleton animation.\n   * @param mixEntity - The entiity to be mixed.\n   * @param options - The play options when playing AnimationClip.\n   */\n  public mix(\n    animClip: AnimationClip,\n    targetLayer: AnimationLayer,\n    rootEntity: Entity,\n    mixEntity: Entity,\n    options: { wrapMode?: WrapMode } = {}\n  ) {\n    this._isPlaying = targetLayer.isPlaying;\n    this._animClip = animClip;\n    this._wrapMode = typeof options.wrapMode !== \"undefined\" ? options.wrapMode : targetLayer._wrapMode;\n\n    this._addEvents(options);\n\n    this._channelStates = [];\n    this._animClipLength = 0;\n\n    // -- Create new state object.\n    if (this._isPlaying) {\n      const targetChannelStates = targetLayer._channelStates;\n      const count = this._animClip.getChannelCount();\n      for (let i = count - 1; i >= 0; i--) {\n        const channel = this._animClip.getChannelObject(i);\n        const targetObject = this._findChannelTarget(mixEntity, channel.target);\n        this._channelStates[i] = {\n          frameTime: 0.0,\n          currentFrame: 0,\n          currentValue: this._animClip.createChannelValue(i),\n          mixWeight: targetObject ? 1 : 0\n        };\n\n        targetChannelStates[i].mixWeight =\n          targetChannelStates[i].mixWeight === undefined ? 1 : targetChannelStates[i].mixWeight;\n        if (targetChannelStates[i].mixWeight === 1) {\n          targetChannelStates[i].mixWeight = targetObject ? 0 : 1;\n        }\n\n        const channelTimeLength = this._animClip.getChannelTimeLength(i);\n        this._animClipLength = this._animClipLength > channelTimeLength ? this._animClipLength : channelTimeLength;\n      } // End of for.\n\n      return true;\n    }\n\n    return false;\n  }\n\n  public removeMixWeight() {\n    const count = this._channelStates.length;\n    for (let i = count - 1; i >= 0; i--) {\n      if (this._channelStates[i].mixWeight === 1) {\n        this.mixTagetLayer._channelStates[i].mixWeight = 1;\n      }\n    }\n  }\n\n  /**\n   * Play the specify AnimationClip.\n   * @param animClip - The AnimationClip to be played.\n   * @param rootEntity - The root entity of the skeleton animation.\n   * @param options - The play options when playing AnimationClip.\n   */\n  public play(\n    animClip: AnimationClip,\n    rootEntity: Entity,\n    options: AnimationOptions = { wrapMode: WrapMode.LOOP }\n  ): false | IChannelTarget[] {\n    this._isPlaying = !!animClip;\n    this._animClip = animClip;\n    this._wrapMode = typeof options.wrapMode !== \"undefined\" ? options.wrapMode : WrapMode.LOOP;\n\n    this._addEvents(options);\n\n    this._channelStates = [];\n    this._animClipLength = 0;\n\n    // Create new state object.\n    if (this._isPlaying) {\n      const count = this._animClip.getChannelCount();\n      const channelTargets: IChannelTarget[] = [];\n      for (let i = count - 1; i >= 0; i--) {\n        const channel = this._animClip.getChannelObject(i);\n        const targetObject = this._findChannelTarget(rootEntity, channel.target);\n        if (!targetObject) {\n          Logger.warn(\"Can not find channel target:\" + channel.target.id);\n        }\n        this._channelStates[i] = {\n          frameTime: 0.0,\n          currentFrame: 0,\n          currentValue: this._animClip.createChannelValue(i)\n        };\n\n        channelTargets[i] = {\n          targetObject,\n          path: channel.target.path,\n          pathType: channel.target.pathType,\n          outputSize: channel.sampler.outputSize\n        };\n\n        const channelTimeLength = this._animClip.getChannelTimeLength(i);\n        this._animClipLength = this._animClipLength > channelTimeLength ? this._animClipLength : channelTimeLength;\n      } // End of for.\n\n      return channelTargets;\n    }\n\n    return false;\n  }\n\n  /**\n   * Stop play AnimationClip.\n   * @param rightnow - Stop it immediately, or it will stop at the end of the clip.\n   */\n  public stop(rightnow: boolean) {\n    if (!this._animClip || !this._isPlaying) {\n      return;\n    }\n\n    if (rightnow) {\n      this._isPlaying = false;\n    } else {\n      this._wrapMode = WrapMode.ONCE;\n    }\n  }\n\n  /**\n   * Update animation states only.\n   * @param deltaTime - The deltaTime when the animation update.\n   */\n  public updateState(deltaTime: number) {\n    if (!this._animClip || !this._isPlaying) {\n      return;\n    }\n\n    // Update the weight of the Animation Layer.\n    if (this.isFading) {\n      this.fadeDeltaTime += deltaTime;\n      this.layerWeight = 1.0 - this.fadeDeltaTime / this.fadeDuration;\n      if (this.layerWeight <= 0) {\n        this._isPlaying = false;\n      }\n    } else if (this.crossFadeDuration) {\n      this.crossFadeDeltaTime += deltaTime;\n      this.layerWeight = this.crossFadeDeltaTime / this.crossFadeDuration;\n      if (this.layerWeight >= 1.0) {\n        this.layerWeight = 1.0;\n        delete this.crossFadeDuration;\n      }\n    }\n\n    deltaTime = deltaTime / 1000;\n    this._activeEvents(deltaTime);\n\n    // Update channelStates.\n    const count = this._animClip.getChannelCount();\n    let playingCount = 0;\n    for (let i = count - 1; i >= 0; i--) {\n      if (this._updateChannelState(deltaTime, i)) {\n        playingCount++;\n      }\n    }\n\n    if (playingCount === 0) {\n      this._isPlaying = false;\n\n      if (this.isMixLayer) {\n        this.removeMixWeight();\n      }\n    }\n  }\n\n  /**\n   * Get the weight of the Animation Layer.\n   * @return Channel layer weight.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public getChannelLayerWeight(channelIndex: number): number {\n    if ((this.hasMixLayer || this.isMixLayer) && channelIndex < this._channelStates.length) {\n      const mixWeight = this._channelStates[channelIndex].mixWeight;\n      const layerWeight = this.isMixLayer ? this.mixTagetLayer.layerWeight : this.layerWeight;\n      return mixWeight * layerWeight;\n    }\n    return this.layerWeight;\n  }\n\n  /**\n   * @return Channel value.\n   * @param channelIndexchannelIndex - The channel's index in AnimationClip's channels property.\n   */\n  public getChannelValue(channelIndex: number) {\n    return this._channelStates[channelIndex].currentValue;\n  }\n\n  /**\n   * Trigger the animation events.\n   */\n  public triggerEvents() {\n    this._activedEvents &&\n      this._activedEvents.forEach((event) => {\n        this.trigger(event);\n      });\n\n    this._activedEvents.length = 0;\n  }\n\n  /**\n   * Jump to a frame of the AnimationClip, take effect immediately.\n   * @param frameTime - The time which the animation will jump to.\n   */\n  public jumpToFrame(frameTime: number) {\n    const count = this._animClip.getChannelCount();\n    for (let i = count - 1; i >= 0; i--) {\n      // 1. Clear pre frameTime.\n      const channelState = this._channelStates[i];\n      channelState.frameTime = 0;\n\n      // 2. Update new frameTime.\n      this._updateChannelState(frameTime, i);\n    }\n  }\n\n  /**\n   * Update state and value of channel.\n   * @param deltaTime - The deltaTime when the animation update.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   * @private\n   */\n  public _updateChannelState(deltaTime, channelIndex) {\n    const animClip = this._animClip;\n    const channelState = this._channelStates[channelIndex];\n    const animClipLength = animClip.getChannelTimeLength(channelIndex);\n\n    channelState.frameTime += deltaTime;\n    if (channelState.frameTime > animClipLength) {\n      switch (this._wrapMode) {\n        case WrapMode.ONCE:\n          channelState.frameTime = animClipLength;\n          break;\n        case WrapMode.LOOP:\n          channelState.frameTime = channelState.frameTime % this._animClipLength;\n          break;\n        default:\n          Logger.error(\"Unknown Anim wrap Mode: \" + this._wrapMode);\n      }\n    } // End of if.\n\n    if (channelState.mixWeight && channelState.mixWeight === 0) {\n      return true;\n    }\n\n    const frameTime = Math.min(channelState.frameTime, animClipLength);\n    const lerpState = this._getKeyAndAlpha(animClip.getChannelObject(channelIndex), frameTime);\n    channelState.currentValue = animClip.evaluate(\n      channelState.currentValue,\n      channelIndex,\n      lerpState.currentKey,\n      lerpState.nextKey,\n      lerpState.alpha\n    );\n\n    if (this._wrapMode === WrapMode.ONCE && channelState.frameTime >= animClipLength) {\n      return false;\n    }\n    return true;\n  }\n  // -- private ----------------------------------------------------------\n  /**\n   * @param options - The AnimationEvent's option.\n   * @private\n   */\n  private _addEvents(options: any) {\n    this.removeAllEventListeners();\n\n    this._frameEvents = [];\n    if (options.events) {\n      let frameEventIndex = 0;\n      for (let i = options.events.length - 1; i >= 0; i--) {\n        const event = options.events[i];\n        let eventType = event.type;\n        if (event.type === AnimationEventType.FRAME_EVENT) {\n          eventType = \"frameEvent\" + frameEventIndex;\n          frameEventIndex++;\n          this._frameEvents.push({\n            eventType,\n            triggerTime: event.triggerTime,\n            triggered: false\n          });\n        }\n        this.addEventListener(eventType, (e) => {\n          event.callback();\n        });\n      } // End of for.\n    } // End of if.\n  }\n\n  /**\n   * Activate the AnimationEvent.\n   * @param deltaTime - The deltaTime when the animation update.\n   * @private\n   */\n  private _activeEvents(deltaTime: number) {\n    // Trigger Frame Event.\n    const index = this._animClip.durationIndex;\n\n    if (this._frameEvents.length > 0 && this._channelStates.length > 0) {\n      const curFrameTime = this._channelStates[index].frameTime + deltaTime;\n      for (let i = this._frameEvents.length - 1; i >= 0; i--) {\n        const frameEvent = this._frameEvents[i];\n        if (!frameEvent.triggered && curFrameTime > frameEvent.triggerTime) {\n          this._activedEvents.push(new Event(frameEvent.eventType, this));\n          frameEvent.triggered = true;\n        }\n      }\n    }\n\n    if (this._channelStates.length > 0 && this._channelStates[index].frameTime + deltaTime >= this._animClip.duration) {\n      if (this._wrapMode === WrapMode.LOOP) {\n        // Reset Frame Event status.\n        if (this._frameEvents.length > 0) {\n          for (let i = this._frameEvents.length - 1; i >= 0; i--) {\n            this._frameEvents[i].triggered = false;\n          }\n        }\n        // Trigger Loop End Event.\n        // @ts-ignore\n        if (this.hasEvent(AnimationEventType.LOOP_END)) {\n          this._activedEvents.push(new Event(AnimationEventType.LOOP_END, this));\n        }\n        // @ts-ignore\n      } else if (this.hasEvent(AnimationEventType.FINISHED)) {\n        // Trigger Finish Event.\n        this._activedEvents.push(new Event(AnimationEventType.FINISHED, this));\n      }\n    }\n  }\n\n  /**\n   * Find the target the channel belongs to.\n   * @param rootNode - The root entity of the skeleton animation.\n   * @param target - The target to be finded.\n   * @private\n   */\n  private _findChannelTarget(rootNode: Entity, target: any): Entity | Component {\n    const targetID = target.id;\n    let targetSceneObject: Entity = null;\n    if (rootNode.name === targetID) {\n      targetSceneObject = rootNode;\n    } else {\n      targetSceneObject = rootNode.findByName(targetID);\n    }\n\n    if (target.path === \"weights\") {\n      return targetSceneObject.getComponent(SkinnedMeshRenderer);\n    } else {\n      return targetSceneObject;\n    }\n  }\n\n  /**\n   * @return Current and next key id, current alpha.\n   * @param channel - The channle which the key and alpha in.\n   * @param time - The frame time.\n   * @private\n   */\n  private _getKeyAndAlpha(channel, time: number) {\n    let keyTime = 0;\n    let currentKey = 0;\n    let nextKey = 0;\n\n    const timeKeys = channel.sampler.input;\n    const numKeys = timeKeys.length;\n    for (let i = numKeys - 1; i >= 0; i--) {\n      if (time > timeKeys[i]) {\n        keyTime = time - timeKeys[i];\n        currentKey = i;\n        break;\n      }\n    }\n\n    nextKey = currentKey + 1;\n    if (nextKey >= numKeys) {\n      switch (this._wrapMode) {\n        case WrapMode.ONCE:\n          nextKey = numKeys - 1;\n          break;\n        case WrapMode.LOOP:\n          nextKey = 0;\n          break;\n      }\n    }\n\n    const keyLength = timeKeys[nextKey] - timeKeys[currentKey];\n    const alpha = nextKey === currentKey || keyLength < 0.00001 ? 1 : keyTime / keyLength;\n\n    return {\n      currentKey,\n      nextKey,\n      alpha\n    };\n  }\n}\n","import { Quaternion, Vector3 } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { ignoreClone, shallowClone } from \"../clone/CloneManager\";\nimport { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { SkinnedMeshRenderer } from \"../mesh/SkinnedMeshRenderer\";\nimport { AnimationClip, TagetType } from \"./AnimationClip\";\nimport { AnimationLayer } from \"./AnimationLayer\";\nimport { AnimationOptions, IChannelTarget } from \"./types\";\n/**\n * Animation Component, the AnimationClip player with crossFade and mix abilities.\n */\nexport class Animation extends Component {\n  /**\n   * The timeScale getter, timeScale which used for scale the animation time to speed up or slow down the animation.\n   */\n  get timeScale(): number {\n    return this._timeScale;\n  }\n\n  /**\n   * The timeScale setter, timeScale which used for scale the animation time to speed up or slow down the animation.\n   */\n  set timeScale(val: number) {\n    if (val > 0) {\n      this._timeScale = val;\n    }\n  }\n\n  /**\n   * Linearly interpolates between two values.\n   * @param outValue - The output value after interpolation.\n   * @param startValue - The start value before interpolation.\n   * @param endValue - The end value after interpolation.\n   * @param outputSize - The length of the output values.\n   * @param alpha - The weight of the endValue in interpolation algorithm.\n   * @private\n   */\n  public static lerp(\n    outValue: number | Float32Array,\n    startValue: number | Float32Array,\n    endValue: number | Float32Array,\n    alpha: number,\n    outputSize: number\n  ): number | Float32Array {\n    switch (outputSize) {\n      case 1:\n        outValue = <number>startValue * (1 - alpha) + <number>endValue * alpha;\n        break;\n      case 4:\n        const start = new Quaternion(...(startValue as Float32Array));\n        const end = new Quaternion(...(endValue as Float32Array));\n        const quat = new Quaternion();\n        Quaternion.slerp(start, end, alpha, quat);\n        outValue[0] = quat.x;\n        outValue[1] = quat.y;\n        outValue[2] = quat.z;\n        outValue[3] = quat.w;\n        break;\n      default:\n        for (let i = outputSize; i >= 0; i--) {\n          outValue[i] = startValue[i] * (1 - alpha) + endValue[i] * alpha;\n        }\n        break;\n    } // End of switch.\n\n    return outValue;\n  }\n\n  /** @internal */\n  @ignoreClone\n  _onUpdateIndex: number = -1;\n\n  @shallowClone\n  private _animSet = {};\n\n  @ignoreClone\n  private _animLayers: AnimationLayer[] = [new AnimationLayer()];\n  @ignoreClone\n  private _timeScale: number = 1.0;\n  @ignoreClone\n  private _channelTargets: IChannelTarget[] | false;\n\n  /**\n   * @param entity - The entitiy which the animation component belongs to.\n   */\n  constructor(entity: Entity) {\n    super(entity);\n  }\n\n  /**\n   * Evaluates the animation component based on deltaTime.\n   * @param deltaTime - The deltaTime when the animation update.\n   * @private\n   */\n  public update(deltaTime: number) {\n    if (!this.isPlaying()) {\n      return;\n    }\n\n    deltaTime = deltaTime * this._timeScale;\n\n    // Update state.\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      const animLayer = this._animLayers[i];\n      animLayer.updateState(deltaTime);\n    }\n\n    // Update value.\n    this._updateValues();\n\n    // Trigger events and destroy no use layer.\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      const animLayer = this._animLayers[i];\n      animLayer.triggerEvents();\n      if (!animLayer.isPlaying && (animLayer.isFading || animLayer.isMixLayer)) {\n        this._animLayers.splice(i, 1);\n        this._removeRefMixLayers(animLayer);\n      }\n    }\n  }\n\n  /**\n   * Add a AnimationClip to the animation with the name.\n   * @param animClip - The AnimationClip which you want to be added.\n   * @param name - The name of the AnimationClip.\n   */\n  public addAnimationClip(animClip: AnimationClip, name: string) {\n    this._animSet[name] = animClip;\n  }\n\n  /**\n   * Remove clip from the animation.\n   * @param name - The name of the AnimationClip.\n   */\n  public removeAnimationClip(name: string) {\n    const animClip = this._animSet[name];\n    if (animClip) {\n      delete this._animSet[name];\n    }\n  }\n\n  /**\n   * Get length of the AnimationClip By the name.\n   * @param name - The name of the AnimationClip.\n   * @return The AnimationClip length.\n   */\n  public getAnimationClipLength(name: string): number {\n    const animClip = this._animSet[name];\n    if (animClip) {\n      return animClip.getChannelTimeLength(0);\n    } else {\n      return 0.0;\n    }\n  }\n\n  /**\n   * Get the AnimationClip By name.\n   * @param name - The name of the AnimationClip.\n   * @return The AnimationClip which match the name.\n   */\n  public getAnimationClip(name: string): AnimationClip {\n    return this._animSet[name] || null;\n  }\n\n  /**\n   * Return whether is playing.\n   * @return {boolean}\n   */\n  public isPlaying(): boolean {\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      if (this._animLayers[i].isPlaying) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Play the AnimationClip by name.\n   * @param name - The AnimatioinClip's name.\n   * @param options - The play options when playing AnimationClip.\n   */\n  public playAnimationClip(name: string, options?: AnimationOptions) {\n    const animClip = this._animSet[name];\n    if (!animClip) {\n      Logger.error(\"can not find anim clip: \" + name);\n      return;\n    }\n\n    let animLayer: AnimationLayer = null;\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      if (!this._animLayers[i].isFading && !this._animLayers[i].isMixLayer) {\n        animLayer = this._animLayers[i];\n        break;\n      }\n    }\n\n    if (!animLayer) {\n      animLayer = new AnimationLayer();\n      this._animLayers.push(animLayer);\n    }\n    this._removeRefMixLayers(animLayer);\n    this._channelTargets = animLayer.play(animClip, this.entity, options);\n  }\n\n  /**\n   * CrossFade to the AnimationClip by name.\n   * @param name - The AnimatioinClip's name.\n   * @param crossFadeDuration - The milliseconds of the crossFade's duration.\n   * @param options - The play options when playing AnimationClip.\n   */\n  public CrossFade(name: string, crossFadeDuration: number, options: AnimationOptions) {\n    const animClip = this._animSet[name];\n    if (!animClip) {\n      Logger.error(\"can not find anim clip: \" + name);\n      return;\n    }\n\n    if (!crossFadeDuration || crossFadeDuration < 0) {\n      Logger.error(\"crossFadeDuration can not less than 0!\");\n      return;\n    }\n\n    // Look for targets that can be mixed.\n    let targetAnimLayer = null;\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      if (this._animLayers[i].canMix(animClip, this.entity)) {\n        targetAnimLayer = this._animLayers[i];\n        break;\n      }\n    }\n\n    if (targetAnimLayer) {\n      // Clear the unfinished crossFading action\n      for (let i = this._animLayers.length - 1; i >= 0; i--) {\n        if (this._animLayers[i].isFading) {\n          this._animLayers.splice(i, 1);\n        }\n      }\n\n      targetAnimLayer.isFading = true;\n      targetAnimLayer.fadeDuration = crossFadeDuration;\n      targetAnimLayer.fadeDeltaTime = 0;\n\n      const animLayer = new AnimationLayer();\n      animLayer.crossFadeDuration = crossFadeDuration;\n      animLayer.crossFadeDeltaTime = 0;\n      animLayer.play(animClip, this.entity, options);\n      this._animLayers.push(animLayer);\n    } else {\n      this.playAnimationClip(name, options);\n    }\n  }\n\n  /**\n   * Mix the AnimationClip by name.\n   * @param name - The AnimatioinClip's name.\n   * @param mixBoneName - Takes effect on the bone named mixBoneName and the child bones attached to it.\n   * @param options - The play options when playing AnimationClip.\n   */\n  public mix(name: string, mixBoneName: string, options: AnimationOptions) {\n    const animClip = this._animSet[name];\n    if (!animClip) {\n      Logger.error(\"can not find anim clip: \" + name);\n      return;\n    }\n\n    const mixNode = this.entity.findByName(mixBoneName);\n    if (!mixNode) {\n      Logger.error(\"can not find mix bone!\");\n      return;\n    }\n\n    // Look for targets that can be mixed.\n    let targetAnimLayer = null;\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      if (this._animLayers[i].canMix(animClip, this.entity)) {\n        targetAnimLayer = this._animLayers[i];\n        break;\n      }\n    }\n\n    if (targetAnimLayer) {\n      this._removeRefMixLayers(null, mixNode);\n\n      targetAnimLayer.hasMixLayer = true;\n\n      const animLayer = new AnimationLayer();\n      animLayer.isMixLayer = true;\n      animLayer.mixTagetLayer = targetAnimLayer;\n      animLayer.mixEntity = mixNode;\n      animLayer.mix(animClip, targetAnimLayer, this.entity, mixNode, options);\n      this._animLayers.push(animLayer);\n    }\n  }\n\n  /**\n   * Stop play\n   * @param rightnow - Stop it immediately, or it will stop at the end of the clip\n   */\n  public stop(rightnow: boolean) {\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      if (this._animLayers[i].isFading) {\n        this._animLayers.splice(i, 1);\n      } else {\n        this._animLayers[i].stop(rightnow);\n      }\n    }\n  }\n\n  /**\n   * Jump to a frame of the animation, take effect immediately.\n   * @param frameTime - The time which the animation will jump to.\n   */\n  public jumpToFrame(frameTime: number) {\n    frameTime = frameTime / 1000;\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      this._animLayers[i].jumpToFrame(frameTime);\n    }\n\n    this._updateValues();\n  }\n\n  // -- private ----------------------------------------------------------\n  /**\n   * Remove the mixed animation associated with targetLayer.\n   * @param targetLayer - The mixed AnimatioinLayer which will be removed.\n   * @private\n   */\n  public _removeRefMixLayers(targetLayer: AnimationLayer, mixNode?) {\n    if (targetLayer && targetLayer.hasMixLayer) {\n      for (let i = this._animLayers.length - 1; i >= 0; i--) {\n        const animLayer = this._animLayers[i];\n        if (animLayer.isMixLayer && animLayer.mixTagetLayer === targetLayer) {\n          animLayer.removeMixWeight();\n          this._animLayers.splice(i, 1);\n        }\n      }\n    }\n\n    if (mixNode) {\n      for (let i = this._animLayers.length - 1; i >= 0; i--) {\n        const animLayer = this._animLayers[i];\n        if (\n          animLayer.isMixLayer &&\n          (animLayer.mixEntity === mixNode ||\n            animLayer.mixEntity.findByName(mixNode) ||\n            mixNode.findByName(animLayer.mixEntity))\n        ) {\n          animLayer.removeMixWeight();\n          this._animLayers.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  /**\n   * Update animation value.\n   * @private\n   */\n  public _updateValues() {\n    if (this._animLayers.length === 0 || !this._channelTargets) {\n      return;\n    }\n\n    for (let i = this._channelTargets.length - 1; i >= 0; i--) {\n      const channelTarget = this._channelTargets[i];\n      const val = this._getChannelValue(i, channelTarget.outputSize);\n      const targetObject = channelTarget.targetObject;\n      const path = channelTarget.path;\n\n      if (path === \"weights\") {\n        // SkinnedMeshRenderer.\n        (targetObject as SkinnedMeshRenderer).setWeights(val as any);\n      } else {\n        const v = val as Float32Array;\n        //CM: Temporary optimization val should be Vector3/Quaternion type to avoid conversion overhead\n        //CM: In the future, after Animation unifies all animation systems, it will use pathType as other and continue to use reflection.\n        //CM: Due to the relatively small number of pathTypes, pre-classification can be used to avoid switch overhead in the future, such as three types of skeletal animation\n        const transform = (<Entity>targetObject).transform;\n        switch (channelTarget.pathType) {\n          case TagetType.position:\n            const position: Vector3 = transform.position;\n            position.setValue(v[0], v[1], v[2]);\n            transform.position = position;\n            break;\n          case TagetType.rotation:\n            const rotation: Quaternion = transform.rotationQuaternion;\n            rotation.setValue(v[0], v[1], v[2], v[3]);\n            transform.rotationQuaternion = rotation;\n            break;\n          case TagetType.scale:\n            const scale: Vector3 = transform.scale;\n            scale.setValue(v[0], v[1], v[2]);\n            transform.scale = scale;\n            break;\n          default:\n            targetObject[path] = val;\n        }\n      }\n    } // End of for\n  }\n\n  /**\n   * @return Channel value.\n   * @param channelIndex - The channel's index in AnimationClip's channels property.\n   * @param outputSize - The length of the output values.\n   * @private\n   */\n  public _getChannelValue(channelIndex: number, outputSize: number): number | boolean | Float32Array {\n    const weights = [];\n    const values = [];\n    for (let i = this._animLayers.length - 1; i >= 0; i--) {\n      const weight = this._animLayers[i].getChannelLayerWeight(channelIndex);\n      if (weight > 0) {\n        weights.push(weight);\n        values.push(this._animLayers[i].getChannelValue(channelIndex));\n      }\n    }\n    /**\n     * When values.length === 1, return the value directly.\n     * When values.length === 2, return the lerp from value[0] and value[1].\n     **/\n    if (values.length === 1) {\n      return values[0];\n    } else if (values.length === 2) {\n      return Animation.lerp(values[0], values[0], values[1], weights[1], outputSize);\n    }\n\n    // Other case can't be handled.\n    Logger.error(\"Can not get channel value!\");\n    return false;\n  }\n\n  /**\n   * Be called when this instance be enabled.\n   * @override\n   * @internal\n   */\n  _onEnable(): void {\n    this.engine._componentsManager.addOnUpdateAnimations(this);\n  }\n\n  /**\n   * Be called when this instance be disabled or it's entity be inActiveInHierarchy or before this instance be destroyed.\n   * @override\n   * @internal\n   */\n  _onDisable(): void {\n    this.engine._componentsManager.removeOnUpdateAnimations(this);\n  }\n}\n","import { BoundingBox, Vector3 } from \"@oasis-engine/math\";\nimport { EngineObject } from \"../base\";\nimport { Engine } from \"../Engine\";\nimport { PrimitiveTopology, SubPrimitive } from \"../graphic\";\nimport { Buffer } from \"../graphic/Buffer\";\nimport { IndexFormat } from \"../graphic/enums/IndexFormat\";\nimport { IndexBufferBinding } from \"../graphic/IndexBufferBinding\";\nimport { Primitive } from \"../graphic/Primitive\";\nimport { VertexBufferBinding } from \"../graphic/VertexBufferBinding\";\nimport { VertexElement } from \"../graphic/VertexElement\";\n\n/**\n * BufferGeometry.\n */\nexport class BufferGeometry extends EngineObject {\n  /** Geometry name */\n  name: string;\n\n  /** @internal */\n  _primitive: Primitive;\n\n  readonly bounds: BoundingBox = new BoundingBox();\n  private _subGeometries: SubPrimitive[] = [];\n\n  /**\n   * Vertex buffer binding collection.\n   */\n  get vertexBufferBindings(): Readonly<VertexBufferBinding[]> {\n    return this._primitive.vertexBufferBindings;\n  }\n\n  /**\n   * Index buffer binding.\n   */\n  get indexBufferBinding(): IndexBufferBinding {\n    return this._primitive.indexBufferBinding;\n  }\n\n  /**\n   * Vertex element collection.\n   */\n  get vertexElements(): Readonly<VertexElement[]> {\n    return this._primitive.vertexElements;\n  }\n\n  /**\n   * First sub-geometry. Rendered using the first material. For more details, please refer to the subGeometrys property.\n   */\n  get subGeometry(): SubPrimitive | null {\n    return this._subGeometries[0] || null;\n  }\n\n  /**\n   * A collection of sub-geometry, each sub-geometry can be rendered with an independent material.\n   */\n  get subGeometries(): Readonly<SubPrimitive[]> {\n    return this._subGeometries;\n  }\n\n  /**\n   * Instanced count, 0 means disable.\n   */\n  get instanceCount(): number {\n    return this._primitive.instanceCount;\n  }\n\n  set instanceCount(count: number) {\n    this._primitive.instanceCount = count;\n  }\n\n  /**\n   * Create buffer geometry.\n   * @param engine - Engine\n   * @param name - Geometry name\n   */\n  constructor(engine: Engine, name?: string) {\n    super(engine);\n    this._primitive = new Primitive(engine);\n    this.name = name;\n  }\n\n  /**\n   * Set vertex buffer binding.\n   * @param vertexBufferBindings - Vertex buffer binding\n   * @param firstIndex - First vertex buffer index, the default value is 0\n   */\n  setVertexBufferBinding(vertexBufferBindings: VertexBufferBinding, firstIndex?: number): void;\n\n  /**\n   * Set vertex buffer binding.\n   * @param vertexBuffer - Vertex buffer\n   * @param stride - Vertex buffer data stride\n   * @param firstIndex - First vertex buffer index, the default value is 0\n   */\n  setVertexBufferBinding(vertexBuffer: Buffer, stride: number, firstIndex?: number): void;\n\n  setVertexBufferBinding(\n    bufferOrBinding: Buffer | VertexBufferBinding,\n    stride: number = 0,\n    firstIndex: number = 0\n  ): void {\n    this._primitive.setVertexBufferBinding(<Buffer>bufferOrBinding, stride, firstIndex);\n  }\n\n  /**\n   * Set vertex buffer binding.\n   * @param vertexBufferBindings - Vertex buffer binding\n   * @param firstIndex - First vertex buffer index, the default value is 0\n   */\n  setVertexBufferBindings(vertexBufferBindings: VertexBufferBinding[], firstIndex: number = 0): void {\n    this._primitive.setVertexBufferBindings(vertexBufferBindings, firstIndex);\n  }\n\n  /**\n   * Set index buffer binding.\n   * @param buffer - Index buffer\n   * @param format - Index buffer format\n   */\n  setIndexBufferBinding(buffer: Buffer, format: IndexFormat): void;\n\n  /**\n   * Set index buffer binding.\n   * @param bufferBinding - Index buffer binding\n   */\n  setIndexBufferBinding(bufferBinding: IndexBufferBinding): void;\n\n  setIndexBufferBinding(bufferOrBinding: Buffer | IndexBufferBinding, format?: IndexFormat): void {\n    this._primitive.setIndexBufferBinding(<Buffer>bufferOrBinding, format);\n  }\n\n  /**\n   * Set vertex elements.\n   * @param elements - Vertex element collection\n   */\n  setVertexElements(elements: VertexElement[]): void {\n    this._primitive.setVertexElements(elements);\n  }\n\n  /**\n   * Add sub-geometry, each sub-geometry can correspond to an independent material.\n   * @param start - Start drawing offset, if the index buffer is set, it means the offset in the index buffer, if not set, it means the offset in the vertex buffer\n   * @param count - Drawing count, if the index buffer is set, it means the count in the index buffer, if not set, it means the count in the vertex buffer\n   * @param topology - Drawing topology, default is PrimitiveTopology.Triangles\n   */\n  addSubGeometry(\n    start: number,\n    count: number,\n    topology: PrimitiveTopology = PrimitiveTopology.Triangles\n  ): SubPrimitive {\n    const subGeometry = new SubPrimitive(start, count, topology);\n    this._subGeometries.push(subGeometry);\n    return subGeometry;\n  }\n\n  /**\n   * Remove sub geometry.\n   * @param subGeometry - SubGeometry needs to be removed\n   */\n  removeSubGeometry(subGeometry: SubPrimitive): void {\n    const subGeometries = this._subGeometries;\n    const index = subGeometries.indexOf(subGeometry);\n    if (index !== -1) {\n      subGeometries.splice(index, 1);\n    }\n  }\n\n  /**\n   * Clear all sub geometries\n   */\n  clearSubGeometry(): void {\n    this._subGeometries.length = 0;\n  }\n\n  /**\n   * Destroy.\n   */\n  destroy(): void {\n    if (this._primitive) {\n      this._primitive.destroy();\n      this._primitive = null;\n    }\n  }\n}\n","import { BoundingBox } from \"@oasis-engine/math\";\nimport { Logger } from \"../base/Logger\";\nimport { Camera } from \"../Camera\";\nimport { Material } from \"../material/Material\";\nimport { Renderer } from \"../Renderer\";\nimport { RenderElement } from \"../RenderPipeline/RenderElement\";\nimport { BufferGeometry } from \"./BufferGeometry\";\n\n/**\n * Geometry renderer\n */\nexport class GeometryRenderer extends Renderer {\n  _material: Material;\n\n  /** Buffer geometry */\n  private _geometry: BufferGeometry;\n\n  /**\n   * Set buffer geometry\n   */\n  set geometry(value: BufferGeometry) {\n    if (this._geometry) {\n      this._geometry._primitive._addRefCount(-1);\n    }\n    value._primitive._addRefCount(1);\n    this._geometry = value;\n  }\n\n  get geometry(): BufferGeometry {\n    return this._geometry;\n  }\n\n  /**\n   * Material.\n   */\n  set material(value: Material) {\n    if (this._material) {\n      this._material._addRefCount(-1);\n    }\n    value._addRefCount(1);\n    this._material = value;\n  }\n\n  get material(): Material {\n    return this._material;\n  }\n\n  render(camera: Camera) {\n    const geometry = this.geometry;\n    if (geometry) {\n      const subGeometries = geometry.subGeometries;\n      const renderPipeline = camera._renderPipeline;\n      const material = this._material;\n      for (let i = 0, n = subGeometries.length; i < n; i++) {\n        if (material) {\n          const element = RenderElement.getFromPool();\n          element.setValue(this, geometry._primitive, subGeometries[i], material); // CM: need to support multi material\n          renderPipeline.pushPrimitive(element);\n        }\n      }\n    } else {\n      Logger.error(\"geometry is null.\");\n    }\n  }\n\n  /**\n   * @override\n   */\n  protected _updateBounds(worldBounds: BoundingBox): void {\n    const localBounds = this._geometry.bounds;\n    const worldMatrix = this._entity.transform.worldMatrix;\n\n    BoundingBox.transform(localBounds, worldMatrix, worldBounds);\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Engine } from \"../Engine\";\nimport { BufferGeometry } from \"../geometry/BufferGeometry\";\nimport { Buffer } from \"../graphic/Buffer\";\nimport { BufferBindFlag } from \"../graphic/enums/BufferBindFlag\";\nimport { BufferUsage } from \"../graphic/enums/BufferUsage\";\nimport { IndexFormat } from \"../graphic/enums/IndexFormat\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\n\n/**\n * Basic shape geometry.\n */\nexport class ShapeGeometry extends BufferGeometry {\n  /**\n   * @internal\n   */\n  _initialize(engine: Engine, vertices: Float32Array, indices: Uint16Array) {\n    const vertexStride = 32;\n    const vertexElements = [\n      new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"TEXCOORD_0\", 24, VertexElementFormat.Vector2, 0)\n    ];\n\n    this._initBuffer(engine, vertices, indices, vertexStride, vertexElements);\n  }\n\n  _initBuffer(\n    engine: Engine,\n    vertices: Float32Array,\n    indices: Uint16Array,\n    vertexStride: number,\n    vertexElements: VertexElement[]\n  ) {\n    const positionElement = vertexElements[0];\n    const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n    const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n    this.setVertexBufferBinding(vertexBuffer, vertexStride);\n    this.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n    this.setVertexElements(vertexElements);\n    this.addSubGeometry(0, indices.length);\n\n    this._computeBounds(positionElement, vertices);\n  }\n\n  private _computeBounds(positionElement: VertexElement, vertices: ArrayBuffer | Float32Array): void {\n    const vertexElement = positionElement;\n    const bufferIndex = vertexElement.bindingIndex;\n    const vertexBufferBinding = this._primitive.vertexBufferBindings[bufferIndex];\n    const stride = vertexBufferBinding.stride;\n    const offset = vertexElement.offset;\n    const vertexCount = vertexBufferBinding.buffer.byteLength / stride;\n    let arrayBuffer: ArrayBuffer = vertices;\n    if (!(arrayBuffer instanceof ArrayBuffer)) {\n      arrayBuffer = (<Float32Array>arrayBuffer).buffer;\n    }\n    const dataView = new DataView(arrayBuffer, offset);\n\n    let min = new Vector3(Infinity, Infinity, Infinity);\n    let max = new Vector3(-Infinity, -Infinity, -Infinity);\n    for (let i = 0; i < vertexCount; i++) {\n      const base = offset + stride * i;\n      const position = new Vector3(\n        dataView.getFloat32(base, true),\n        dataView.getFloat32(base + 4, true),\n        dataView.getFloat32(base + 8, true)\n      );\n      Vector3.min(min, position, min);\n      Vector3.max(max, position, max);\n    }\n\n    const bounds = this.bounds;\n    min.cloneTo(bounds.min);\n    max.cloneTo(bounds.max);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * CuboidGeometry.\n */\nexport class CuboidGeometry extends ShapeGeometry {\n  /**\n   * Create a cuboid geometry.\n   * @param engine - Engine\n   * @param width - Cuboid width\n   * @param height - Cuboid height\n   * @param depth - Cuboid depth\n   */\n  constructor(engine: Engine, width: number = 1, height: number = 1, depth: number = 1) {\n    super(engine);\n\n    const halfWidth: number = width / 2;\n    const halfHeight: number = height / 2;\n    const halfDepth: number = depth / 2;\n\n    // prettier-ignore\n    const vertices: Float32Array = new Float32Array([\n    \t// up\n    \t-halfWidth, halfHeight, -halfDepth, 0, 1, 0, 0, 0, halfWidth, halfHeight, -halfDepth, 0, 1, 0, 1, 0, halfWidth, halfHeight, halfDepth, 0, 1, 0, 1, 1, -halfWidth, halfHeight, halfDepth, 0, 1, 0, 0, 1,\n    \t// down\n    \t-halfWidth, -halfHeight, -halfDepth, 0, -1, 0, 0, 1, halfWidth, -halfHeight, -halfDepth, 0, -1, 0, 1, 1, halfWidth, -halfHeight, halfDepth, 0, -1, 0, 1, 0, -halfWidth, -halfHeight, halfDepth, 0, -1, 0, 0, 0,\n    \t// left\n    \t-halfWidth, halfHeight, -halfDepth, -1, 0, 0, 0, 0, -halfWidth, halfHeight, halfDepth, -1, 0, 0, 1, 0, -halfWidth, -halfHeight, halfDepth, -1, 0, 0, 1, 1, -halfWidth, -halfHeight, -halfDepth, -1, 0, 0, 0, 1,\n    \t// right\n    \thalfWidth, halfHeight, -halfDepth, 1, 0, 0, 1, 0, halfWidth, halfHeight, halfDepth, 1, 0, 0, 0, 0, halfWidth, -halfHeight, halfDepth, 1, 0, 0, 0, 1, halfWidth, -halfHeight, -halfDepth, 1, 0, 0, 1, 1,\n    \t// fornt\n    \t-halfWidth, halfHeight, halfDepth, 0, 0, 1, 0, 0, halfWidth, halfHeight, halfDepth, 0, 0, 1, 1, 0, halfWidth, -halfHeight, halfDepth, 0, 0, 1, 1, 1, -halfWidth, -halfHeight, halfDepth, 0, 0, 1, 0, 1,\n    \t// back\n    \t-halfWidth, halfHeight, -halfDepth, 0, 0, -1, 1, 0, halfWidth, halfHeight, -halfDepth, 0, 0, -1, 0, 0, halfWidth, -halfHeight, -halfDepth, 0, 0, -1, 0, 1, -halfWidth, -halfHeight, -halfDepth, 0, 0, -1, 1, 1]);\n\n    // prettier-ignore\n    const indices: Uint16Array = new Uint16Array([\n    \t// up\n    \t0, 2, 1, 2, 0, 3,\n    \t// donw\n    \t4, 6, 7, 6, 4, 5,\n    \t// left\n    \t8, 10, 9, 10, 8, 11,\n    \t// right\n    \t12, 14, 15, 14, 12, 13,\n    \t// fornt\n    \t16, 18, 17, 18, 16, 19,\n    \t// back\n    \t20, 22, 23, 22, 20, 21]);\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * SphereGeometry.\n */\nexport class SphereGeometry extends ShapeGeometry {\n  private _parameters;\n  private _thetaEnd;\n\n  /**\n   * @param  radius - Sphere radius.\n   * @param  horizontalSegments - Number of horizontal segments\n   * @param  verticalSegments - Number of vertical segments\n   * @param  alphaStart - Specify horizontal starting angle\n   * @param  alphaRange - Specify horizontal sweep angle size\n   * @param  thetaStart - Specify vertical starting angle\n   * @param  thetaRange - Specify vertical sweep angle size\n   */\n  constructor(\n    engine: Engine,\n    radius: number = 1,\n    horizontalSegments: number = 8,\n    verticalSegments: number = 6,\n    alphaStart: number = 0,\n    alphaRange: number = Math.PI * 2,\n    thetaStart: number = 0,\n    thetaRange: number = Math.PI\n  ) {\n    super(engine);\n    this._parameters = {\n      radius: radius || 1,\n      horizontalSegments: Math.max(3, Math.floor(horizontalSegments)),\n      verticalSegments: Math.max(2, Math.floor(verticalSegments)),\n      alphaStart: alphaStart,\n      alphaRange: alphaRange,\n      thetaStart: thetaStart,\n      thetaRange: thetaRange\n    };\n    this._thetaEnd = this._parameters.thetaStart + this._parameters.thetaRange;\n    this.initialize(engine);\n  }\n\n  /**\n   * Generate sphere vertices data.\n   * @private\n   */\n  initialize(engine: Engine) {\n    const { verticalSegments, horizontalSegments } = this._parameters;\n    // Generate data of geometric vertices on the latitude and longitude lines\n    let index = 0;\n    const grid = [];\n    const vertices: Float32Array = new Float32Array((verticalSegments + 1) * (horizontalSegments + 1) * 8);\n    const indices = [];\n    // const positions = [];\n    for (let iy = 0; iy <= verticalSegments; iy++) {\n      const verticesRow = [];\n      const v = iy / verticalSegments;\n      for (let ix = 0; ix <= horizontalSegments; ix++) {\n        const u = ix / horizontalSegments;\n        let posX =\n          -this._parameters.radius *\n          Math.cos(this._parameters.alphaStart + u * this._parameters.alphaRange) *\n          Math.sin(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        let posY = this._parameters.radius * Math.cos(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        let posZ =\n          this._parameters.radius *\n          Math.sin(this._parameters.alphaStart + u * this._parameters.alphaRange) *\n          Math.sin(this._parameters.thetaStart + v * this._parameters.thetaRange);\n        posX = Math.abs(posX) < 1e-6 ? 0 : posX;\n        posY = Math.abs(posY) < 1e-6 ? 0 : posY;\n        posZ = Math.abs(posZ) < 1e-6 ? 0 : posZ;\n\n        const offset = index * 8;\n        // POSITION\n        vertices[offset] = posX;\n        vertices[offset + 1] = posY;\n        vertices[offset + 2] = posZ;\n        // NORMAL\n        vertices[offset + 3] = posX;\n        vertices[offset + 4] = posY;\n        vertices[offset + 5] = posZ;\n        // TEXCOORD_0\n        vertices[offset + 6] = u;\n        vertices[offset + 7] = 1 - v;\n\n        verticesRow.push(index++);\n      }\n      grid.push(verticesRow);\n    }\n\n    // Generate indices\n    for (let iy = 0; iy < verticalSegments; iy++) {\n      for (let ix = 0; ix < horizontalSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n\n        if (iy !== 0 || this._parameters.thetaStart > 0) indices.push(a, b, d);\n        if (iy !== verticalSegments - 1 || this._thetaEnd < Math.PI) indices.push(b, c, d);\n      }\n    }\n\n    this._initialize(engine, vertices, Uint16Array.from(indices));\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * CubeGeometry.\n */\nexport class PlaneGeometry extends ShapeGeometry {\n  private _parameters;\n  private halfWidth;\n  private halfHeight;\n\n  /**\n   * @param engine - Engine\n   * @param width - Plane width\n   * @param height - Plane height\n   * @param horizontalSegments - Plane horizontal segments\n   * @param verticalSegments - Plane verticle segments\n   */\n  constructor(\n    engine: Engine,\n    width: number = 1,\n    height: number = 1,\n    horizontalSegments: number = 1,\n    verticalSegments: number = 1\n  ) {\n    super(engine);\n    this._parameters = {\n      width: width,\n      height: height,\n      horizontalSegments: Math.floor(horizontalSegments),\n      verticalSegments: Math.floor(verticalSegments)\n    };\n\n    this.halfWidth = this._parameters.width / 2;\n    this.halfHeight = this._parameters.height / 2;\n    this.initialize(engine);\n  }\n\n  initialize(engine: Engine) {\n    const { verticalSegments, horizontalSegments } = this._parameters;\n    // Generate data of geometric vertices on the latitude and longitude lines\n    let index = 0;\n    let offset = 0;\n    const grid = [];\n    const vertices: Float32Array = new Float32Array((verticalSegments + 1) * (horizontalSegments + 1) * 8);\n    const indices: Uint16Array = new Uint16Array(verticalSegments * horizontalSegments * 6);\n\n    for (let iy = 0; iy <= verticalSegments; iy++) {\n      const verticesRow = [];\n      const v = iy / verticalSegments;\n      for (let ix = 0; ix <= horizontalSegments; ix++) {\n        const u = ix / horizontalSegments;\n        const posX = u * this._parameters.width - this.halfWidth;\n        const posY = v * this._parameters.height - this.halfHeight;\n\n        // POSITION\n        vertices[offset++] = posX;\n        vertices[offset++] = posY;\n        vertices[offset++] = 0;\n        // NORMAL\n        vertices[offset++] = 0;\n        vertices[offset++] = 0;\n        vertices[offset++] = 1;\n        // TEXCOORD_0\n        vertices[offset++] = u;\n        vertices[offset++] = 1 - v;\n\n        verticesRow.push(index++);\n      }\n      grid.push(verticesRow);\n    }\n\n    // Generate indices\n    index = 0;\n    for (let iy = 0; iy < verticalSegments; iy++) {\n      for (let ix = 0; ix < horizontalSegments; ix++) {\n        const a = grid[iy][ix + 1];\n        const b = grid[iy][ix];\n        const c = grid[iy + 1][ix];\n        const d = grid[iy + 1][ix + 1];\n\n        indices[index++] = a;\n        indices[index++] = c;\n        indices[index++] = b;\n        indices[index++] = a;\n        indices[index++] = d;\n        indices[index++] = c;\n      }\n    }\n\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { FrontFace } from \"../base/Constant\";\nimport { Engine } from \"../Engine\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * SphereGeometry.\n */\nexport class CylinderGeometry extends ShapeGeometry {\n  public FrontFace;\n  public index;\n  public indexArray;\n  public halfHeight;\n  private _parameters;\n  private _vertices;\n  private _indices;\n\n  /**\n   * @param  engine - Engine\n   * @param  radiusTop - Cylinder top radius, default is 1.\n   * @param  radiusBottom - Cylinder bottom radius, default is 1.\n   * @param  height - Cylinder height, default is 1.\n   * @param  radialSegments - Number of segmented faces around the circumference of the cylinder. Default is 8\n   * @param  heightSegments - Number of rows of faces along the height of the cylinder. Default is 1.\n   * @param  openEnded - A boolean indicating whether the ends of the cylinder are open or capped. Default is false, meaning capped.\n   * @param  thetaStart - Start angle for first segment, default = 0 (three o'clock position).\n   * @param  thetaLength - The central angle, often called theta, of the circular sector. The default is 2*Pi, which makes for a complete cylinder.\n   */\n  constructor(\n    engine: Engine,\n    radiusTop: number = 1,\n    radiusBottom: number = 1,\n    height: number = 1,\n    radialSegments: number = 8,\n    heightSegments: number = 1,\n    openEnded: boolean = false,\n    thetaStart: number = 0,\n    thetaLength: number = 2 * Math.PI,\n    frontFace: FrontFace = FrontFace.CCW\n  ) {\n    super(engine);\n    this.FrontFace = frontFace;\n    this._parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n\n    this._vertices = [];\n    this._indices = [];\n\n    this.index = 0;\n    this.indexArray = [];\n    this.halfHeight = this._parameters.height / 2;\n\n    this.generateTorso();\n\n    if (this._parameters.openEnded === false) {\n      if (this._parameters.radiusTop > 0) this.generateCap(true);\n      if (this._parameters.radiusBottom > 0) this.generateCap(false);\n    }\n\n    this._initialize(engine, Float32Array.from(this._vertices), Uint16Array.from(this._indices));\n  }\n\n  generateTorso() {\n    const { radialSegments, heightSegments, radiusBottom, radiusTop, height } = this._parameters;\n    let x, y;\n    const normal: Vector3 = new Vector3();\n    const slope = (radiusBottom - radiusTop) / height;\n    for (y = 0; y <= heightSegments; y++) {\n      const indexRow = [];\n      const v = y / heightSegments;\n      const radius = v * (radiusBottom - radiusTop) + radiusTop;\n      for (x = 0; x <= radialSegments; x++) {\n        const u = x / radialSegments;\n        const theta = u * this._parameters.thetaLength + this._parameters.thetaStart;\n        const sinTheta = Math.sin(theta);\n        const cosTheta = Math.cos(theta);\n\n        // vertex\n        const vertX = radius * sinTheta;\n        const vertY = -v * height + this.halfHeight;\n        const vertZ = radius * cosTheta;\n        this._vertices.push(vertX, vertY, vertZ);\n\n        // normal\n        normal.setValue(sinTheta, slope, cosTheta);\n        normal.normalize();\n        this._vertices.push(normal.x, normal.y, normal.z);\n\n        // uv\n        if (this.FrontFace === FrontFace.CCW) {\n          this._vertices.push(u, v);\n        } else {\n          this._vertices.push(1 - u, v);\n        }\n\n        indexRow.push(this.index++);\n      }\n\n      this.indexArray.push(indexRow);\n    }\n\n    for (x = 0; x < radialSegments; x++) {\n      for (y = 0; y < heightSegments; y++) {\n        var a = this.indexArray[y][x];\n        var b = this.indexArray[y + 1][x];\n        var c = this.indexArray[y + 1][x + 1];\n        var d = this.indexArray[y][x + 1];\n\n        // faces\n        this._indices.push(a, b, d);\n        this._indices.push(b, c, d);\n      }\n    }\n  }\n\n  generateCap(isTop) {\n    const { radialSegments } = this._parameters;\n    let x;\n    const radius = isTop === true ? this._parameters.radiusTop : this._parameters.radiusBottom;\n    const sign = isTop === true ? 1 : -1;\n    const centerIndexStart = this.index;\n\n    for (x = 1; x <= radialSegments; x++) {\n      // vertex\n      this._vertices.push(0, this.halfHeight * sign, 0);\n\n      // normal\n      this._vertices.push(0, sign, 0);\n\n      // uv\n      this._vertices.push(0.5, 0.5);\n\n      // increase index\n      this.index++;\n    }\n    const centerIndexEnd = this.index;\n\n    for (x = 0; x <= radialSegments; x++) {\n      const u = x / radialSegments;\n      const theta = u * this._parameters.thetaLength + this._parameters.thetaStart;\n      const cosTheta = Math.cos(theta);\n      const sinTheta = Math.sin(theta);\n\n      // vertex\n      const vertexX = radius * sinTheta;\n      const vertexY = this.halfHeight * sign;\n      const vertexZ = radius * cosTheta;\n      this._vertices.push(vertexX, vertexY, vertexZ);\n\n      // normal\n      this._vertices.push(0, sign, 0);\n\n      // uv\n      const uvX = cosTheta * 0.5 + 0.5;\n      const uvY = sinTheta * 0.5 * sign + 0.5;\n      this._vertices.push(uvX, uvY);\n\n      // increase index\n      this.index++;\n    }\n\n    for (x = 0; x < radialSegments; x++) {\n      var c = centerIndexStart + x;\n      var i = centerIndexEnd + x;\n      if (isTop === true) {\n        // face top\n        this._indices.push(i, i + 1, c);\n      } else {\n        // face bottom\n        this._indices.push(i + 1, i, c);\n      }\n    }\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\ninterface CircleGeometryOptions {\n  radius?: number;\n  segments?: number;\n  thetaStart?: number;\n  thetaLength?: number;\n}\n/**\n * CircleGeometry.\n */\nexport class CircleGeometry extends ShapeGeometry {\n  private radius: number = 1;\n  private segments: number = 16;\n  private thetaStart: number = 0;\n  private thetaLength: number = Math.PI * 2;\n\n  /**\n   * @param engine - Engine\n   * @param radius - Circle radius\n   */\n  constructor(engine: Engine, options: CircleGeometryOptions = {}) {\n    super(engine);\n\n    this.radius = options.radius || this.radius;\n    this.segments = options.segments || this.segments;\n    this.thetaStart = options.thetaStart || this.thetaStart;\n    this.thetaLength = options.thetaLength || this.thetaLength;\n    const { segments, radius } = this;\n\n    // init with center point\n    const vertices: Float32Array = new Float32Array((segments + 2) * 8);\n    // POSITION NORMAL TEXCOORD_0\n    vertices.set([0, 0, 0, 0, 0, 1, 0.5, 0.5]);\n\n    let index = 8;\n    for (let s = 0; s <= segments; s++) {\n      let segment = this.thetaStart + (s / segments) * this.thetaLength;\n      const x = radius * Math.cos(segment);\n      const y = radius * Math.sin(segment);\n\n      // POSITION\n      vertices[index++] = x;\n      vertices[index++] = y;\n      vertices[index++] = 0;\n      // NORMAL\n      vertices[index++] = 0;\n      vertices[index++] = 0;\n      vertices[index++] = 1;\n      // TEXCOORD_0\n      vertices[index++] = (x / radius + 1) * 0.5;\n      vertices[index++] = (y / radius + 1) * 0.5;\n    }\n\n    const indices: Uint16Array = new Uint16Array(segments * 3);\n    index = 0;\n    for (let i = 1; i <= segments; i++) {\n      indices[index++] = i;\n      indices[index++] = i + 1;\n      indices[index++] = 0;\n    }\n\n    this._initialize(engine, vertices, indices);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * A rectangle covering the entire screen.\n * @private\n */\nexport class ScreenQuadGeometry extends ShapeGeometry {\n  constructor(engine: Engine) {\n    super(engine);\n    const vertices: Float32Array = new Float32Array([-1, -1, 0, 0, 0, 1, -1, 0, 1, 0, 1, 1, 0, 1, 1, -1, 1, 0, 0, 1]);\n\n    const indices: Uint16Array = new Uint16Array([0, 1, 2, 3]);\n\n    this._initialize(engine, vertices, indices);\n    this.subGeometry.topology = PrimitiveTopology.TriangleFan;\n  }\n\n  _initialize(engine: Engine, vertices: Float32Array, indices: Uint16Array) {\n    const vertexStride = 20;\n    const vertexElements = [\n      new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"TEXCOORD_0\", 12, VertexElementFormat.Vector2, 0)\n    ];\n    this._initBuffer(engine, vertices, indices, vertexStride, vertexElements);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { ShapeGeometry } from \"./ShapeGeometry\";\n\n/**\n * TorusGeometry.\n */\nexport class TorusGeometry extends ShapeGeometry {\n  constructor(\n    private parameters: {\n      radius?: number;\n      tube?: number;\n      radialSegments?: number;\n      tubularSegments?: number;\n      arc?: number;\n    } = {},\n    engine: Engine\n  ) {\n    super(engine);\n\n    const radius = this.parameters.radius || 1;\n    const tube = this.parameters.tube || 0.4;\n    const radialSegments = Math.floor(this.parameters.radialSegments) || 8;\n    const tubularSegments = Math.floor(this.parameters.tubularSegments) || 6;\n    const arc = this.parameters.arc || Math.PI * 2;\n\n    // buffers\n    const vertices: Float32Array = new Float32Array((radialSegments + 1) * (tubularSegments + 1) * 3);\n    const indices: Uint16Array = new Uint16Array(radialSegments * tubularSegments * 6);\n\n    // generate vertices, normals and uvs\n    let index = 0;\n    for (let j = 0; j <= radialSegments; j++) {\n      for (let i = 0; i <= tubularSegments; i++) {\n        const u = (i / tubularSegments) * arc;\n        const v = (j / radialSegments) * Math.PI * 2;\n\n        // POSITION\n        vertices[index++] = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertices[index++] = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertices[index++] = tube * Math.sin(v);\n      }\n    }\n\n    // generate indices\n    index = 0;\n    for (let j = 1; j <= radialSegments; j++) {\n      for (let i = 1; i <= tubularSegments; i++) {\n        // indices\n        const a = (tubularSegments + 1) * j + i - 1;\n        const b = (tubularSegments + 1) * (j - 1) + i - 1;\n        const c = (tubularSegments + 1) * (j - 1) + i;\n        const d = (tubularSegments + 1) * j + i;\n\n        // faces\n        indices[index++] = a;\n        indices[index++] = b;\n        indices[index++] = d;\n        indices[index++] = b;\n        indices[index++] = c;\n        indices[index++] = d;\n      }\n    }\n    this._initialize(engine, vertices, indices);\n  }\n\n  _initialize(engine: Engine, vertices: Float32Array, indices: Uint16Array) {\n    const vertexStride = 12;\n    const vertexElements = [new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0)];\n\n    this._initBuffer(engine, vertices, indices, vertexStride, vertexElements);\n  }\n}\n","import { Entity } from \"../Entity\";\nimport { GeometryRenderer } from \"../geometry/GeometryRenderer\";\nimport { BlinnPhongMaterial } from \"../material/BlinnPhongMaterial\";\nimport { CuboidGeometry } from \"./CuboidGeometry\";\nimport { CylinderGeometry } from \"./CylinderGeometry\";\nimport { PlaneGeometry } from \"./PlaneGeometry\";\nimport { SphereGeometry } from \"./SphereGeometry\";\n\n// Only for editor\nexport class Model extends GeometryRenderer {\n  private _props: any;\n  private _geometryType: GeometryType;\n\n  set geometryType(value: GeometryType) {\n    switch (value) {\n      case \"Sphere\":\n        const {\n          sphereRadius,\n          sphereHorizontalSegments,\n          sphereVerticalSegments,\n          sphereAlphaStart,\n          sphereAlphaRange,\n          sphereThetaStart,\n          sphereThetaRange\n        } = this._props as any;\n        this.geometry = new SphereGeometry(\n          this.engine,\n          sphereRadius,\n          sphereHorizontalSegments,\n          sphereVerticalSegments,\n          sphereAlphaStart,\n          sphereAlphaRange,\n          sphereThetaStart,\n          sphereThetaRange\n        );\n        break;\n\n      case \"Cylinder\":\n        const {\n          cylinderRadiusTop,\n          cylinderRadiusBottom,\n          cylinderHeight,\n          cylinderRadialSegments,\n          cylinderHeightSegments,\n          cylinderOpenEnded\n        } = this._props as any;\n        this.geometry = new CylinderGeometry(\n          this.engine,\n          cylinderRadiusTop,\n          cylinderRadiusBottom,\n          cylinderHeight,\n          cylinderRadialSegments,\n          cylinderHeightSegments,\n          cylinderOpenEnded,\n          undefined,\n          undefined,\n          undefined\n        );\n        break;\n\n      case \"Plane\":\n        const { planeWidth, planeHeight, planeHorizontalSegments, planeVerticalSegments } = this._props as any;\n        this.geometry = new PlaneGeometry(\n          this.engine,\n          planeWidth,\n          planeHeight,\n          planeHorizontalSegments,\n          planeVerticalSegments\n        );\n        break;\n\n      case \"Box\":\n        var { boxWidth, boxHeight, boxDepth } = this._props as any;\n        this.geometry = new CuboidGeometry(this.engine, boxWidth, boxHeight, boxDepth);\n        break;\n    }\n\n    this._geometryType = value;\n  }\n\n  get geometryType() {\n    return this._geometryType;\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n  }\n\n  get material(): any {\n    return this._material;\n  }\n\n  set material(mtl: any) {\n    if (!mtl) {\n      this._material = new BlinnPhongMaterial(this.engine);\n    } else {\n      this._material = mtl;\n    }\n  }\n\n  init(props: any) {\n    this._props = props;\n\n    const { geometryType = GeometryType.Box } = props;\n    this.material = props.material;\n    this.geometryType = geometryType;\n  }\n\n  setProp(key: string, value: any) {\n    this._props[key] = value;\n\n    if (key === \"material\") {\n      this.material = value;\n    } else {\n      this.geometryType = this._props.geometryType;\n    }\n  }\n}\n\nenum GeometryType {\n  Box = \"Box\",\n  Cylinder = \"Cylinder\",\n  Plane = \"Plane\",\n  Sphere = \"Sphere\"\n}\n","import { Engine } from \"../Engine\";\nimport { Material } from \"../material/Material\";\nimport { CompareFunction } from \"../shader/enums/CompareFunction\";\nimport { CullMode } from \"../shader/enums/CullMode\";\nimport { Shader } from \"../shader/Shader\";\n\n/**\n * SkyboxMaterial\n */\nexport class SkyBoxMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"skybox\"));\n\n    this.renderState.rasterState.cullMode = CullMode.Off;\n    this.renderState.depthState.compareFunction = CompareFunction.LessEqual;\n  }\n}\n","import { BoundingBox, Matrix } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { Entity } from \"../Entity\";\nimport { CuboidGeometry } from \"../geometry-shape/CuboidGeometry\";\nimport { GeometryRenderer } from \"../geometry/GeometryRenderer\";\nimport { TextureCubeMap } from \"../texture/TextureCubeMap\";\nimport { SkyBoxMaterial } from \"./SkyBoxMaterial\";\n\n/**\n * Skybox Component\n */\nexport class SkyBox extends GeometryRenderer {\n  private _skyBoxMap: TextureCubeMap;\n  private _matrix: Matrix = new Matrix();\n  private _initBounds: boolean = false;\n\n  /**\n   * Contructor of skybox\n   * @param - Entity\n   */\n  constructor(entity: Entity) {\n    super(entity);\n    this.geometry = new CuboidGeometry(this.engine, 2, 2, 2);\n    this.material = new SkyBoxMaterial(this.engine);\n  }\n\n  /**\n   * @internal\n   * @param camera\n   */\n  render(camera: Camera) {\n    if (!this._skyBoxMap) return;\n\n    const modelMatrix = this.entity.transform.worldMatrix;\n    const view = camera.viewMatrix;\n    const proj = camera.projectionMatrix;\n    const matrix = this._matrix;\n\n    Matrix.multiply(view, modelMatrix, matrix);\n    const e = matrix.elements;\n    e[12] = e[13] = e[14] = 0;\n    Matrix.multiply(proj, matrix, matrix);\n    this.shaderData.setMatrix(\"u_mvpNoscale\", matrix);\n\n    super.render(camera);\n  }\n\n  /**\n   * CubeMap of current skybox.\n   */\n  get skyBoxMap(): TextureCubeMap {\n    return this._skyBoxMap;\n  }\n\n  set skyBoxMap(v: TextureCubeMap) {\n    this._skyBoxMap = v;\n    v && this.material.shaderData.setTexture(\"u_cube\", v);\n  }\n\n  /**\n   * @override\n   */\n  protected _updateBounds(worldBounds: BoundingBox): void {\n    if (!this._initBounds) {\n      worldBounds.min.setValue(Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\n      worldBounds.max.setValue(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\n      this._initBounds = true;\n    }\n  }\n}\n","import { MathUtil, Vector3 } from \"@oasis-engine/math\";\nimport { BufferGeometry, GeometryRenderer } from \"../geometry\";\nimport { Buffer } from \"../graphic/Buffer\";\nimport { BufferBindFlag } from \"../graphic/enums/BufferBindFlag\";\nimport { BufferUsage } from \"../graphic/enums/BufferUsage\";\nimport { IndexFormat } from \"../graphic/enums/IndexFormat\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { Material } from \"../material/Material\";\nimport { BlendFactor } from \"../shader/enums/BlendFactor\";\nimport { RenderQueueType } from \"../material/enums/RenderQueueType\";\nimport { Shader, CullMode } from \"../shader\";\nimport { Texture } from \"../texture\";\n\nenum DirtyFlagType {\n  Position = 0x1,\n  Velocity = 0x2,\n  Acceleration = 0x4,\n  Color = 0x8,\n  Apha = 0x10,\n  Size = 0x20,\n  StartAngle = 0x40,\n  StartTime = 0x80,\n  LifeTime = 0x100,\n  RotateVelocity = 0x200,\n  Scale = 0x400,\n  Everything = 0xffffffff\n}\n\n/**\n * Particle Renderer Component\n */\nexport class ParticleRenderer extends GeometryRenderer {\n  private static _getRandom(): number {\n    return Math.random() - 0.5;\n  }\n\n  private _vertexStride: number;\n  private _vertices: Float32Array;\n  private _vertexBuffer: Buffer;\n  private _maxCount: number = 1000;\n  private _position: Vector3 = new Vector3();\n  private _positionRandomness: Vector3 = new Vector3();\n  private _positionArray: Vector3[];\n  private _velocity: Vector3 = new Vector3();\n  private _velocityRandomness: Vector3 = new Vector3();\n  private _acceleration: Vector3 = new Vector3();\n  private _accelerationRandomness: Vector3 = new Vector3();\n  private _color: Vector3 = new Vector3(1, 1, 1);\n  private _colorRandomness: number = 0;\n  private _size: number = 1;\n  private _sizeRandomness: number = 0;\n  private _alpha: number = 1;\n  private _alphaRandomness: number = 0;\n  private _startAngle: number = 0;\n  private _startAngleRandomness: number = 0;\n  private _rotateVelocity: number = 0;\n  private _rotateVelocityRandomness: number = 0;\n  private _lifetime: number = 5;\n  private _startTimeRandomness: number = 0;\n  private _scale: number = 1;\n  private _isOnce: boolean = false;\n  private _time: number = 0;\n  private _isInit: boolean = false;\n  private _isStart: boolean = false;\n  private _updateDirtyFlag: number = DirtyFlagType.Everything;\n  private _isRotateToVelocity: boolean = false;\n  private _isUseOriginColor: boolean = false;\n  private _isScaleByLifetime: boolean = false;\n  private _is2d: boolean = true;\n  private _isFadeIn: boolean = false;\n  private _isFadeOut: boolean = false;\n\n  /**\n   * Sprite sheet of texture.\n   */\n  public spriteSheet: { x: number; y: number; w: number; h: number }[];\n\n  /**\n   * Texture of particle.\n   */\n  get texture(): Texture {\n    return this.material.shaderData.getTexture('u_texture');\n  }\n\n  set texture(texture: Texture) {\n    if (texture) {\n      this.shaderData.enableMacro('particleTexture');\n      this.material.shaderData.setTexture('u_texture', texture);\n    } else {\n      this.shaderData.disableMacro('particleTexture');\n    }\n  }\n\n  /**\n   * Position of particles.\n   */\n  get position(): Vector3 {\n    return this._position;\n  }\n\n  set position(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Position;\n    this._position = value;\n  }\n\n  /**\n   * Random range of positions.\n   */\n  get positionRandomness(): Vector3 {\n    return this._positionRandomness;\n  }\n\n  set positionRandomness(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Position;\n    this._positionRandomness = value;\n  }\n\n  /**\n   * Array of fixed positions.\n   */\n  get positionArray(): Vector3[] {\n    return this._positionArray;\n  }\n\n  set positionArray(value: Vector3[]) {\n    this._updateDirtyFlag |= DirtyFlagType.Position;\n    this._positionArray = value;\n  }\n\n  /**\n   * Velocity of particles.\n   */\n  get velocity(): Vector3 {\n    return this._velocity;\n  }\n\n  set velocity(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Velocity;\n    this._velocity = value;\n  }\n\n  /**\n   * Random range of velocity.\n   */\n  get velocityRandomness(): Vector3 {\n    return this._velocityRandomness;\n  }\n\n  set velocityRandomness(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Velocity;\n    this._velocityRandomness = value;\n  }\n\n  /**\n   * Acceleration of particles.\n   */\n  get acceleration(): Vector3 {\n    return this._acceleration;\n  }\n\n  set acceleration(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Acceleration;\n    this._acceleration = value;\n  }\n\n  /**\n   * Random range of acceleration.\n   */\n  get accelerationRandomness(): Vector3 {\n    return this._accelerationRandomness;\n  }\n\n  set accelerationRandomness(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Acceleration;\n    this._accelerationRandomness = value;\n  }\n\n  /**\n   * Color of particles.\n   */\n  get color(): Vector3 {\n    return this._color;\n  }\n\n  set color(value: Vector3) {\n    this._updateDirtyFlag |= DirtyFlagType.Color;\n    this._color = value;\n  }\n\n  /**\n   * Random range of color.\n   */\n  get colorRandomness(): number {\n    return this._colorRandomness;\n  }\n\n  set colorRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Color;\n    this._colorRandomness = value;\n  }\n\n  /**\n   * Size of particles.\n   */\n  get size(): number {\n    return this._size;\n  }\n\n  set size(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Size;\n    this._size = value;\n  }\n\n  /**\n   * Random range of size.\n   */\n  get sizeRandomness(): number {\n    return this._sizeRandomness;\n  }\n\n  set sizeRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Size;\n    this._sizeRandomness = value;\n  }\n\n  /**\n   * Alpha of particles.\n   */\n  get alpha(): number {\n    return this._alpha;\n  }\n\n  set alpha(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Apha;\n    this._alpha = value;\n  }\n\n  /**\n   * Random range of alpha.\n   */\n  get alphaRandomness(): number {\n    return this._alphaRandomness;\n  }\n\n  set alphaRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Apha;\n    this._alphaRandomness = value;\n  }\n\n  /**\n   * Angle of particles.\n   */\n  get angle(): number {\n    return this._startAngle;\n  }\n\n  set angle(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.StartAngle;\n    this._startAngle = value;\n  }\n\n  /**\n   * Random range of angle.\n   */\n  get angleRandomness(): number {\n    return this._startAngleRandomness;\n  }\n\n  set angleRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.StartAngle;\n    this._startAngleRandomness = value;\n  }\n\n  /**\n   * Rotate velocity of particles.\n   */\n  get rotateVelocity(): number {\n    return this._rotateVelocity;\n  }\n\n  set rotateVelocity(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.RotateVelocity;\n    this._rotateVelocity = value;\n  }\n\n  /**\n   * Random range of rotate velocity.\n   */\n  get rotateVelocityRandomness(): number {\n    return this._rotateVelocityRandomness;\n  }\n\n  set rotateVelocityRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.RotateVelocity;\n    this._rotateVelocityRandomness = value;\n  }\n\n  /**\n   * Lifetime of particles.\n   */\n  get lifetime(): number {\n    return this._lifetime;\n  }\n\n  set lifetime(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.LifeTime;\n    this._lifetime = value;\n  }\n\n  /**\n   * Random range of start time.\n   */\n  get startTimeRandomness(): number {\n    return this._startTimeRandomness;\n  }\n\n  set startTimeRandomness(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.StartTime;\n    this._startTimeRandomness = value;\n  }\n\n  /**\n   * Scale factor of particles.\n   */\n  get scale(): number {\n    return this._scale;\n  }\n\n  set scale(value: number) {\n    this._updateDirtyFlag |= DirtyFlagType.Scale;\n    this._scale = value;\n  }\n\n  /**\n   * Max count of particles.\n   */\n  get maxCount(): number {\n    return this._maxCount;\n  }\n\n  set maxCount(value: number) {\n    this._isStart = false;\n    this._isInit = false;\n    this._maxCount = value;\n    this.geometry = this._createGeometry();\n\n    this._updateBuffer();\n\n    this._isInit = true;\n  }\n\n  /**\n   * Play once or not.\n   */\n  get isOnce(): boolean {\n    return this._isOnce;\n  }\n\n  set isOnce(value: boolean) {\n    this.shaderData.setInt(\"u_once\", value ? 1 : 0);\n    this._isOnce = value;\n  }\n\n  /**\n   * Follow the direction of velocity or not.\n   */\n  get isRotateToVelocity(): boolean {\n    return this._isRotateToVelocity;\n  }\n\n  set isRotateToVelocity(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"rotateToVelocity\");\n    } else {\n      this.shaderData.disableMacro(\"rotateToVelocity\");\n    }\n\n    this._isRotateToVelocity = value;\n  }\n\n  /**\n   * Follow the direction of velocity or not.\n   */\n  get isUseOriginColor(): boolean {\n    return this._isUseOriginColor;\n  }\n\n  set isUseOriginColor(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"useOriginColor\");\n    } else {\n      this.shaderData.disableMacro(\"useOriginColor\");\n    }\n\n    this._isUseOriginColor = value;\n  }\n\n  /**\n   * Is scale by lifetime  or not.\n   */\n  get isScaleByLifetime(): boolean {\n    return this._isScaleByLifetime;\n  }\n\n  set isScaleByLifetime(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"isScaleByLifetime\");\n    } else {\n      this.shaderData.disableMacro(\"isScaleByLifetime\");\n    }\n\n    this._isScaleByLifetime = value;\n  }\n\n  /**\n   * Is 2D rendering or not.\n   */\n  get is2d(): boolean {\n    return this._is2d;\n  }\n\n  set is2d(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"is2d\");\n    } else {\n      this.shaderData.disableMacro(\"is2d\");\n    }\n\n    this._is2d = value;\n  }\n\n  /**\n   * Is fade in or not.\n   */\n  get isFadeIn(): boolean {\n    return this._isFadeIn;\n  }\n\n  set isFadeIn(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"fadeIn\");\n    } else {\n      this.shaderData.disableMacro(\"fadeIn\");\n    }\n\n    this._isFadeIn = value;\n  }\n\n  /**\n   * Is fade out or not.\n   */\n  get isFadeOut(): boolean {\n    return this._isFadeOut;\n  }\n\n  set isFadeOut(value: boolean) {\n    if (value) {\n      this.shaderData.enableMacro(\"fadeOut\");\n    } else {\n      this.shaderData.disableMacro(\"fadeOut\");\n    }\n\n    this._isFadeOut = value;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._material = this._createMaterial();\n  }\n\n  /**\n   * @override\n   * @internal\n   */\n  update(deltaTime: number) {\n    if (!this._isInit || !this._isStart) {\n      return;\n    }\n\n    if (this._updateDirtyFlag) {\n      this._updateBuffer();\n      this._updateDirtyFlag = 0;\n    }\n\n    this._time += deltaTime / 1000;\n    this.shaderData.setFloat(\"u_time\", this._time);\n  }\n\n  /**\n   * start emitting\n   */\n  start() {\n    this._isStart = true;\n    this._time = 0;\n    this.shaderData.setInt(\"u_active\", 1);\n  }\n\n  /**\n   * stop emitting\n   */\n  stop() {\n    this.shaderData.setInt(\"u_active\", 0);\n  }\n\n  private _createMaterial() {\n    const material = new Material(this.engine, Shader.find(\"particle-shader\"));\n    const { renderState } = material;\n    const target = renderState.blendState.targetBlendState;\n\n    target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n\n    renderState.depthState.writeEnabled = false;\n\n    if (!this.is2d) {\n      renderState.rasterState.cullMode = CullMode.Off;\n    }\n\n    material.renderQueueType = RenderQueueType.Transparent;\n\n    this.isUseOriginColor = true;\n    this.is2d = true;\n    this.isFadeOut = true;\n\n    return material;\n  }\n\n  private _createGeometry() {\n    const geometry = new BufferGeometry(this._entity.engine, \"particleGeometry\");\n    const vertexStride = 96;\n    const vertexFloatCount = this._maxCount * 4 * vertexStride;\n    const vertices = new Float32Array(vertexFloatCount);\n    const indices = new Uint16Array(6 * this._maxCount);\n\n    for (let i = 0, idx = 0; i < this._maxCount; ++i) {\n      let startIndex = i * 4;\n      indices[idx++] = startIndex + 0;\n      indices[idx++] = startIndex + 1;\n      indices[idx++] = startIndex + 2;\n      indices[idx++] = startIndex + 0;\n      indices[idx++] = startIndex + 2;\n      indices[idx++] = startIndex + 3;\n    }\n\n    const vertexElements = [\n      new VertexElement(\"a_position\", 0, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"a_velocity\", 12, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"a_acceleration\", 24, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"a_color\", 36, VertexElementFormat.Vector4, 0),\n      new VertexElement(\"a_lifeAndSize\", 52, VertexElementFormat.Vector4, 0),\n      new VertexElement(\"a_rotation\", 68, VertexElementFormat.Vector2, 0),\n      new VertexElement(\"a_uv\", 76, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"a_normalizedUv\", 88, VertexElementFormat.Vector2, 0)\n    ];\n\n    const vertexBuffer = new Buffer(\n      this.engine,\n      BufferBindFlag.VertexBuffer,\n      vertexFloatCount * 4,\n      BufferUsage.Dynamic\n    );\n\n    const indexBuffer = new Buffer(this.engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Dynamic);\n\n    geometry.setVertexBufferBinding(vertexBuffer, vertexStride);\n    geometry.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n    geometry.setVertexElements(vertexElements);\n    geometry.addSubGeometry(0, indices.length);\n\n    this._vertexBuffer = vertexBuffer;\n    this._vertexStride = vertexStride / 4;\n    this._vertices = vertices;\n    return geometry;\n  }\n\n  private _updateBuffer() {\n    for (let x = 0; x < this._maxCount; x++) {\n      this._updateSingleBuffer(x);\n    }\n\n    this._vertexBuffer.setData(this._vertices);\n  }\n\n  private _updateSingleBuffer(i: number) {\n    const { _updateDirtyFlag, _vertices: vertices, _vertexStride: vertexStride } = this;\n    const { _getRandom: getRandom } = ParticleRenderer;\n    const offset = i * 4;\n\n    const k0 = offset * vertexStride;\n    const k1 = (offset + 1) * vertexStride;\n    const k2 = (offset + 2) * vertexStride;\n    const k3 = (offset + 3) * vertexStride;\n\n    if (_updateDirtyFlag & DirtyFlagType.Position) {\n      let { x, y, z } = this._position;\n      const { _positionArray, _positionRandomness } = this;\n\n      if (_positionArray) {\n        if (_positionArray.length !== this._maxCount) {\n          throw Error(\"The length of positionArray must be equal to maxCount.\");\n        }\n        const pos = _positionArray[i];\n\n        x += pos.x;\n        y += pos.y;\n        z += pos.z;\n      } else {\n        x += getRandom() * _positionRandomness.x;\n        y += getRandom() * _positionRandomness.y;\n        z += getRandom() * _positionRandomness.z;\n      }\n\n      vertices[k0] = vertices[k1] = vertices[k2] = vertices[k3] = x;\n      vertices[k0 + 1] = vertices[k1 + 1] = vertices[k2 + 1] = vertices[k3 + 1] = y;\n      vertices[k0 + 2] = vertices[k1 + 2] = vertices[k2 + 2] = vertices[k3 + 2] = z;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Velocity) {\n      const { _velocity, _velocityRandomness } = this;\n\n      vertices[k0 + 3] = vertices[k1 + 3] = vertices[k2 + 3] = vertices[k3 + 3] =\n        _velocity.x + getRandom() * _velocityRandomness.x;\n      vertices[k0 + 4] = vertices[k1 + 4] = vertices[k2 + 4] = vertices[k3 + 4] =\n        _velocity.y + getRandom() * _velocityRandomness.y;\n      vertices[k0 + 5] = vertices[k1 + 5] = vertices[k2 + 5] = vertices[k3 + 5] =\n        _velocity.z + getRandom() * _velocityRandomness.z;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Acceleration) {\n      const { _acceleration, _accelerationRandomness } = this;\n\n      vertices[k0 + 6] = vertices[k1 + 6] = vertices[k2 + 6] = vertices[k3 + 6] =\n        _acceleration.x + getRandom() * _accelerationRandomness.x;\n      vertices[k0 + 7] = vertices[k1 + 7] = vertices[k2 + 7] = vertices[k3 + 7] =\n        _acceleration.y + getRandom() * _accelerationRandomness.y;\n      vertices[k0 + 8] = vertices[k1 + 8] = vertices[k2 + 8] = vertices[k3 + 8] =\n        _acceleration.z + getRandom() * _accelerationRandomness.z;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Color) {\n      const { _color, _colorRandomness } = this;\n\n      vertices[k0 + 9] = vertices[k1 + 9] = vertices[k2 + 9] = vertices[k3 + 9] = MathUtil.clamp(\n        _color.x + getRandom() * _colorRandomness,\n        0,\n        1\n      );\n      vertices[k0 + 10] = vertices[k1 + 10] = vertices[k2 + 10] = vertices[k3 + 10] = MathUtil.clamp(\n        _color.y + getRandom() * _colorRandomness,\n        0,\n        1\n      );\n      vertices[k0 + 11] = vertices[k1 + 11] = vertices[k2 + 11] = vertices[k3 + 11] = MathUtil.clamp(\n        _color.z + getRandom() * _colorRandomness,\n        0,\n        1\n      );\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Apha) {\n      vertices[k0 + 12] = vertices[k1 + 12] = vertices[k2 + 12] = vertices[k3 + 12] = MathUtil.clamp(\n        this._alpha + getRandom() * this._alphaRandomness,\n        0,\n        1\n      );\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.StartTime) {\n      vertices[k0 + 13] = vertices[k1 + 13] = vertices[k2 + 13] = vertices[k3 + 13] =\n        Math.random() * this._startTimeRandomness;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.LifeTime) {\n      const { _lifetime } = this;\n\n      vertices[k0 + 14] = vertices[k1 + 14] = vertices[k2 + 14] = vertices[k3 + 14] =\n        _lifetime + getRandom() * _lifetime;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Size) {\n      const { _size } = this;\n\n      vertices[k0 + 15] = vertices[k1 + 15] = vertices[k2 + 15] = vertices[k3 + 15] = Math.max(\n        _size + getRandom() * this._sizeRandomness * _size * 2,\n        0\n      );\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.Scale) {\n      vertices[k0 + 16] = vertices[k1 + 16] = vertices[k2 + 16] = vertices[k3 + 16] = this._scale;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.StartAngle) {\n      vertices[k0 + 17] = vertices[k1 + 17] = vertices[k2 + 17] = vertices[k3 + 17] =\n        this._startAngle + getRandom() * Math.PI * this._startAngleRandomness * 2;\n    }\n\n    if (_updateDirtyFlag & DirtyFlagType.RotateVelocity) {\n      vertices[k0 + 18] = vertices[k1 + 18] = vertices[k2 + 18] = vertices[k3 + 18] =\n        this._rotateVelocity + getRandom() * this._rotateVelocityRandomness;\n    }\n\n    this._updateSingleUv(i, k0, k1, k2, k3);\n  }\n\n  private _updateSingleUv(i: number, k0: number, k1: number, k2: number, k3: number) {\n    const { spriteSheet } = this;\n    const texture = this._material.shaderData.getTexture(\"u_texture\");\n    const vertices = this._vertices;\n\n    if (texture) {\n      const width = texture.width;\n      const height = texture.height;\n\n      if (spriteSheet) {\n        const { x, y, w, h } = spriteSheet[i % spriteSheet.length];\n\n        const u = x / width;\n        const v = y / height;\n        const p = u + w / width;\n        const q = v + h / height;\n        const ratio = h / w;\n\n        // left bottom\n        vertices[k0 + 19] = u;\n        vertices[k0 + 20] = q;\n        vertices[k0 + 21] = ratio;\n\n        // right bottom\n        vertices[k1 + 19] = p;\n        vertices[k1 + 20] = q;\n        vertices[k1 + 21] = ratio;\n\n        // right top\n        vertices[k2 + 19] = p;\n        vertices[k2 + 20] = v;\n        vertices[k2 + 21] = ratio;\n\n        // left top\n        vertices[k3 + 19] = u;\n        vertices[k3 + 20] = v;\n        vertices[k3 + 21] = ratio;\n      } else {\n        const ratio = height / width;\n\n        // left bottom\n        vertices[k0 + 19] = 0;\n        vertices[k0 + 20] = 0;\n        vertices[k0 + 21] = ratio;\n\n        // right bottom\n        vertices[k1 + 19] = 1;\n        vertices[k1 + 20] = 0;\n        vertices[k1 + 21] = ratio;\n\n        // right top\n        vertices[k2 + 19] = 1;\n        vertices[k2 + 20] = 1;\n        vertices[k2 + 21] = ratio;\n\n        // left top\n        vertices[k3 + 19] = 0;\n        vertices[k3 + 20] = 1;\n        vertices[k3 + 21] = ratio;\n      }\n    } else {\n      // left bottom\n      vertices[k0 + 19] = 0;\n      vertices[k0 + 20] = 0;\n      vertices[k0 + 21] = 1;\n\n      // right bottom\n      vertices[k1 + 19] = 1;\n      vertices[k1 + 20] = 0;\n      vertices[k1 + 21] = 1;\n\n      // right top\n      vertices[k2 + 19] = 1;\n      vertices[k2 + 20] = 1;\n      vertices[k2 + 21] = 1;\n\n      // left top\n      vertices[k3 + 19] = 0;\n      vertices[k3 + 20] = 1;\n      vertices[k3 + 21] = 1;\n    }\n\n    vertices[k0 + 22] = -0.5;\n    vertices[k0 + 23] = -0.5;\n    vertices[k1 + 22] = 0.5;\n    vertices[k1 + 23] = -0.5;\n    vertices[k2 + 22] = 0.5;\n    vertices[k2 + 23] = 0.5;\n    vertices[k3 + 22] = -0.5;\n    vertices[k3 + 23] = 0.5;\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { Material } from \"../material/Material\";\nimport { BlendFactor, Shader } from \"../shader\";\nimport FRAG_SHADER from \"./trail.fs.glsl\";\nimport VERT_SHADER from \"./trail.vs.glsl\";\n\nShader.create(\"trail\", VERT_SHADER, FRAG_SHADER);\n\nexport class TrailMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"trail\"));\n\n    const target = this.renderState.blendState.targetBlendState;\n    target.sourceColorBlendFactor = target.sourceAlphaBlendFactor = BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = target.destinationAlphaBlendFactor = BlendFactor.One;\n\n    this.renderState.depthState.writeEnabled = false;\n  }\n}\n","import { Matrix, Quaternion, Vector3 } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { Entity } from \"../Entity\";\nimport { BufferGeometry, GeometryRenderer } from \"../geometry\";\nimport { Buffer } from \"../graphic/Buffer\";\nimport { BufferUsage } from \"../graphic/enums/BufferUsage\";\nimport { PrimitiveTopology } from \"../graphic/enums/PrimitiveTopology\";\nimport { VertexElementFormat } from \"../graphic/enums/VertexElementFormat\";\nimport { VertexElement } from \"../graphic/VertexElement\";\nimport { Texture2D } from \"../texture\";\nimport { TrailMaterial } from \"./TrailMaterial\";\n\nconst _tempVector3 = new Vector3();\n\n/**\n * @deprecated\n */\nexport class TrailRenderer extends GeometryRenderer {\n  private _vertexStride: number;\n  private _vertices: Float32Array;\n  private _vertexBuffer: Buffer;\n  private _stroke;\n  private _minSeg;\n  private _lifetime;\n  private _maxPointNum;\n  private _points: Array<Vector3>;\n  private _pointStates: Array<number>;\n  private _strapPoints: Array<Vector3>;\n  private _curPointNum;\n  private _prePointsNum;\n  /**\n   * @deprecated\n   */\n  constructor(entity: Entity, props: any) {\n    super(entity);\n\n    this._stroke = props.stroke || 0.2;\n    this._minSeg = props.minSeg || 0.02;\n    this._lifetime = props.lifetime || 1000;\n    this._maxPointNum = (this._lifetime / 1000.0) * entity.engine.targetFrameRate;\n\n    this._points = [];\n    this._pointStates = [];\n    this._strapPoints = [];\n    for (let i = 0; i < this._maxPointNum; i++) {\n      this._points.push(new Vector3());\n      this._pointStates.push(this._lifetime);\n\n      this._strapPoints.push(new Vector3());\n      this._strapPoints.push(new Vector3());\n    }\n    this._curPointNum = 0;\n\n    const mtl = props.material || new TrailMaterial(this.engine);\n    this.material = mtl;\n\n    this.setTexture(props.texture);\n    this._initGeometry();\n  }\n\n  /**\n   * @internal\n   */\n  update(deltaTime: number) {\n    let mov = 0,\n      newIdx = 0;\n    for (let i = 0; i < this._curPointNum; i++) {\n      this._pointStates[i] -= deltaTime;\n      if (this._pointStates[i] < 0) {\n        mov++;\n      } else if (mov > 0) {\n        newIdx = i - mov;\n\n        // Move data\n        this._pointStates[newIdx] = this._pointStates[i];\n\n        // Move point\n        this._points[i].cloneTo(this._points[newIdx]);\n      }\n    }\n    this._curPointNum -= mov;\n\n    let appendNewPoint = true;\n    if (this._curPointNum === this._maxPointNum) {\n      appendNewPoint = false;\n    } else if (this._curPointNum > 0) {\n      const lastPoint = this._points[this._points.length - 1];\n      if (Vector3.distance(this.entity.worldPosition, lastPoint) < this._minSeg) {\n        appendNewPoint = false;\n      } else {\n        // debugger\n      }\n    }\n\n    if (appendNewPoint) {\n      this._pointStates[this._curPointNum] = this._lifetime;\n      this.entity.worldPosition.cloneTo(this._points[this._curPointNum]);\n\n      this._curPointNum++;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  render(camera: Camera) {\n    this._updateStrapVertices(camera, this._points);\n    this._updateStrapCoords();\n    this._vertexBuffer.setData(this._vertices);\n\n    super.render(camera);\n  }\n\n  /**\n   * @deprecated\n   * Set trail texture.\n   * @param texture\n   */\n  setTexture(texture: Texture2D) {\n    if (texture) {\n      this.material.shaderData.setTexture(\"u_texture\", texture);\n    }\n  }\n\n  private _initGeometry() {\n    const geometry = new BufferGeometry(this._entity.engine);\n\n    const vertexStride = 20;\n    const vertexCount = this._maxPointNum * 2;\n    const vertexFloatCount = vertexCount * vertexStride;\n    const vertices = new Float32Array(vertexFloatCount);\n    const vertexElements = [\n      new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n      new VertexElement(\"TEXCOORD_0\", 12, VertexElementFormat.Vector2, 0)\n    ];\n    const vertexBuffer = new Buffer(this.engine, vertexFloatCount * 4, BufferUsage.Dynamic);\n\n    geometry.setVertexBufferBinding(vertexBuffer, vertexStride);\n    geometry.setVertexElements(vertexElements);\n    geometry.addSubGeometry(0, vertexCount, PrimitiveTopology.TriangleStrip);\n\n    this._vertexBuffer = vertexBuffer;\n    this._vertexStride = vertexStride;\n    this._vertices = vertices;\n    this.geometry = geometry;\n  }\n\n  private _updateStrapVertices(camera, points: Array<Vector3>) {\n    const m: Matrix = camera.viewMatrix;\n    const e = m.elements;\n    const vx = new Vector3(e[0], e[4], e[8]);\n    const vy = new Vector3(e[1], e[5], e[9]);\n    const vz = new Vector3(e[2], e[6], e[10]);\n    const s = this._stroke;\n\n    vy.scale(s);\n\n    const up = new Vector3();\n    const down = new Vector3();\n\n    const rotation = new Quaternion();\n\n    Vector3.transformByQuat(vx, rotation, vx);\n    Vector3.transformByQuat(vy, rotation, vy);\n\n    const dy = new Vector3();\n    const cross = new Vector3();\n    const perpVector = new Vector3();\n\n    vx.normalize();\n\n    const vertieces = this._vertices;\n    //-- quad pos\n    for (let i = 0; i < this._maxPointNum; i++) {\n      //-- center pos\n      if (i < this._curPointNum) {\n        const p = points[i];\n\n        if (i === this._curPointNum - 1 && i !== 0) {\n          Vector3.subtract(p, points[i - 1], perpVector);\n        } else {\n          Vector3.subtract(points[i + 1], p, perpVector);\n        }\n\n        this._projectOnPlane(perpVector, vz, perpVector);\n        perpVector.normalize();\n\n        // Calculate angle between vectors\n        let angle = Math.acos(Vector3.dot(vx, perpVector));\n        Vector3.cross(vx, perpVector, cross);\n        if (Vector3.dot(cross, vz) <= 0) {\n          angle = Math.PI * 2 - angle;\n        }\n        Quaternion.rotationAxisAngle(vz, angle, rotation);\n        Vector3.transformByQuat(vy, rotation, dy);\n\n        Vector3.add(p, dy, up);\n        Vector3.subtract(p, dy, down);\n      }\n\n      const p0 = (i * 2 * this._vertexStride) / 4;\n      const p1 = ((i * 2 + 1) * this._vertexStride) / 4;\n      vertieces[p0] = up.x;\n      vertieces[p0 + 1] = up.y;\n      vertieces[p0 + 2] = up.z;\n\n      vertieces[p1] = down.x;\n      vertieces[p1 + 1] = down.y;\n      vertieces[p1 + 2] = down.z;\n    }\n  }\n\n  private _updateStrapCoords() {\n    if (this._prePointsNum === this._curPointNum) {\n      return;\n    }\n\n    this._prePointsNum = this._curPointNum;\n\n    const count = this._curPointNum;\n    const texDelta = 1.0 / count;\n    const vertieces = this._vertices;\n    for (let i = 0; i < count; i++) {\n      const d = 1.0 - i * texDelta;\n      const p0 = (i * 2 * this._vertexStride) / 4;\n      const p1 = ((i * 2 + 1) * this._vertexStride) / 4;\n\n      vertieces[p0] = 0;\n      vertieces[p0 + 1] = d;\n\n      vertieces[p1] = 1.0;\n      vertieces[p1 + 1] = d;\n    }\n  }\n\n  private _projectOnVector(a: Vector3, p: Vector3, out: Vector3): void {\n    const n_p = p.clone();\n    Vector3.normalize(n_p, n_p);\n    const cosine = Vector3.dot(a, n_p);\n    out.x = n_p.x * cosine;\n    out.y = n_p.y * cosine;\n    out.z = n_p.z * cosine;\n  }\n\n  private _projectOnPlane(a: Vector3, n: Vector3, out: Vector3) {\n    this._projectOnVector(a, n, _tempVector3);\n    Vector3.subtract(a, _tempVector3, out);\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\nimport { ABoxCollider } from \"./ABoxCollider\";\n\nexport class BoxCollider extends ABoxCollider {\n  private _center: Vector3 = new Vector3();\n  private _size: Vector3 = new Vector3();\n  private isShowCollider: boolean = true;\n\n  get center(): Vector3 {\n    return this._center;\n  }\n\n  set center(value: Vector3) {\n    this._center = value;\n    this.setBoxCenterSize(this._center, this._size);\n  }\n\n  get size(): Vector3 {\n    return this._size;\n  }\n\n  set size(value: Vector3) {\n    this._size = value;\n    this.setBoxCenterSize(this._center, this._size);\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.center = this.center;\n    this.size = this.size;\n    this.isShowCollider = this.isShowCollider;\n  }\n}\n","import { Vector3 } from \"@oasis-engine/math\";\nimport { Entity } from \"../Entity\";\nimport { ASphereCollider } from \"./ASphereCollider\";\n\nexport class SphereCollider extends ASphereCollider {\n  private __center: Vector3 = new Vector3();\n  private __radius: number = 1.0;\n  private isShowCollider: boolean = true;\n\n  get _center(): Vector3 {\n    return this.__center;\n  }\n\n  set _center(value: Vector3) {\n    this.__center = value;\n    this.setSphere(this.__center, this.__radius);\n  }\n\n  get _radius() {\n    return this.__radius;\n  }\n\n  set _radius(value: number) {\n    this.__radius = value;\n    this.setSphere(this.__center, this.__radius);\n  }\n\n  constructor(entity: Entity) {\n    super(entity);\n\n    this._center = this._center;\n    this._radius = this._radius;\n    this.isShowCollider = this.isShowCollider;\n  }\n}\n","import { ColliderFeature } from \"./ColliderFeature\";\nimport { Scene } from \"../Scene\";\nScene.registerFeature(ColliderFeature);\n\n//-- colliders\nexport { ColliderFeature };\nexport { Collider as ACollider } from \"./Collider\";\nexport { ABoxCollider } from \"./ABoxCollider\";\nexport { PlaneCollider } from \"./PlaneCollider\";\nexport { ASphereCollider } from \"./ASphereCollider\";\nexport { BoxCollider } from \"./BoxCollider\";\nexport { SphereCollider } from \"./SphereCollider\";\n","import { Vector3 } from \"@oasis-engine/math\";\n\n/**\n * AABBox = {\n *  min: [-1,-1,-1],\n *  max: [1,1,1]\n * };\n *\n * Sphere = {\n *  center: [0,0,0],\n *  radius: 1\n * };\n */\n\n/**\n * Check whether the boxes intersect.\n * @param boxA - The first box to check\n * @param boxB - The second box to check\n * @returns True if the boxes intersect, false otherwise\n */\nexport function intersectBox2Box(boxA, boxB) {\n  return (\n    boxA.min.x <= boxB.max.x &&\n    boxA.max.x >= boxB.min.x &&\n    boxA.min.y <= boxB.max.y &&\n    boxA.max.y >= boxB.min.y &&\n    boxA.min.z <= boxB.max.z &&\n    boxA.max.z >= boxB.min.z\n  );\n}\n\n/**\n * Check whether the spheres intersect.\n * @param sphereA - The first sphere to check\n * @param sphereB - The second sphere to check\n * @returns True if the spheres intersect, false otherwise\n */\nexport function intersectSphere2Sphere(sphereA, sphereB) {\n  const distance = Vector3.distance(sphereA.center, sphereB.center);\n  return distance < sphereA.radius + sphereA.radius;\n}\n\n/**\n * Check whether the sphere and the box intersect.\n * @param sphere - The sphere to check\n * @param box - The box to check\n * @returns True if the sphere and the box intersect, false otherwise\n */\nexport function intersectSphere2Box(sphere, box) {\n  const center: Vector3 = sphere.center;\n\n  const closestPoint: Vector3 = new Vector3(\n    Math.max(box.min.x, Math.min(center.x, box.max.x)),\n    Math.max(box.min.y, Math.min(center.y, box.max.y)),\n    Math.max(box.min.z, Math.min(center.z, box.max.z))\n  );\n\n  const distance = Vector3.distance(center, closestPoint);\n  return distance < sphere.radius;\n}\n","import { BoundingBox, Vector3 } from \"@oasis-engine/math\";\nimport { Event } from \"../base/Event\";\nimport { EventDispatcher } from \"../base/EventDispatcher\";\nimport { ACollider } from \"../collider\";\nimport { ABoxCollider } from \"../collider/ABoxCollider\";\nimport { ASphereCollider } from \"../collider/ASphereCollider\";\nimport { ColliderFeature } from \"../collider/ColliderFeature\";\nimport { Script } from \"../Script\";\nimport { intersectBox2Box, intersectSphere2Box, intersectSphere2Sphere } from \"./intersect\";\n\n/**\n * Detect collisions between the Collider on the current entity and other Colliders in the scene.\n */\nexport class CollisionDetection extends Script {\n  private static _tempVec3: Vector3 = new Vector3();\n  private static _tempBox1: BoundingBox = new BoundingBox();\n  private static _tempBox2: BoundingBox = new BoundingBox();\n\n  private _colliderManager;\n  private _myCollider;\n  private _overlopCollider;\n  private _sphere;\n  private _box: BoundingBox = new BoundingBox();\n\n  /**\n   * Constructor of the colliseion detection.\n   * @param entity - Entity to which the colliseion detection belong\n   */\n  constructor(entity) {\n    super(entity);\n  }\n\n  /**\n   * The collider that intersects with the collider on the current Entity.\n   */\n  get overlopCollider() {\n    return this._overlopCollider;\n  }\n\n  /**\n   * When every frame is updated, calculate the collision with other collider.\n   */\n  onUpdate(deltaTime) {\n    super.onUpdate(deltaTime);\n\n    let overlopCollider = null;\n\n    if (this._colliderManager && this._myCollider) {\n      const colliders = this._colliderManager.colliders;\n\n      if (this._myCollider instanceof ABoxCollider) {\n        this._updateWorldBox(this._myCollider, this._box);\n        for (let i = 0, len = colliders.length; i < len; i++) {\n          const collider = colliders[i];\n          if (collider != this._myCollider && this._boxCollision(collider)) {\n            overlopCollider = collider;\n            this.dispatch(\"collision\", { collider });\n          }\n        } // end of for\n      } else if (this._myCollider instanceof ASphereCollider) {\n        this._sphere = this._getWorldSphere(this._myCollider);\n        for (let i = 0, len = colliders.length; i < len; i++) {\n          const collider = colliders[i];\n          if (collider != this._myCollider && this._sphereCollision(collider)) {\n            overlopCollider = collider;\n            this.dispatch(\"collision\", { collider });\n          }\n        } // end of for\n      }\n    } // end of if\n\n    //-- overlop events\n    if (overlopCollider != null && this._overlopCollider != overlopCollider) {\n      this.dispatch(\"begin_overlop\", { collider: overlopCollider });\n    }\n\n    if (this._overlopCollider != null && this._overlopCollider != overlopCollider) {\n      const e = this._overlopCollider;\n      this.dispatch(\"end_overlop\", { collider: e });\n    }\n\n    this._overlopCollider = overlopCollider;\n  }\n\n  /**\n   * Calculate the boundingbox in world space from boxCollider.\n   * @param boxCollider - The boxCollider to calculate\n   * @param out - The caclulated boundingBox\n   */\n  _updateWorldBox(boxCollider, out: BoundingBox): void {\n    const mat = boxCollider.entity.transform.worldMatrix;\n    const source = CollisionDetection._tempBox1;\n    boxCollider.boxMax.cloneTo(source.max);\n    boxCollider.boxMin.cloneTo(source.min);\n    BoundingBox.transform(source, mat, out);\n  }\n\n  /**\n   * Get the sphere info of the given sphere collider in world space.\n   * @param sphereCollider - The given sphere collider\n   */\n  _getWorldSphere(sphereCollider) {\n    const center: Vector3 = new Vector3();\n    Vector3.transformCoordinate(sphereCollider.center, sphereCollider.entity.transform.worldMatrix, center);\n    return {\n      radius: sphereCollider.radius,\n      center\n    };\n  }\n\n  /**\n   * Collider and another collider do collision detection.\n   * @param other - The another collider to collision detection\n   */\n  _boxCollision(other) {\n    if (other instanceof ABoxCollider) {\n      const box = CollisionDetection._tempBox2;\n      this._updateWorldBox(other, box);\n      return intersectBox2Box(box, this._box);\n    } else if (other instanceof ASphereCollider) {\n      const sphere = this._getWorldSphere(other);\n      return intersectSphere2Box(sphere, this._box);\n    }\n    return false;\n  }\n\n  /**\n   * Collider and another collider do collision detection.\n   * @param other - The another collider to collision detection\n   */\n  _sphereCollision(other) {\n    if (other instanceof ABoxCollider) {\n      const box = CollisionDetection._tempBox2;\n      this._updateWorldBox(other, box);\n      return intersectSphere2Box(this._sphere, box);\n    } else if (other instanceof ASphereCollider) {\n      const sphere = this._getWorldSphere(other);\n      return intersectSphere2Sphere(sphere, this._sphere);\n    }\n    return false;\n  }\n\n  onAwake() {\n    this._colliderManager = this.scene.findFeature(ColliderFeature);\n    this._myCollider = this.entity.getComponent(ACollider);\n  }\n\n  //----------- EventDispatcher Interface ---------------;\n\n  // _evts: object;\n  // _evtCount: number;\n\n  /**\n   * Determine whether there is event monitoring.\n   * @param event - The event name\n   * @returns True if there is event monitoring, false otherwise\n   */\n  hasEvent: (event: string) => boolean;\n  /**\n   * Return all registered event names.\n   * @returns all registered event names\n   */\n  eventNames: () => string[];\n\n  /**\n   * Returns the number of listener functions with the specified event name.\n   * @param event - The event name\n   * @returns the number of listener functions with the specified event name\n   */\n  listenerCount: (event: string) => number;\n\n  /**\n   * Dispatch the event with the specified event name.\n   * @param event - The event name\n   * @param data - The data to dispatch\n   * @returns True if the dispatch is success, false otherwise\n   */\n  dispatch: (event: string, data?: any) => boolean;\n\n  /**\n   * Add a listener function.\n   * @param event - The event name\n   * @param fn - The function to add\n   * @returns This\n   */\n  on: (event: string, fn: Function) => EventDispatcher;\n\n  /**\n   * Add a listener function that just call once.\n   * @param event - The event name\n   * @param fn - The function to add\n   * @returns This\n   */\n  once: (event: string, fn: Function) => EventDispatcher;\n\n  /**\n   * @deprecated Replace with on/once.\n   */\n  addEventListener: (event: string, fn: Function, once?: boolean) => EventDispatcher;\n\n  off: (event: string, fn?: Function) => EventDispatcher;\n\n  /**\n   * @deprecated Replace with off.\n   */\n  removeEventListener: (event: string, fn?: Function) => EventDispatcher;\n\n  /**\n   * Remove all event listeners.\n   * @param event - The event name, delete all events if not passed\n   */\n  removeAllEventListeners: (event?: string) => void;\n\n  /**\n   * @deprecated Replace with dispatch.\n   */\n  trigger: (e: Event) => void;\n\n  _clearEvent: (event: string) => void;\n}\napplyMixins(CollisionDetection, [EventDispatcher]);\nfunction applyMixins(derivedCtor: any, baseCtors: any[]) {\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      derivedCtor.prototype[name] = baseCtor.prototype[name];\n    });\n  });\n}\n","import { Color } from \"@oasis-engine/math\";\nimport { Component } from \"../Component\";\nimport { Entity } from \"../Entity\";\nimport { Shader } from \"../shader/Shader\";\n\n/**\n * Fog.\n */\nexport class Fog extends Component {\n  protected static _colorProperty = Shader.getPropertyByName(\"u_fogColor\");\n\n  /**\n   * Fog color.\n   */\n  get color(): Color {\n    return this._color;\n  }\n\n  set color(value: Color) {\n    this._color = value;\n    this.scene.shaderData.setColor(Fog._colorProperty, value);\n  }\n\n  private _color: Color = new Color(1, 0, 0, 1);\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.color = this._color;\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  _onEnable() {\n    this.scene.shaderData.enableMacro(\"O3_HAS_FOG\");\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  _onDisable() {\n    this.scene.shaderData.disableMacro(\"O3_HAS_FOG\");\n  }\n}\n","import { Entity } from \"../Entity\";\nimport { Shader } from \"../shader\";\nimport { Fog } from \"./Fog\";\n\n/**\n * Exponential fog.\n */\nexport class EXP2Fog extends Fog {\n  private static _densityProperty = Shader.getPropertyByName(\"u_fogDensity\");\n\n  /**\n   * Density of fog.\n   */\n  get density(): number {\n    return this._density;\n  }\n\n  set density(value: number) {\n    this._density = value;\n    this.scene.shaderData.setFloat(EXP2Fog._densityProperty, value);\n  }\n\n  private _density: number = 0.0025;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.density = this._density;\n  }\n  /**\n   * @internal\n   * @override\n   */\n  _onEnable() {\n    this.scene.shaderData.enableMacro(\"O3_FOG_EXP2\");\n  }\n\n  /**\n   * @internal\n   * @override\n   */\n  _onDisable() {\n    this.scene.shaderData.disableMacro(\"O3_FOG_EXP2\");\n  }\n}\n","import { Entity } from \"../Entity\";\nimport { Shader } from \"../shader\";\nimport { Fog } from \"./Fog\";\n\n/**\n * Linear fog, according to the distance of the camera linear difference fog density.\n */\nexport class LinearFog extends Fog {\n  private static _nearProperty = Shader.getPropertyByName(\"u_fogNear\");\n  private static _farProperty = Shader.getPropertyByName(\"u_fogFar\");\n\n  /**\n   * Start of fog.\n   */\n  get near(): number {\n    return this._near;\n  }\n\n  set near(value: number) {\n    this._near = value;\n    this.scene.shaderData.setFloat(LinearFog._nearProperty, value);\n  }\n\n  /**\n   * End of fog.\n   */\n  get far(): number {\n    return this._far;\n  }\n\n  set far(value: number) {\n    this._far = value;\n    this.scene.shaderData.setFloat(LinearFog._farProperty, value);\n  }\n\n  private _near: number = 1;\n  private _far: number = 1000;\n\n  constructor(entity: Entity) {\n    super(entity);\n    this.near = this._near;\n    this.far = this._far;\n  }\n}\n","import { Camera } from \"../Camera\";\nimport { Layer } from \"../Layer\";\nimport { Script } from \"../Script\";\nimport { RenderBufferDepthFormat } from \"../texture/enums/RenderBufferDepthFormat\";\nimport { RenderColorTexture } from \"../texture/RenderColorTexture\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\n\n/**\n * Environmental probes, providing necessary capabilities such as reflection and refraction.\n * @example\n * ```ts\n * const probe = cameraEntity.addComponent( CubeProbe )\n * probe.onTextureChange = cubeTexture => {\n *   envLight.specularTexture = cubeTexture;\n *   skybox.specularTexture = cubeTexture;\n * }\n * ```\n */\nexport abstract class Probe extends Script {\n  /**\n   * Probe's layer, render everything by default.\n   */\n  probeLayer: Layer = Layer.Everything;\n\n  /**\n   * The width of the probe rendering target.\n   */\n  width: number = 1024;\n\n  /**\n   * The height of the probe rendering target.\n   */\n  height: number = 1024;\n\n  /**\n   * When using WebGL2, you can turn on MSAA at the hardware layer.\n   */\n  antiAliasing: number = 1;\n\n  /**\n   * Whether the probe is rendered to the cube color texture.\n   */\n  protected readonly _isCube: boolean = false;\n\n  private _oriCameraRenderTarget: RenderTarget;\n  private _renderTarget: RenderTarget;\n  private _renderTargetSwap: RenderTarget;\n  private _activeRenderTarget: RenderTarget;\n  private _camera: Camera;\n  private _oriCameraCullingMask: Layer;\n\n  private get _texture(): RenderColorTexture {\n    return this._activeRenderTarget?.getColorTexture();\n  }\n\n  /**\n   * Provide hooks for users to exchange Texture.\n   * @remarks Prevent issue: Feedback Loops Between Textures and the Framebuffer.\n   */\n  onTextureChange(renderColorTexture: RenderColorTexture) {}\n\n  /**\n   * @override\n   */\n  onBeginRender(camera: Camera): void {\n    if (!this.enabled) return;\n    this._camera = camera;\n    this._oriCameraCullingMask = camera.cullingMask;\n    camera.cullingMask = this.probeLayer;\n    if (\n      !this._activeRenderTarget ||\n      this._activeRenderTarget.width !== this.width ||\n      this._activeRenderTarget.height !== this.height ||\n      this._activeRenderTarget.antiAliasing !== this.antiAliasing\n    ) {\n      this._renderTarget = new RenderTarget(\n        this.engine,\n        this.width,\n        this.height,\n        new RenderColorTexture(this.engine, this.width, this.height, undefined, undefined, this._isCube),\n        RenderBufferDepthFormat.Depth,\n        this.antiAliasing\n      );\n\n      this._renderTargetSwap = new RenderTarget(\n        this.engine,\n        this.width,\n        this.height,\n        new RenderColorTexture(this.engine, this.width, this.height, undefined, undefined, this._isCube),\n        RenderBufferDepthFormat.Depth,\n        this.antiAliasing\n      );\n\n      this._activeRenderTarget = this._renderTarget;\n    }\n\n    this._oriCameraRenderTarget = camera.renderTarget;\n    camera.renderTarget = this._activeRenderTarget;\n  }\n\n  /**\n   * @override\n   */\n  onEndRender(camera: Camera): void {\n    if (!this.enabled) return;\n\n    this.onTextureChange && this.onTextureChange(this._texture);\n\n    this._activeRenderTarget =\n      this._activeRenderTarget === this._renderTarget ? this._renderTargetSwap : this._renderTarget;\n  }\n\n  protected _reset(): void {\n    if (!this.enabled) return;\n    this._camera.renderTarget = this._oriCameraRenderTarget;\n    this._camera.cullingMask = this._oriCameraCullingMask;\n  }\n}\n","import { Matrix, Vector3 } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { TextureCubeFace } from \"../texture\";\nimport { Probe } from \"./Probe\";\n\nconst cacheTarget: Vector3 = new Vector3();\nconst cacheUp: Vector3 = new Vector3();\nconst cacheDir: Vector3 = new Vector3();\n\n/**\n * Cube probe, generate cubeTexture, used for dynamic environment reflection and other effects.\n */\nexport class CubeProbe extends Probe {\n  /**\n   * The position of the probe can be set, the default is the origin [0,0,0].\n   */\n  position: Vector3 = new Vector3(0, 0, 0);\n\n  /**\n   * @override\n   */\n  protected readonly _isCube: boolean = true;\n\n  private oriViewMatrix = new Matrix();\n  private _oriFieldOfView: number;\n\n  /**\n   * @override\n   */\n  onBeginRender(camera: Camera): void {\n    if (!this.enabled) return;\n    super.onBeginRender(camera);\n    this._storeCamera(camera);\n\n    // Render 6 faces\n    for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n      // Change camera parameters\n      this._setCamera(faceIndex, camera);\n      camera.render(TextureCubeFace.PositiveX + faceIndex);\n    }\n\n    this._restoreCamera(camera);\n    super._reset();\n  }\n\n  /**\n   * Store original camera parameters.\n   */\n  private _storeCamera(camera: Camera) {\n    camera.viewMatrix.cloneTo(this.oriViewMatrix);\n    this._oriFieldOfView = camera.fieldOfView;\n  }\n\n  /**\n   * Restore camera parameters.\n   */\n  private _restoreCamera(camera: Camera) {\n    this.oriViewMatrix.cloneTo(camera.viewMatrix);\n    camera.fieldOfView = this._oriFieldOfView;\n  }\n\n  /**\n   * Set camera parameters according to the rendering surface.\n   */\n  private _setCamera(faceIndex: number, camera: Camera) {\n    switch (faceIndex) {\n      // positive_x\n      case 0:\n        cacheUp.setValue(0, -1, 0);\n        cacheDir.setValue(1, 0, 0);\n        break;\n      // negative_x\n      case 1:\n        cacheUp.setValue(0, -1, 0);\n        cacheDir.setValue(-1, 0, 0);\n        break;\n      // positive_y\n      case 2:\n        cacheUp.setValue(0, 0, 1);\n        cacheDir.setValue(0, 1, 0);\n        break;\n      // negative_y\n      case 3:\n        cacheUp.setValue(0, 0, -1);\n        cacheDir.setValue(0, -1, 0);\n        break;\n      // positive_z\n      case 4:\n        cacheUp.setValue(0, -1, 0);\n        cacheDir.setValue(0, 0, 1);\n        break;\n      // negative_z\n      case 5:\n        cacheUp.setValue(0, -1, 0);\n        cacheDir.setValue(0, 0, -1);\n        break;\n    }\n\n    Vector3.add(this.position, cacheDir, cacheTarget);\n    Matrix.lookAt(this.position, cacheTarget, cacheUp, camera.viewMatrix);\n    camera.fieldOfView = 90;\n  }\n}\n","import { MathUtil, Matrix, Vector2 } from \"@oasis-engine/math\";\nimport { DirectLight } from \"../lighting/DirectLight\";\nimport { Light } from \"../lighting/Light\";\nimport { PointLight } from \"../lighting/PointLight\";\nimport { SpotLight } from \"../lighting/SpotLight\";\nimport { Shader } from \"../shader/Shader\";\nimport { ShaderData } from \"../shader/ShaderData\";\nimport { RenderColorTexture } from \"../texture/RenderColorTexture\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\n\n/**\n * Shadow manager.\n */\nexport class LightShadow {\n  private static _viewMatFromLightProperty = Shader.getPropertyByName(\"u_viewMatFromLight\");\n  private static _projMatFromLightProperty = Shader.getPropertyByName(\"u_projMatFromLight\");\n  private static _shadowBiasProperty = Shader.getPropertyByName(\"u_shadowBias\");\n  private static _shadowIntensityProperty = Shader.getPropertyByName(\"u_shadowIntensity\");\n  private static _shadowRadiusProperty = Shader.getPropertyByName(\"u_shadowRadius\");\n  private static _shadowMapSizeProperty = Shader.getPropertyByName(\"u_shadowMapSize\");\n  private static _shadowMapsProperty = Shader.getPropertyByName(\"u_shadowMaps\");\n\n  /**\n   * @internal\n   */\n  static _updateShaderData(shaderData: ShaderData) {\n    const data = LightShadow._combinedData;\n\n    shaderData.setFloatArray(LightShadow._viewMatFromLightProperty, data.viewMatrix);\n    shaderData.setFloatArray(LightShadow._projMatFromLightProperty, data.projectionMatrix);\n    shaderData.setFloatArray(LightShadow._shadowBiasProperty, data.bias);\n    shaderData.setFloatArray(LightShadow._shadowIntensityProperty, data.intensity);\n    shaderData.setFloatArray(LightShadow._shadowRadiusProperty, data.radius);\n    shaderData.setFloatArray(LightShadow._shadowMapSizeProperty, data.mapSize);\n    shaderData.setTextureArray(LightShadow._shadowMapsProperty, data.map);\n  }\n\n  /**\n   * Clear all shadow maps.\n   */\n  static clearMap() {\n    LightShadow._combinedData.map.length = 0;\n  }\n\n  private static _maxLight = 3;\n\n  private static _combinedData = {\n    viewMatrix: new Float32Array(16 * LightShadow._maxLight),\n    projectionMatrix: new Float32Array(16 * LightShadow._maxLight),\n    bias: new Float32Array(LightShadow._maxLight),\n    intensity: new Float32Array(LightShadow._maxLight),\n    radius: new Float32Array(LightShadow._maxLight),\n    mapSize: new Float32Array(2 * LightShadow._maxLight),\n    map: []\n  };\n\n  private _mapSize: Vector2;\n  private _renderTarget: RenderTarget;\n\n  /**\n   * Shadow's light.\n   */\n  readonly light: Light;\n\n  /**\n   * Shadow bias.\n   */\n  bias: number = 0.005;\n\n  /**\n   * Shadow intensity, the larger the value, the clearer and darker the shadow.\n   */\n  intensity: number = 0.2;\n\n  /**\n   * Pixel range used for shadow PCF interpolation.\n   */\n  radius: number = 1;\n\n  /**\n   * Generate the projection matrix used by the shadow map.\n   */\n  projectionMatrix: Matrix = new Matrix();\n\n  constructor(light: Light, props = { engine: null, width: 512, height: 512 }) {\n    this.light = light;\n    const { engine, width, height } = props;\n\n    this._mapSize = new Vector2(width, height);\n    this._renderTarget = new RenderTarget(engine, width, height, new RenderColorTexture(engine, width, height));\n  }\n\n  /**\n   * The RenderTarget corresponding to the shadow map.\n   * @readonly\n   */\n  get renderTarget(): RenderTarget {\n    return this._renderTarget;\n  }\n\n  /**\n   * Shadow map's color render texture.\n   * @readonly\n   */\n  get map(): RenderColorTexture {\n    return this._renderTarget.getColorTexture();\n  }\n\n  /**\n   * Shadow map size.\n   * @readonly\n   */\n  get mapSize(): Vector2 {\n    return this._mapSize;\n  }\n\n  /**\n   * Initialize the projection matrix for lighting.\n   * @param light - The light to generate shadow\n   */\n  initShadowProjectionMatrix(light: Light) {\n    /**\n     * Directional light projection matrix, the default coverage area is left: -5, right: 5, bottom: -5, up: 5, near: 0.5, far: 50.\n     */\n    if (light instanceof DirectLight) {\n      Matrix.ortho(-5, 5, -5, 5, 0.1, 50, this.projectionMatrix);\n    }\n\n    /**\n     * Point light projection matrix, default configuration: fov: 50, aspect: 1, near: 0.5, far: 50.\n     */\n    if (light instanceof PointLight) {\n      Matrix.perspective(MathUtil.degreeToRadian(50), 1, 0.5, 50, this.projectionMatrix);\n    }\n\n    /**\n     * Spotlight projection matrix, the default configuration: fov: this.angle * 2 * Math.sqrt(2), aspect: 1, near: 0.1, far: this.distance + 5\n     */\n    if (light instanceof SpotLight) {\n      const fov = Math.min(Math.PI / 2, light.angle * 2 * Math.sqrt(2));\n      Matrix.perspective(fov, 1, 0.1, light.distance + 5, this.projectionMatrix);\n    }\n  }\n\n  appendData(lightIndex: number): void {\n    const viewStart = lightIndex * 16;\n    const projectionStart = lightIndex * 16;\n    const biasStart = lightIndex;\n    const intensityStart = lightIndex;\n    const radiusStart = lightIndex;\n    const mapSizeStart = lightIndex * 2;\n    const mapStart = lightIndex;\n\n    const data = LightShadow._combinedData;\n\n    data.viewMatrix.set(this.light.viewMatrix.elements, viewStart);\n    data.projectionMatrix.set(this.projectionMatrix.elements, projectionStart);\n    data.bias[biasStart] = this.bias;\n    data.intensity[intensityStart] = this.intensity;\n    data.radius[radiusStart] = this.radius;\n    data.mapSize[mapSizeStart] = this.mapSize.x;\n    data.mapSize[mapSizeStart + 1] = this.mapSize.y;\n    data.map[mapStart] = this.map;\n  }\n}\n","import { Logger } from \"../base/Logger\";\nimport { AmbientLight } from \"../lighting/AmbientLight\";\nimport { Light } from \"../lighting/Light\";\nimport { LightShadow } from \"./LightShadow\";\nimport { Component } from \"../Component\";\n\n/**\n * Set whether the light to generate shadows.\n */\nObject.defineProperty(Light.prototype, \"enableShadow\", {\n  get: function () {\n    return this._enableShadow;\n  },\n  set: function (enabled) {\n    this._enableShadow = enabled;\n\n    if (this._enableShadow) {\n      if (this instanceof AmbientLight) {\n        this._enableShadow = false;\n        Logger.warn(\"Has no shadow!\");\n        return;\n      }\n\n      this.shadow = this.shadow || new LightShadow(this, { engine: this.engine, width: 512, height: 512 });\n      this.shadow.initShadowProjectionMatrix(this);\n    }\n  }\n});\n\n/**\n * Set whether the renderer to receive shadows.\n */\nObject.defineProperty(Component.prototype, \"recieveShadow\", {\n  get: function () {\n    return this._recieveShadow;\n  },\n  set: function (enabled) {\n    this._recieveShadow = enabled;\n  }\n});\n\n/**\n * Set whether the renderer to cast shadows.\n */\nObject.defineProperty(Component.prototype, \"castShadow\", {\n  get: function () {\n    return this._castShadow;\n  },\n  set: function (enabled) {\n    this._castShadow = enabled;\n  }\n});\n","import { Engine } from \"../Engine\";\nimport { Material } from \"../material/Material\";\nimport { Shader } from \"../shader/Shader\";\n\n/**\n * Shadow Map material.\n */\nexport class ShadowMapMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"shadow-map\"));\n    this.shaderData.enableMacro(\"O3_GENERATE_SHADOW_MAP\");\n  }\n}\n","import { Vector4 } from \"@oasis-engine/math\";\nimport { Camera } from \"../Camera\";\nimport { Layer } from \"../Layer\";\nimport { Light } from \"../lighting/Light\";\nimport { Material } from \"../material/Material\";\nimport { RenderPass } from \"../RenderPipeline/RenderPass\";\nimport { RenderQueue } from \"../RenderPipeline/RenderQueue\";\nimport { Shader } from \"../shader/Shader\";\nimport { RenderTarget } from \"../texture/RenderTarget\";\n\n/**\n * RenderPass for rendering shadow map.\n */\nexport class ShadowMapPass extends RenderPass {\n  private static _viewMatFromLightProperty = Shader.getPropertyByName(\"u_viewMatFromLight\");\n  private static _projMatFromLightProperty = Shader.getPropertyByName(\"u_projMatFromLight\");\n\n  readonly light: Light;\n\n  /**\n   * Constructor.\n   * @param light  - The light that the shadow belongs to\n   */\n  constructor(\n    name: string,\n    priority: number,\n    renderTarget: RenderTarget,\n    replaceMaterial: Material,\n    mask: Layer,\n    light: Light\n  ) {\n    super(name, priority, renderTarget, replaceMaterial, mask, new Vector4(1, 1, 1, 1));\n    this.light = light;\n  }\n\n  /**\n   * @override\n   */\n  preRender(camera: Camera, queue: RenderQueue) {\n    // The viewProjection matrix from the light.\n    const shaderData = this.replaceMaterial.shaderData;\n    shaderData.setMatrix(ShadowMapPass._viewMatFromLightProperty, this.light.viewMatrix);\n    shaderData.setMatrix(ShadowMapPass._projMatFromLightProperty, (this.light as any).shadow.projectionMatrix);\n  }\n}\n","import { Engine } from \"../Engine\";\nimport { RenderQueueType } from \"../material\";\nimport { Material } from \"../material/Material\";\nimport { BlendFactor } from \"../shader/enums/BlendFactor\";\nimport { CompareFunction } from \"../shader/enums/CompareFunction\";\nimport { Shader } from \"../shader/Shader\";\n\n/**\n * Shadow material.\n */\nexport class ShadowMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"shadow\"));\n\n    const targetBlendState = this.renderState.blendState.targetBlendState;\n\n    targetBlendState.sourceColorBlendFactor = targetBlendState.sourceAlphaBlendFactor = BlendFactor.DestinationColor;\n    targetBlendState.destinationColorBlendFactor = targetBlendState.destinationAlphaBlendFactor = BlendFactor.Zero;\n    this.renderState.depthState.compareFunction = CompareFunction.LessEqual;\n\n    this.renderQueueType = RenderQueueType.Transparent;\n  }\n}\n","import { ClearMode } from \"../base/Constant\";\nimport { Camera } from \"../Camera\";\nimport { LightFeature } from \"../lighting/LightFeature\";\nimport { RenderPass } from \"../RenderPipeline/RenderPass\";\nimport { RenderQueue } from \"../RenderPipeline/RenderQueue\";\nimport { LightShadow } from \"./LightShadow\";\n\n/**\n * RenderPass for rendering shadow.\n */\nexport class ShadowPass extends RenderPass {\n  constructor(...args) {\n    super(...args);\n    this.clearMode = ClearMode.DONT_CLEAR;\n  }\n\n  /**\n   * @override\n   */\n  preRender(camera: Camera, queue: RenderQueue) {\n    this.enabled = false;\n    const lightMgr = camera.scene.findFeature(LightFeature);\n    const lights = lightMgr.visibleLights;\n    const shaderData = this.replaceMaterial.shaderData;\n\n    // keep render based on default render pass\n    const pass = camera._renderPipeline.defaultRenderPass;\n    this.renderTarget = pass.renderTarget;\n\n    let shadowMapCount = 0;\n\n    LightShadow.clearMap();\n    for (let i = 0, len = lights.length; i < len; i++) {\n      const lgt: any = lights[i];\n      if (lgt.enableShadow) {\n        lgt.shadow.appendData(shadowMapCount++);\n      }\n    }\n\n    if (shadowMapCount) {\n      this.enabled = true;\n      LightShadow._updateShaderData(shaderData);\n      shaderData.enableMacro(\"O3_SHADOW_MAP_COUNT\", shadowMapCount.toString());\n    } else {\n      shaderData.disableMacro(\"O3_SHADOW_MAP_COUNT\");\n    }\n  }\n}\n","import { Camera } from \"../Camera\";\nimport { Component } from \"../Component\";\nimport { Layer } from \"../Layer\";\nimport { LightFeature } from \"../lighting/LightFeature\";\nimport { RenderQueue } from \"../RenderPipeline/RenderQueue\";\nimport { Scene } from \"../Scene\";\nimport { SceneFeature } from \"../SceneFeature\";\nimport { ShadowMapMaterial } from \"./ShadowMapMaterial\";\nimport { ShadowMapPass } from \"./ShadowMapPass\";\nimport { ShadowMaterial } from \"./ShadowMaterial\";\nimport { ShadowPass } from \"./ShadowPass\";\n\n/**\n * Shadow plug-in.\n */\nexport class ShadowFeature extends SceneFeature {\n  private _shadowPass: ShadowPass;\n  private _shadowMapMaterial: ShadowMapMaterial;\n\n  /**\n   * @override\n   */\n  preRender(scene: Scene, camera: Camera) {\n    const lights = scene.findFeature(LightFeature).visibleLights;\n\n    if (lights.length > 0) {\n      // Check RenderPass for rendering shadows.\n      if (!this._shadowPass) {\n        this.addShadowPass(camera);\n      }\n\n      // Check RenderPass for rendering shadow map.\n      const renderPipeline = camera._renderPipeline;\n\n      for (let i = 0, len = lights.length; i < len; i++) {\n        const lgt: any = lights[i];\n        if (lgt.enableShadow && !lgt.shadowMapPass) {\n          lgt.shadowMapPass = this.addShadowMapPass(camera, lgt);\n        } else if (!lgt.enableShadow && lgt.shadowMapPass) {\n          renderPipeline.removeRenderPass(lgt.shadowMapPass);\n          lgt.shadowMapPass = null;\n        }\n      }\n\n      this.updatePassRenderFlag(renderPipeline.queue);\n    }\n  }\n\n  /**\n   * Add RenderPass for rendering shadows.\n   * @param camera - The camera for rendering\n   */\n  addShadowPass(camera: Camera) {\n    const shadowMaterial = new ShadowMaterial(camera.engine);\n    this._shadowPass = new ShadowPass(\"ShadowPass\", 1, null, shadowMaterial, Layer.Layer30); // SHADOW\n    const renderer = camera._renderPipeline;\n    renderer.addRenderPass(this._shadowPass);\n  }\n\n  /**\n   * Add RenderPass for rendering shadow map.\n   * @param camera - The camera for rendering\n   * @param light - The light that the shadow belongs to\n   */\n  addShadowMapPass(camera: Camera, light) {\n    // Share shadow map material.\n    this._shadowMapMaterial = this._shadowMapMaterial || new ShadowMapMaterial(camera.engine);\n\n    const shadowMapPass = new ShadowMapPass(\n      \"ShadowMapPass\",\n      -1,\n      light.shadow.renderTarget,\n      this._shadowMapMaterial,\n      Layer.Layer31, // SHADOW_MAP\n      light\n    );\n    const renderer = camera._renderPipeline;\n    renderer.addRenderPass(shadowMapPass);\n\n    return shadowMapPass;\n  }\n\n  /**\n   * Update the renderPassFlag state of renderers in the scene.\n   * @param renderQueue - Render queue\n   */\n  updatePassRenderFlag(renderQueue: RenderQueue) {\n    const items = renderQueue.items;\n    for (let i = 0, len = items.length; i < len; i++) {\n      const item = items[i];\n      const ability: Component = item.component;\n\n      const recieveShadow = (ability as any).recieveShadow;\n      const castShadow = (ability as any).castShadow;\n      if (recieveShadow === true) {\n        ability.entity.layer |= Layer.Layer30; //SHADOW;\n      } else if (recieveShadow === false) {\n        ability.entity.layer &= ~Layer.Layer30; //SHADOW;\n      }\n\n      if (castShadow === true) {\n        ability.entity.layer |= Layer.Layer31; //SHADOW_MAP;\n      } else if (castShadow === false) {\n        ability.entity.layer &= ~Layer.Layer31; //SHADOW_MAP;\n      }\n    }\n  }\n}\n","import \"./Extension\";\nimport { ShadowFeature } from \"./ShadowFeature\";\nimport { Scene } from \"../Scene\";\n\nScene.registerFeature(ShadowFeature);\n","export { Engine } from \"./Engine\";\nexport { SystemInfo } from \"./SystemInfo\";\nexport type { HardwareRenderer } from \"./HardwareRenderer\";\nexport type { Canvas } from \"./Canvas\";\nexport { EngineFeature } from \"./EngineFeature\";\n\nexport { Scene } from \"./Scene\";\nexport { SceneFeature } from \"./SceneFeature\";\n\nexport { Entity } from \"./Entity\";\nexport { Component } from \"./Component\";\nexport { Script } from \"./Script\";\nexport { Renderer } from \"./Renderer\";\nexport { dependencies } from \"./ComponentsDependencies\";\n\nexport { Camera } from \"./Camera\";\nexport { Transform } from \"./Transform\";\nexport { UpdateFlag } from \"./UpdateFlag\";\nexport { request } from \"./asset/request\";\nexport { Loader } from \"./asset/Loader\";\nexport { ResourceManager, resourceLoader } from \"./asset/ResourceManager\";\nexport { AssetPromise, AssetPromiseStatus } from \"./asset/AssetPromise\";\nexport type { LoadItem } from \"./asset/LoadItem\";\nexport { AssetType } from \"./asset/AssetType\";\nexport { RefObject } from \"./asset/RefObject\";\n\nexport { BasicRenderPipeline } from \"./RenderPipeline/BasicRenderPipeline\";\nexport { RenderQueue } from \"./RenderPipeline/RenderQueue\";\nexport { RenderPass } from \"./RenderPipeline/RenderPass\";\nexport { RenderElement } from \"./RenderPipeline/RenderElement\";\nexport * from \"./base\";\n\n// Lighting\nimport { LightFeature, hasLight } from \"./lighting/LightFeature\";\nimport { Scene } from \"./Scene\";\nScene.registerFeature(LightFeature);\n(Scene.prototype as any).hasLight = hasLight;\n// Quote raycast\nimport \"./raycast\";\n\nexport { LightFeature };\nexport { AmbientLight } from \"./lighting/AmbientLight\";\nexport { DirectLight } from \"./lighting/DirectLight\";\nexport { PointLight } from \"./lighting/PointLight\";\nexport { SpotLight } from \"./lighting/SpotLight\";\nexport { EnvironmentMapLight } from \"./lighting/EnvironmentMapLight\";\nexport { Light } from \"./lighting/Light\";\n// Mesh\nexport { Mesh } from \"./mesh/Mesh\";\nexport { Skin } from \"./mesh/Skin\";\nexport { MeshRenderer } from \"./mesh/MeshRenderer\";\nexport { SkinnedMeshRenderer } from \"./mesh/SkinnedMeshRenderer\";\nexport { LODGroup } from \"./mesh/LODGroup\";\n\n// Material\nexport * from \"./material/index\";\nexport * from \"./texture/index\";\nexport * from \"./graphic/index\";\nexport * from \"./2d/index\";\nexport * from \"./shaderlib/index\";\nexport * from \"./animation/index\";\nexport * from \"./geometry/index\";\nexport * from \"./geometry-shape/index\";\nexport * from \"./skybox/index\";\nexport * from \"./particle/index\";\nexport * from \"./trail/index\";\nexport * from \"./collider/index\";\nexport * from \"./collision/index\";\nexport * from \"./fog/index\";\nexport * from \"./env-probe/index\";\nexport * from \"./shadow/index\";\nexport * from \"./shader/index\";\nexport * from \"./Layer\";\n"],"names":["AssetPromiseStatus","AssetPromise","all","promises","resolve","reject","setProgress","Array","isArray","completed","total","length","results","forEach","value","index","Promise","then","result","catch","err","onProgress","callback","_listeners","add","cancel","_status","Pending","_reject","_progress","executor","newReject","progress","listener","reason","Failed","Success","Set","Util","toString","call","isArrayLike","x","clone","obj","rst","slice","i","l","k","hasOwnProperty","downloadBlob","blob","fileName","navigator","msSaveBlob","url","window","URL","createObjectURL","a","document","createElement","body","appendChild","style","display","href","download","addEventListener","parentElement","removeChild","click","revokeObjectURL","removeFromArray","array","item","indexOf","last","end","ObjectValues","Object","keys","map","key","ResourceManager","_addLoader","type","loader","extnames","_loaders","len","_extTypeMapping","_getTypeByUrl","path","split","substring","lastIndexOf","engine","retryCount","retryInterval","timeout","_assetPool","create","_assetUrlPool","_refObjectPool","_loadingPromises","load","assetInfo","_loadSingleItem","cancelNotLoaded","promise","p","gc","objects","isGCIgnored","destroy","getAssetPath","instanceId","_addAsset","asset","_deleteAsset","id","_addRefObject","_deleteRefObject","_assignDefaultOptions","undefined","urls","join","info","res","useCache","resourceLoader","assetType","Target","Event","_propagationStopped","_target","t","_timeStamp","_currentTarget","_bubbles","_type","target","data","bubbles","Date","getTime","stopPropagation","CloneMode","ignoreClone","propertyKey","CloneManager","registerCloneMode","Ignore","assignmentClone","Assignment","shallowClone","Shallow","deepClone","Deep","mode","targetMap","_subCloneModeMap","get","constructor","set","getCloneMode","cloneModes","_cloneModeMap","obejctType","_obejctType","cloneModeMap","subCloneModes","getPrototypeOf","deepCloneObject","source","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","n","_deepCloneObjectItem","customSource","cloneTo","sourceItem","itemType","sourceTypeArrayItem","targetTypeArrayItem","sourceArryItem","targetArrayItem","sourceCustomItem","targetCustomItem","targetItem","Map","EngineObject","_engine","_instanceIdCounter","EventDispatcher","_evtCount","hasEvent","event","_evts","eventNames","listenerCount","listeners","fn","dispatch","once","removeEventListener","on","events","push","off","_clearEvent","temp","removeAllEventListeners","trigger","e","noop","message","debug","console","log","bind","warn","error","Logger","isEnabled","enable","disable","Time","_clock","_timeScale","_deltaTime","_startTime","_lastTickTime","performance","now","reset","tick","nowTime","s","InternalAssetType","ClearMode","MaterialType","RenderState","FrontFace","CullFace","Side","CompFunc","DataType","UniformSemantic","BlendFunc","RefreshRate","GLCapabilityType","DisorderedArray","count","_elements","element","delete","deleteByIndex","elements","lastIndex","garbageCollection","ShaderMacroCollection","_mask","_length","unionCollection","left","right","out","outMask","minSize","maxSize","minMask","maxMask","macro","_index","size","mask","maskStart","_value","endIndex","newValue","macroCollection","addMask","addSize","maskSize","complementaryCollection","removeMask","Math","min","intersectionCollection","unionMask","isEnable","clear","ComponentsManager","_onStartScripts","_onUpdateScripts","_onLateUpdateScripts","_destoryComponents","_onUpdateAnimations","_renderers","_onUpdateRenderers","_componentsContainerPool","addRenderer","renderer","_rendererIndex","removeRenderer","replaced","addOnStartScript","script","_onStartIndex","removeOnStartScript","addOnUpdateScript","_onUpdateIndex","removeOnUpdateScript","addOnLateUpdateScript","_onLateUpdateIndex","removeOnLateUpdateScript","addOnUpdateAnimations","animation","removeOnUpdateAnimations","addOnUpdateRenderers","removeOnUpdateRenderers","addDestoryComponent","component","callScriptOnStart","onStartScripts","_started","onStart","callScriptOnUpdate","deltaTime","onUpdate","callScriptOnLateUpdate","onLateUpdate","callAnimationUpdate","update","callRendererOnUpdate","callRender","context","camera","_camera","cullingMask","_entity","layer","enableFrustumCulling","isCulled","_frustum","intersectsBox","bounds","_updateShaderData","_globalShaderMacro","shaderData","_macroCollection","_render","callComponentDestory","destoryComponents","onDestroy","callCameraOnBeginRender","camComps","entity","_components","camComp","onBeginRender","callCameraOnEndRender","onEndRender","getActiveChangedTempList","pop","putActiveChangedTempList","componentContainer","ComponentCloner","cloneComponent","cloneMode","sourcePropS","tarProp","sourcePropD","ComponentsDependencies","register","currentComponent","dependentComponent","_addDependency","_dependenciesMap","_invDependenciesMap","_addCheck","dependencies","getComponent","_removeCheck","invDenpendencies","components","abilityClass","ability","Layer","Component","_enabled","isActiveInHierarchy","_onEnable","_onDisable","_destroyed","scene","_renderPriority","_removeComponent","_onInActive","_onDestroy","_onAwake","_onActive","_setActive","_awaked","_isActiveInHierarchy","val","UpdateFlag","_flags","flag","flags","Transform","_dirtyFlag","_WM_WP_WE_WQ_WS_FLAGS","setPosition","y","z","_position","setValue","position","setRotation","_rotation","rotation","setRotationQuaternion","w","_rotationQuaternion","rotationQuaternion","setScale","_scale","scale","setWorldPosition","_worldPosition","worldPosition","setWorldRotation","_worldRotation","worldRotation","setWorldRotationQuaternion","_worldRotationQuaternion","worldRotationQuaternion","getWorldForward","forward","worldMatrix","normalize","getWorldRight","getWorldUp","up","translate","translationOrX","relativeToLocalOrY","relativeToLocal","_tempVec3","_translate","rotate","rotationOrX","_rotateXYZ","rotateByAxis","axis","angle","rad","MathUtil","degreeToRadFactor","Quaternion","rotationAxisAngle","_tempQuat0","_rotateByQuat","lookAt","worldUp","EPSILON","zeroTolerance","abs","rotMat","_tempMat43","Matrix","getRotation","invert","registerWorldChangeFlag","_changeFlags","_parentChange","_isParentDirty","_updateAllWorldFlag","_updateWorldPositionFlag","_isContainDirtyFlags","_WM_WP_FLAGS","_worldAssociatedChange","nodeChildren","_children","transform","_updateWorldRotationFlag","_WM_WE_WQ_FLAGS","_updateWorldPositionAndRotationFlag","_WM_WP_WE_WQ_FLAGS","_updateWorldScaleFlag","_WM_WS_FLAGS","_updateWorldPositionAndScaleFlag","_WM_WP_WS_FLAGS","_getParentTransform","_parentTransformCache","parentCache","parent","_getScaleMatrix","invRotation","invRotationMat","_tempMat30","worldRotScaMat","_tempMat31","scaMat","_tempMat32","setValueByMatrix","Matrix3x3","multiply","targetDirtyFlags","_isContainDirtyFlag","_setDirtyFlagTrue","_setDirtyFlagFalse","rotateQuat","translation","rotationMat","_tempMat40","Vector3","transformCoordinate","radFactor","rotQuat","rotationEuler","translateXYZ","rotateXYZ","_LOCAL_MATRIX_FLAG","_WORLD_POSITION_FLAG","getTranslation","_tempMat41","_LOCAL_EULER_FLAG","toEuler","radToDegreeFactor","_LOCAL_QUAT_FLAG","_WORLD_EULER_FLAG","degreeToRadian","_WORLD_QUAT_FLAG","_WORLD_SCALE_FLAG","scaleMat","_lossyWorldScale","affineTransformation","_localMatrix","decompose","_WORLD_MATRIX_FLAG","localMatrix","_worldMatrix","_tempMat42","Entity","findByName","name","entitys","_entitys","findByPath","findEntityByPath","_findChildByName","root","children","child","_traverseSetOwnerScene","_scene","childCount","_isActive","_parent","_isRoot","_isActiveInEngine","_processActive","_processInActive","oldParent","_removeFromParent","newParent","parentScene","_setTransformDirty","Layer0","_activeChangedComponents","_invModelMatrix","_inverseWorldMatFlag","addComponent","getComponents","getComponentsIncludeChildren","_getComponentsInChildren","addChild","getChild","grandson","splits","createChild","clearChildren","cloneEntity","sourceComp","targetComp","abilityArray","parentChildren","splice","oldParentChildren","_componentsManager","_setActiveInHierarchy","_setActiveComponents","_setInActiveInHierarchy","isActive","activeChangedComponents","getInvModelMatrix","FeatureManager","_features","_objects","registerFeature","IFeature","featureArray","objectArray","features","addObject","callFeatureMethod","method","args","feature","apply","findFeature","RenderElement","primitive","subPrimitive","material","getFromPool","_elementPoolIndex","pool","_elementPool","_restPool","SceneFeature","preUpdate","postUpdate","preRender","postRender","BlendFactor","BlendOperation","ColorWriteMask","CompareFunction","CullMode","StencilOperation","RenderQueueType","RenderQueue","items","pushPrimitive","sort","cameraPosition","b","aIsPrimitive","_isPrimitive","bIsPrimitive","aElement","bElement","aRenderQueue","renderQueueType","bRenderQueue","Transparent","aDistance","distanceSquared","bDistance","shader","localeCompare","pushSprite","positionQuad","uvRect","tintColor","texture","renderMode","render","replaceMaterial","spriteMaterial","_renderPipeline","_defaultSpriteMaterial","renderCount","_renderCount","rhi","_hardwareRenderer","sceneData","cameraData","renderPassFlag","flushSprite","compileMacros","rendererData","materialData","_preRender","program","_getShaderProgram","isValid","switchProgram","switchRenderCount","_uploadRenderCount","groupingOtherUniformBlock","uploadAll","sceneUniformBlock","cameraUniformBlock","rendererUniformBlock","materialUniformBlock","_uploadCamera","_uploadRenderer","_uploadMaterial","uploadUniforms","uploadTextures","renderState","_apply","drawPrimitive","spirteElement","drawSprite","pbr_common_frag_define","pbr_util_frag_define","pbr_envmap_light_frag_define","pbr_base_frag_define","pbr_texture_frag_define","pbr_runtime_frag_define","pbr_normal_frag_define","pbr_brdf_cook_torrance_frag_define","pbr_direct_irradiance_frag_define","pbr_ibl_specular_frag_define","pbr_ibl_diffuse_frag_define","pbr_begin_frag","pbr_direct_irradiance_frag","pbr_ibl_diffuse_frag","pbr_ibl_specular_frag","pbr_end_frag","ShaderLib","common","common_vert","common_frag","color_share","normal_share","uv_share","worldpos_share","shadow_share","fog_share","begin_normal_vert","begin_position_vert","morph_target_vert","position_vert","color_vert","normal_vert","skinning_vert","uv_vert","worldpos_vert","shadow_vert","morph_vert","fog_vert","ambient_light_frag","direct_light_frag","point_light_frag","spot_light_frag","mobile_material_frag","fog_frag","begin_mobile_frag","begin_normal_frag","begin_viewdir_frag","mobile_blinnphong_frag","mobile_lambert_frag","noise_common","noise_cellular_2D","noise_cellular_2x2","noise_cellular_2x2x2","noise_cellular_3D","noise_cellular","noise_perlin_2D","noise_perlin_3D","noise_perlin_4D","noise_perlin","noise_psrd_2D","noise_simplex_2D","noise_simplex_3D_grad","noise_simplex_3D","noise_simplex_4D","noise_simplex","perturbation_share","perturbation_frag","refraction_share","refraction_frag","clipPlane_vert_define","clipPlane_vert","clipPlane_frag_define","clipPlane_frag","gamma_frag","oit_frag","oit_frag_define","PBRShaderLib","InjectShaderSlices","ShaderFactory","parseVersion","version","parsePrecision","vertP","fragP","compileVert","downgrade","parseShaderName","parseAttributeMacros","macros","m","parseCustomMacros","parseShader","src","parseIncludes","regex","replace","match","trim","slices","parseExtension","extensions","convertTo300","isFrag","isMRT","test","replaceMRTShader","getMaxDrawBuffers","mrtIndexSet","compatible","fragmentShader","hasFragData","declaration","ShaderMacro","ShaderDataGroup","ShaderUniform","propertyId","location","textureIndex","applyFunc","cacheValue","_rhi","_gl","gl","upload1f","shaderUniform","uniform1f","upload1fv","uniform1fv","upload2f","cacheVaue","r","g","uniform2f","upload2fv","uniform2fv","upload3f","uniform3f","upload3fv","uniform3fv","upload4f","uniform4f","upload4fv","uniform4fv","upload1i","uniform1i","upload1iv","uniform1iv","upload2i","uniform2i","upload2iv","uniform2iv","upload3i","uniform3i","upload3iv","uniform3iv","upload4i","uniform4i","upload4iv","uniform4iv","uploadMat4","uniformMatrix4fv","uploadMat4v","uploadTexture","activeTexture","bindTexture","_glTexture","uploadTextureArray","textureIndices","ShaderUniformBlock","constUniforms","textureUniforms","ShaderProgram","_addLineNum","str","lines","limitLength","prefix","line","_isValid","vertexSource","fragmentSource","otherUniformBlock","attributeLocation","_vertexShader","_fragmentShader","_glProgram","_activeTextureUint","_createProgram","_recordLocation","_counter","uniformBlock","properties","_properties","uniform","_groupingSubOtherUniforms","_currentBind","useProgram","deleteShader","deleteProgram","unifroms","isTexture","group","Shader","_getShaderPropertyGroup","_groupingUniform","Scene","Camera","Renderer","Material","vertexShader","_createShader","VERTEX_SHADER","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","validateProgram","isContextLost","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaderType","shaderSource","createShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","uniformInfos","_getUniformInfos","attributeInfos","_getAttributeInfos","substr","getUniformLocation","getPropertyByName","_uniqueId","FLOAT","FLOAT_VEC2","Vector2","FLOAT_VEC3","FLOAT_VEC4","Vector4","BOOL","INT","BOOL_VEC2","INT_VEC2","BOOL_VEC3","INT_VEC3","BOOL_VEC4","INT_VEC4","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","glTextureIndices","TEXTURE0","getAttribLocation","uniformCount","ACTIVE_UNIFORMS","getActiveUniform","attributeCount","ACTIVE_ATTRIBUTES","getActiveAttrib","ShaderProperty","_group","_propertyNameCounter","shaderMap","_shaderMap","find","getMacroByName","_macroMap","maskMap","_macroMaskMap","counter","_macroCounter","floor","bit","propertyNameMap","_propertyNameMap","property","propertyName","shaderProperty","_getNamesByMacros","subMaskMap","subMask","log2","j","_shaderId","_vertexSource","_fragmentSource","_shaderCounter","compileVariant","shaderProgramPool","_getShaderProgramPool","shaderProgram","isWebGL2","macroNameList","macroNameStr","shaderNameStr","versionStr","precisionStr","_shaderExtension","cache","Light","_viewMat","_inverseViewMat","LightFeature","attachRenderLight","detachRenderLight","viewMatrix","_maxLight","AmbientLight","_color","setColor","_colorProperty","lightColor","_intensity","_lightColor","Color","color","DirectLight","intensity","_forward","_reverseDirection","_combinedData","setFloatArray","_directionProperty","direction","_appendData","lightIndex","colorStart","directionStart","EnvironmentMapLight","light","transformMatrix","setMatrix","_transformMatrixProperty","_diffuseTexture","setTexture","_diffuseTextureProperty","enableMacro","_diffuseMacro","disableMacro","_specularTexture","_specularTextureProperty","setFloat","_mipLevelProperty","specularTexture","mipmapCount","_specularMacro","_diffuseColor","_diffuseColorProperty","_specularColor","_specularColorProperty","_diffuseIntensity","_diffuseIntensityProperty","_specularIntensity","_specularIntensityProperty","diffuseColor","specularColor","diffuseIntensity","specularIntensity","PointLight","distance","decay","_positionProperty","_distanceProperty","_decayProperty","positionStart","distanceStart","decayStart","lightPosition","SpotLight","penumbra","PI","_inverseDirection","_angleProperty","_penumbraProperty","_penumbraCosProperty","penumbraCos","_coneCosProperty","coneCos","angleStart","penumbraStart","penumbraCosStart","coneCosStart","cos","hasLight","visibleLights","ambientLightCount","envMapLightCount","directLightCount","pointLightCount","spotLightCount","lights","_ambientMacro","_envMacro","RefObject","_refCount","resourceManager","force","refCount","_getRefCount","_addRefCount","_addToResourceManager","GLCompressedTextureInternalFormat","RenderBufferColorFormat","RenderBufferDepthFormat","TextureFilterMode","TextureFormat","TextureWrapMode","Texture","_formatDetail","_width","_height","_mipmap","_mipmapCount","_wrapModeU","_wrapModeV","_filterMode","_anisoLevel","_isPowerOf2","v","_getFormatDetail","format","R8G8B8","internalFormat","RGB8","RGB","baseFormat","dataType","UNSIGNED_BYTE","isCompressed","R8G8B8A8","RGBA8","RGBA","R4G4B4A4","RGBA4","UNSIGNED_SHORT_4_4_4_4","R5G5B5A1","RGB5_A1","UNSIGNED_SHORT_5_5_5_1","R5G6B5","RGB565","UNSIGNED_SHORT_5_6_5","Alpha8","ALPHA","R32G32B32A32","RGBA32F","DXT1","RGB_S3TC_DXT1_EXT","DXT5","RGBA_S3TC_DXT5_EXT","ETC1_RGB","RGB_ETC1_WEBGL","ETC2_RGB","RGB8_ETC2","ETC2_RGBA5","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA8","RGBA8_ETC2_EAC","PVRTC_RGB2","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","RGBA_PVRTC_2BPPV1_IMG","PVRTC_RGB4","RGB_PVRTC_4BPPV1_IMG","PVRTC_RGBA4","RGBA_PVRTC_4BPPV1_IMG","ASTC_4x4","RGBA_ASTC_4X4_KHR","ASTC_5x5","RGBA_ASTC_5X5_KHR","ASTC_6x6","RGBA_ASTC_6X6_KHR","ASTC_8x8","RGBA_ASTC_8X8_KHR","ASTC_10x10","RGBA_ASTC_10X10_KHR","ASTC_12x12","RGBA_ASTC_12X12_KHR","Error","_getRenderBufferColorFormatDetail","R16G16B16A16","RGBA16F","HALF_FLOAT","_getRenderBufferDepthFormatDetail","Depth","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_COMPONENT","UNSIGNED_INT","attachment","DEPTH_ATTACHMENT","DepthStencil","DEPTH24_STENCIL8","DEPTH_STENCIL","UNSIGNED_INT_24_8","DEPTH_STENCIL_ATTACHMENT","Stencil","STENCIL_INDEX8","STENCIL_ATTACHMENT","Depth16","Depth24","DEPTH_COMPONENT24","Depth32","Depth24Stencil8","Depth32Stencil8","DEPTH32F_STENCIL8","FLOAT_32_UNSIGNED_INT_24_8_REV","_supportTextureFormat","isSupported","canIUse","textureFloat","_supportRenderBufferColorFormat","colorBufferFloat","colorBufferHalfFloat","textureHalfFloat","_supportRenderBufferDepthFormat","depthTexture","generateMipmaps","_bind","generateMipmap","_unbind","deleteTexture","_getPixelBuffer","face","width","height","_readFrameBuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_2D","readPixels","_initMipmap","isCube","texStorage2D","max","texImage2D","faceIndex","_getMaxMiplevel","_getMipmapCount","_setWrapMode","pname","Clamp","texParameteri","CLAMP_TO_EDGE","Repeat","REPEAT","Mirror","MIRRORED_REPEAT","TEXTURE_WRAP_S","TEXTURE_WRAP_T","Point","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","NEAREST_MIPMAP_NEAREST","Bilinear","LINEAR","LINEAR_MIPMAP_NEAREST","Trilinear","LINEAR_MIPMAP_LINEAR","capability","maxAnisoLevel","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","ShaderData","_variableMacros","getFloat","_getData","_setData","getInt","setInt","getFloatArray","getIntArray","setIntArray","getVector2","setVector2","getVector3","setVector3","getVector4","setVector4","getMatrix","getColor","getTexture","lastValue","getTextureArray","setTextureArray","_enableVariableMacro","variableValue","_disableVariableMacro","targetProperties","variableMacro","oldMacro","_rootEntities","clipPlanes","_activeCameras","_resolution","sceneFeatureManager","shaderTextureLod","standardDerivatives","createRootEntity","addRootEntity","isRoot","oldScene","_removeEntity","removeRootEntity","getRootEntity","findEntityByName","filter","Boolean","rootEntitiesCount","findEntity","sceneManager","activeScene","attachRenderCamera","detachRenderCamera","active","rootEntities","lightMgr","canvas","resolution","_resolutionProperty","oldRootEntities","Feature","raycast","ray","outPos","tag","SceneManager","_activeScene","loadScene","destroyOldScene","scenePromise","mergeScenes","sourceScene","destScene","ShaderPool","init","blinnPhongVs","blinnPhongFs","pbrVs","pbrFs","shadowMapVs","shadowMapFs","shadowFs","skyboxVs","skyboxFs","particleVs","particleFs","ShaderProgramPool","_cacheHierarchy","_cacheMap","_lastQueryMap","_lastQueryKey","cacheMap","maskLength","_resizeCacheMapHierarchy","maxEndIndex","subCacheShaders","cacheKey","hierarchy","resizeLength","RenderTargetBlendState","colorBlendOperation","Add","alphaBlendOperation","sourceColorBlendFactor","One","sourceAlphaBlendFactor","destinationColorBlendFactor","Zero","destinationAlphaBlendFactor","colorWriteMask","All","_blendEnable","BlendState","targetBlendState","blendColor","alphaToCoverage","_getGLBlendFactor","blendFactor","WebGLRenderingContext","ZERO","ONE","SourceColor","SRC_COLOR","OneMinusSourceColor","ONE_MINUS_SRC_COLOR","DestinationColor","DST_COLOR","OneMinusDestinationColor","ONE_MINUS_DST_COLOR","SourceAlpha","SRC_ALPHA","OneMinusSourceAlpha","ONE_MINUS_SRC_ALPHA","DestinationAlpha","DST_ALPHA","OneMinusDestinationAlpha","ONE_MINUS_DST_ALPHA","SourceAlphaSaturate","SRC_ALPHA_SATURATE","BlendColor","CONSTANT_COLOR","OneMinusBlendColor","ONE_MINUS_CONSTANT_COLOR","_getGLBlendOperation","blendOperation","FUNC_ADD","Subtract","FUNC_SUBTRACT","ReverseSubtract","FUNC_REVERSE_SUBTRACT","Min","WebGL2RenderingContext","MIN","Max","MAX","hardwareRenderer","lastRenderState","_platformApply","blendState","lastState","lastTargetBlendState","blendEnable","BLEND","blendFuncSeparate","blendEquationSeparate","equals","colorMask","Red","Green","Blue","Alpha","SAMPLE_ALPHA_TO_COVERAGE","DepthState","enabled","writeEnabled","compareFunction","Less","_getGLCompareFunction","Never","NEVER","LESS","Equal","EQUAL","LessEqual","LEQUAL","Greater","GREATER","NotEqual","NOTEQUAL","GreaterEqual","GEQUAL","Always","ALWAYS","depthState","DEPTH_TEST","depthFunc","depthMask","RasterState","cullMode","Back","depthBias","slopeScaledDepthBias","_cullFaceEnable","rasterState","cullFaceEnable","Off","CULL_FACE","cullFace","BACK","FRONT","POLYGON_OFFSET_FILL","polygonOffset","StencilState","referenceValue","writeMask","compareFunctionFront","compareFunctionBack","passOperationFront","Keep","passOperationBack","failOperationFront","failOperationBack","zFailOperationFront","zFailOperationBack","_getGLStencilOperation","KEEP","Replace","REPLACE","IncrementSaturate","INCR","DecrementSaturate","DECR","Invert","INVERT","IncrementWrap","INCR_WRAP","DecrementWrap","DECR_WRAP","stencilState","STENCIL_TEST","referenceOrMaskChange","stencilFuncSeparate","stencilOpSeparate","stencilMask","_lastRenderState","engineFeatureManager","Engine","_canvas","_resourceManager","_sceneManager","_time","_isPaused","_vSyncCount","_targetFrameRate","_targetFrameInterval","_shaderProgramPools","_requestId","_timeoutId","_vSyncCounter","_animate","requestAnimationFrame","setTimeout","createEntity","pause","cancelAnimationFrame","clearTimeout","resume","time","componentsManager","run","shaderProgramPools","cameras","camera1","camera2","priority","cameraEntity","SystemInfo","devicePixelRatio","EngineFeature","preLoad","preTick","currentScene","postTick","shutdown","Script","onAwake","onEnable","onDisable","prototype","changeFlag","_transformChangeFlag","_updateBounds","_bounds","_overrideUpdate","mvMatrix","_mvMatrix","mvpMatrix","_mvpMatrix","mvInvMatrix","_mvInvMatrix","normalMatrix","_normalMatrix","_viewProjectMatrix","transpose","_localMatrixProperty","_worldMatrixProperty","_mvMatrixProperty","_mvpMatrixProperty","_mvInvMatrixProperty","_normalMatrixProperty","worldBounds","BoundingBox","Opaque","dest","renderElement","passNum","RenderPass","renderTarget","clearParam","renderOverride","clearMode","_clearParam","Everything","SOLID_COLOR","queue","SeparateSpritePass","_spriteItems","DONT_CLEAR","isUsed","renderHardware","_sortByDistance","eyePos","item1","item2","renderPriority","pos1","node","pos2","dis","BasicRenderPipeline","_queue","_defaultPass","_renderPassArray","_canvasDepthPass","_separateSpritePass","addRenderPass","nameOrPass","renderPass","p1","p2","removeRenderPass","pass","getRenderPass","idx","cubeFace","_drawRenderPass","activeRenderTarget","setRenderTargetFace","clearRenderTarget","blitRenderTarget","separateDraw","RenderContext","_getRenderContext","_renderContext","projectionMatrix","MathTemp","tempMat4","tempVec4","tempVec3","ClearFlags","_nearClipPlane","_projMatChange","_farClipPlane","_fieldOfView","_customAspectRatio","_viewport","_isOrthographic","_orthographicSize","_backgroundColor","setClearMode","_clearMode","_isViewMatrixDirty","_transform","_viewMatrix","_projectionMatrix","_isProjMatSetting","_isProjectionDirty","_lastAspectSize","aspectRatio","perspective","ortho","_renderTarget","_isInvProjMatDirty","_isFrustumProjectDirty","_isInvViewProjDirty","_frustumViewChangeFlag","resetProjectionMatrix","resetAspectRatio","worldToViewportPoint","point","nx","ny","nz","viewportToWorldPoint","invViewProjMat","_innerViewportToWorldPoint","viewportPointToRay","clipPoint","origin","farPoint","_invViewProjMat","subtract","screenToViewportPoint","viewport","viewportToScreenPoint","worldToScreenPoint","screenToWorldPoint","calculateFromMatrix","depth","invW","_viewMatrixProperty","_projectionMatrixProperty","_vpMatrixProperty","_inverseViewMatrixProperty","inverseViewMatrix","_inverseProjectionMatrixProperty","inverseProjectionMatrix","_cameraPositionProperty","backgroundColor","defaultRenderPass","_inverseProjectionMatrix","_inverseViewMatrix","BoundingFrustum","mimeType","json","gltf","mtl","prefab","txt","bin","png","webp","jpg","defaultRetryCount","defaultTimeout","defaultInterval","request","config","getMimeTypeFromUrl","realRequest","requestImage","requestRes","lastError","MultiExecutor","stop","start","img","Image","onerror","onabort","timeoutId","onload","crossOrigin","xhr","XMLHttpRequest","status","response","responseText","ontimeout","onprogress","loaded","open","withCredentials","credentials","responseType","headers","setRequestHeader","send","extname","execFunc","totalCount","interval","_currentCount","done","exec","Loader","AssetType","ColliderFeature","colliders","attachCollider","collider","detachCollider","Collider","ABoxCollider","boxMin","boxMax","_corners","_cornerFlag","setBoxMinMax","setBoxCenterSize","center","halfSize","getCorners","minX","minY","minZ","h","d","ASphereCollider","radius","setSphere","PlaneCollider","planePoint","normal","setPlane","RaycastHit","Number","MAX_VALUE","_tempPlane","Plane","_tepmBox","_tempShpere","BoundingSphere","_ray","_outPos","Ray","cf","nearestHit","hit","localRay","_getLocalRay","intersect","intersectBox","_updateHitResult","radio","intersectSphere","dot","intersectPlane","outHit","hitPos","getPoint","worldToLocal","o","_transformDirection","Mesh","primitives","groups","weights","updatePrimitiveWeightsIndices","weightsIndices","Skin","inverseBindMatrices","joints","skeleton","addPrimitivesRefCount","mesh","MeshRenderer","_mesh","setSharedMaterial","primitiveIndex","_sharedMaterials","setMaterial","_instanceMaterials","getInstanceMaterial","getSharedMaterial","renderPipeline","localBounds","Texture2D","_format","mipmap","_compressedMipFilled","formatDetail","createTexture","filterMode","wrapModeU","wrapModeV","setPixelBuffer","colorBuffer","mipLevel","mipWidth","mipHeight","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mipBit","compressedTexSubImage2D","compressedTexImage2D","texSubImage2D","setImageSource","imageSource","flipY","premultiplyAlpha","getPixelBuffer","SkinnedMeshRenderer","_skin","_mat","_weights","_useJointTexture","matrixPalette","_jointMatrixProperty","setWeights","_initJoints","skin","jointNodes","findByNodeName","maxAttribUniformVec4","renderStates","getParameter","MAX_VERTEX_UNIFORM_VECTORS","maxJoints","jointCount","_jointCountProperty","canIUseMoreJoints","_jointSamplerProperty","jointTexture","_maxJoints","nodeName","_findParent","brother","_hasInitJoints","ibms","mat","identity","createJointTexture","LODGroup","_lods","addLod","rendererAbility","dist","lods","activeLevel","lod","AlphaMode","BlinnPhongMaterial","_ambientColor","_ambientTexture","_emissiveColor","_emissiveTexture","_shininess","_alphaMode","CutOff","Blend","_doubleSided","ambientColor","emissiveColor","shininess","PBRMaterial","_baseColor","_baseColorTexture","baseColor","_opacityTexture","_metallicFactor","_roughnessFactor","_metallicTexture","_roughnessTexture","_metallicRoughnessTexture","_normalTexture","_normalScale","_occlusionTexture","_occlusionStrength","_alphaCutoff","_glossinessFactor","_specularGlossinessTexture","_reflectionTexture","_envMapIntensity","_refractionRatio","_refractionDepth","_refractionTexture","_PTMMatrix","_perturbationTexture","_perturbationUOffset","_perturbationVOffset","_unLight","_srgb","_srgbFast","_gamma","_getOpacityFromRGB","_isMetallicWorkflow","_envMapModeRefract","AlphaTest","metallicFactor","roughnessFactor","normalScale","occlusionStrength","alphaCutoff","glossinessFactor","envMapIntensity","refractionRatio","refractionDepth","perturbationUOffset","perturbationVOffset","unLight","srgb","srgbFast","gamma","getOpacityFromRGB","isMetallicWorkflow","envMapModeRefract","alphaMode","TextureCubeFace","TextureCubeMap","_compressedFaceFilled","TEXTURE_CUBE_MAP","mipSize","RenderDepthTexture","_autoMipmap","_isCube","RenderTarget","_colorTextures","_depthTexture","_antiAliasing","renderTexture","antiAliasing","_frameBuffer","_MSAAFrameBuffer","_depthRenderBuffer","_MSAAColorRenderBuffers","_MSAADepthRenderBuffer","_oriDrawBuffers","_blitDrawBuffers","drawBuffers","some","maxAntiAliasing","_bindMainFBO","_bindMSAAFBO","getColorTexture","deleteFramebuffer","deleteRenderbuffer","_activeRenderTarget","_setRenderTargetFace","PositiveX","colorTexture","_blitRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","colorTextureLength","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","readBuffer","blitFramebuffer","NONE","renderDepth","depthRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","MSAADepthRenderBuffer","MSAAColorRenderBuffer","renderbufferStorageMultisample","_checkFrameBuffer","checkFramebufferStatus","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","RenderColorTexture","BufferUsage","VertexElementFormat","IndexFormat","BufferUtil","_getGLBufferUsage","bufferUsage","Static","STATIC_DRAW","Dynamic","DYNAMIC_DRAW","Stream","STREAM_DRAW","_getGLIndexType","indexFormat","UInt8","UInt16","UNSIGNED_SHORT","UInt32","_getElementInfo","Float","Byte4","Short2","SHORT","Short4","UShort2","UShort4","BufferBindFlag","SetDataOptions","Buffer","_byteLength","_bufferUsage","byteLengthOrData","_glBindTarget","_glBufferUsage","_nativeBuffer","glBufferUsage","glBindTarget","VertexBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","createBuffer","bufferData","byteLength","bindBuffer","setData","bufferByteOffset","dataOffset","dataLength","options","None","Discard","byteSize","BYTES_PER_ELEMENT","dataByteLength","isArrayBufferView","byteOffset","bufferSubData","subData","buffer","getData","getBufferSubData","deleteBuffer","resize","PrimitiveTopology","IndexBufferBinding","_buffer","VertexBufferBinding","_stride","stride","Primitive","_vertexBufferBindings","_vertexElements","_indexBufferBinding","instanceCount","_vertexElementMap","_glIndexType","_platformPrimitive","targets","createPlatformPrimitive","setVertexBufferBinding","bufferOrBinding","strideOrFirstIndex","firstIndex","binding","isBinding","bindings","_setVertexBufferBinding","setVertexBufferBindings","bufferBindings","needLength","setIndexBufferBinding","setVertexElements","_clearVertexElements","_addVertexElement","_draw","draw","vertexBufferBindings","vertexElementMap","_uvMacro","_normalMacro","_tangentMacro","_vertexColorMacro","_vertexAlphaMacro","semantic","lastBinding","VertexElement","_semantic","_offset","_bindingIndex","_instanceStepRate","offset","bindingIndex","instanceStepRate","normalized","_glElementInfo","SubPrimitive","topology","Triangles","SpriteRenderer","_uvRect","_worldSize","_positionQuad","_rotationAngle","_anchor","_texture","_rect","_worldSizeFactor","setRect","setAnchor","setUvRect","setWorldSize","leftTop","leftBottom","rightTop","rightBottom","rect","rectObject","JSON","parse","anchor","u","_updatePositionQuad","_transformByMatrix","matrix","_tempVec40","_tempVec41","_tempVec42","_tempVec43","vx","vy","c","ns","vz","transformByQuat","cx","cy","WrapMode","AnimationEventType","InterpolationType","TagetType","AnimationClip","duration","durationIndex","samplers","channels","addSampler","_input","_output","_outputSize","_interpolation","CUBICSPLINE","sampler","input","output","outputSize","interpolation","addChannel","samplerIndex","targetID","targetPath","bindSampler","tagetType","_tagetTypeMap","channel","pathType","other","getChannelCount","getChannelObject","channelIndex","getFrameCount","getFrameTime","frameIndex","getChannelTimeLength","frameCount","createChannelValue","evaluate","outValue","nextFrameIndex","alpha","evaluateCubicSpline","evaluateLinear","squared","cubed","part1","part2","part3","part4","t1","v1","t2","v2","_quaSlerp","aIndex","bIndex","ax","ay","az","aw","bx","by","bz","bw","omega","cosom","sinom","scale0","scale1","acos","sin","AnimationLayer","_animClip","_isPlaying","layerWeight","mixTagetLayer","isFading","fadeDeltaTime","crossFadeDuration","fadeDuration","crossFadeDeltaTime","isMixLayer","hasMixLayer","mixEntity","_activedEvents","_wrapMode","_channelStates","_animClipLength","_frameEvents","canMix","nextAnimClip","rootEntity","curChannel","curTargetObject","_findChannelTarget","nextChannel","nextTargetObject","mix","animClip","targetLayer","isPlaying","wrapMode","_addEvents","targetChannelStates","targetObject","frameTime","currentFrame","currentValue","mixWeight","channelTimeLength","removeMixWeight","play","LOOP","channelTargets","rightnow","ONCE","updateState","_activeEvents","playingCount","_updateChannelState","getChannelLayerWeight","getChannelValue","triggerEvents","jumpToFrame","channelState","animClipLength","lerpState","_getKeyAndAlpha","currentKey","nextKey","frameEventIndex","eventType","FRAME_EVENT","triggerTime","triggered","curFrameTime","frameEvent","LOOP_END","FINISHED","rootNode","targetSceneObject","keyTime","timeKeys","numKeys","keyLength","Animation","lerp","startValue","endValue","quat","slerp","_animLayers","animLayer","_updateValues","_removeRefMixLayers","addAnimationClip","_animSet","removeAnimationClip","getAnimationClipLength","getAnimationClip","playAnimationClip","_channelTargets","CrossFade","targetAnimLayer","mixBoneName","mixNode","channelTarget","_getChannelValue","values","weight","BufferGeometry","_primitive","indexBufferBinding","vertexElements","_subGeometries","addSubGeometry","subGeometry","removeSubGeometry","subGeometries","clearSubGeometry","GeometryRenderer","_material","_geometry","geometry","ShapeGeometry","_initialize","vertices","indices","vertexStride","_initBuffer","positionElement","vertexBuffer","indexBuffer","IndexBuffer","_computeBounds","vertexElement","bufferIndex","vertexBufferBinding","vertexCount","arrayBuffer","ArrayBuffer","dataView","DataView","Infinity","base","getFloat32","CuboidGeometry","halfWidth","halfHeight","halfDepth","SphereGeometry","horizontalSegments","verticalSegments","alphaStart","alphaRange","thetaStart","thetaRange","_parameters","_thetaEnd","initialize","grid","iy","verticesRow","ix","posX","posY","posZ","from","PlaneGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","heightSegments","openEnded","thetaLength","frontFace","CCW","indexArray","_vertices","_indices","generateTorso","generateCap","slope","indexRow","theta","sinTheta","cosTheta","vertX","vertY","vertZ","isTop","sign","centerIndexStart","centerIndexEnd","vertexX","vertexY","vertexZ","uvX","uvY","CircleGeometry","segments","segment","ScreenQuadGeometry","TriangleFan","TorusGeometry","parameters","tube","tubularSegments","arc","Model","_props","sphereRadius","sphereHorizontalSegments","sphereVerticalSegments","sphereAlphaStart","sphereAlphaRange","sphereThetaStart","sphereThetaRange","cylinderRadiusTop","cylinderRadiusBottom","cylinderHeight","cylinderRadialSegments","cylinderHeightSegments","cylinderOpenEnded","planeWidth","planeHeight","planeHorizontalSegments","planeVerticalSegments","boxWidth","boxHeight","boxDepth","_geometryType","props","geometryType","GeometryType","Box","setProp","SkyBoxMaterial","SkyBox","_skyBoxMap","_matrix","_initBounds","modelMatrix","view","proj","NEGATIVE_INFINITY","POSITIVE_INFINITY","DirtyFlagType","ParticleRenderer","_getRandom","random","_updateDirtyFlag","Position","_positionRandomness","_positionArray","_velocity","Velocity","_velocityRandomness","_acceleration","Acceleration","_accelerationRandomness","_colorRandomness","_size","Size","_sizeRandomness","_alpha","Apha","_alphaRandomness","_startAngle","StartAngle","_startAngleRandomness","_rotateVelocity","RotateVelocity","_rotateVelocityRandomness","_lifetime","LifeTime","_startTimeRandomness","StartTime","Scale","_maxCount","_isStart","_isInit","_createGeometry","_updateBuffer","_isOnce","_isRotateToVelocity","_isUseOriginColor","_isScaleByLifetime","_is2d","_isFadeIn","_isFadeOut","_vertexStride","_vertexBuffer","spriteSheet","_createMaterial","is2d","isUseOriginColor","isFadeOut","vertexFloatCount","startIndex","_updateSingleBuffer","getRandom","k0","k1","k2","k3","pos","clamp","_updateSingleUv","q","ratio","VERT_SHADER","FRAG_SHADER","TrailMaterial","_tempVector3","TrailRenderer","_stroke","_minSeg","_maxPointNum","_points","_pointStates","_strapPoints","_curPointNum","_prePointsNum","stroke","minSeg","lifetime","targetFrameRate","_initGeometry","mov","newIdx","appendNewPoint","lastPoint","_updateStrapVertices","_updateStrapCoords","TriangleStrip","points","down","dy","cross","perpVector","vertieces","_projectOnPlane","p0","texDelta","_projectOnVector","n_p","cosine","BoxCollider","_center","isShowCollider","SphereCollider","__center","__radius","_radius","intersectBox2Box","boxA","boxB","intersectSphere2Sphere","sphereA","sphereB","intersectSphere2Box","sphere","box","closestPoint","CollisionDetection","_colliderManager","_myCollider","_overlopCollider","_sphere","_box","overlopCollider","_updateWorldBox","_boxCollision","_getWorldSphere","_sphereCollision","boxCollider","_tempBox1","sphereCollider","_tempBox2","ACollider","applyMixins","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","Fog","EXP2Fog","_density","_densityProperty","density","LinearFog","_near","_nearProperty","_far","_farProperty","near","far","Probe","probeLayer","_oriCameraRenderTarget","_renderTargetSwap","_oriCameraCullingMask","onTextureChange","renderColorTexture","_reset","cacheTarget","cacheUp","cacheDir","CubeProbe","oriViewMatrix","_oriFieldOfView","_storeCamera","_setCamera","_restoreCamera","fieldOfView","LightShadow","_viewMatFromLightProperty","_projMatFromLightProperty","_shadowBiasProperty","bias","_shadowIntensityProperty","_shadowRadiusProperty","_shadowMapSizeProperty","mapSize","_shadowMapsProperty","clearMap","_mapSize","initShadowProjectionMatrix","fov","sqrt","appendData","viewStart","projectionStart","biasStart","intensityStart","radiusStart","mapSizeStart","mapStart","defineProperty","_enableShadow","shadow","_recieveShadow","_castShadow","ShadowMapMaterial","ShadowMapPass","ShadowMaterial","ShadowPass","shadowMapCount","lgt","enableShadow","ShadowFeature","_shadowPass","_shadowMapMaterial","addShadowPass","shadowMapPass","addShadowMapPass","updatePassRenderFlag","shadowMaterial","Layer30","Layer31","renderQueue","recieveShadow","castShadow"],"mappings":"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"}