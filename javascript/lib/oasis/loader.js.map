{"version":3,"file":"module.js","sources":["../src/BufferLoader.ts","../src/gltf/Util.ts","../src/gltf/glTFDracoMeshCompression.ts","../src/gltf/glTF.ts","../src/gltf/glb.ts","../src/GLTFLoader.ts","../src/JSONLoader.ts","../src/compressed-texture/KhronosTextureContainer.ts","../src/compressed-texture/index.ts","../src/KTXCubeLoader.ts","../src/KTXLoader.ts","../src/Texture2DLoader.ts","../src/TextureCubeLoader.ts","../src/GLTFModel.ts","../src/scene-loader/plugins/PluginManager.ts","../src/scene-loader/utils.ts","../src/scene-loader/resources/SchemaResource.ts","../src/scene-loader/resources/TextureResource.ts","../src/scene-loader/resources/PBRMaterialResource.ts","../src/scene-loader/resources/GLTFResource.ts","../src/scene-loader/resources/ScriptResource.ts","../src/scene-loader/resources/BlinnPhongMaterialResource.ts","../src/scene-loader/resources/TextureCubeMapResource.ts","../src/scene-loader/resources/BaseResource.ts","../src/scene-loader/AbilityManager.ts","../src/scene-loader/NodeManager.ts","../src/scene-loader/ResourceManager.ts","../src/scene-loader/Oasis.ts","../src/scene-loader/temp.compatible.ts","../src/scene-loader/Parser.ts"],"sourcesContent":["import { resourceLoader, Loader, AssetPromise, AssetType, LoadItem } from \"@oasis-engine/core\";\n\nfunction isBase64(url) {\n  return /^data:(.+?);base64,/.test(url);\n}\n@resourceLoader(AssetType.Buffer, [\"bin\", \"r3bin\"], false)\nclass BufferLoader extends Loader<ArrayBuffer> {\n  load(item: LoadItem): AssetPromise<ArrayBuffer> {\n    const url = item.url;\n    if (isBase64(url)) {\n      return new AssetPromise((resolve) => {\n        const base64Str = url.slice(13 + RegExp.$1.length);\n        const result = Uint8Array.from(atob(base64Str), (c) => c.charCodeAt(0));\n        resolve(result.buffer);\n      });\n    }\n    return this.request(url, {\n      ...item,\n      type: \"arraybuffer\"\n    });\n  }\n}\n","import { DataType, IndexFormat, VertexElement, VertexElementFormat } from \"@oasis-engine/core\";\n\nconst WEBGL_COMPONENT_TYPES = {\n  5120: Int8Array,\n  5121: Uint8Array,\n  5122: Int16Array,\n  5123: Uint16Array,\n  5125: Uint32Array,\n  5126: Float32Array\n};\n\n/**\n * Parse binary text for glb loader.\n * @param array\n * @returns String\n * @private\n */\nexport function decodeText(array) {\n  if (typeof TextDecoder !== \"undefined\") {\n    return new TextDecoder().decode(array);\n  }\n\n  // TextDecoder polyfill\n  let s = \"\";\n\n  for (let i = 0, il = array.length; i < il; i++) {\n    s += String.fromCharCode(array[i]);\n  }\n\n  return decodeURIComponent(encodeURIComponent(s));\n}\n\n/**\n * Find uniform object according to paramters[name] in glTF.\n * @param obj\n * @param key\n * @param value\n * @returns {object}\n * @private\n */\nexport function findByKeyValue(obj, key, value) {\n  for (const name in obj) {\n    if (obj[name][key] === value) {\n      return obj[name];\n    }\n  }\n  return null;\n}\n\n/** Get the number of bytes occupied by accessor type.\n * @return {number}\n * @param {string} accessorType\n * @private\n */\nexport function getAccessorTypeSize(accessorType) {\n  const ACCESSOR_TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16\n  };\n  return ACCESSOR_TYPE_SIZE[accessorType];\n}\n\n/** Get the TypedArray corresponding to the component type.\n * @return {function}\n * @param {string} componentType\n */\nexport function getComponentType(componentType) {\n  return WEBGL_COMPONENT_TYPES[componentType];\n}\n\n/**\n * Get accessor data.\n * @param gltf\n * @param accessor\n * @param buffers\n * @private\n */\nexport function getAccessorData(gltf, accessor, buffers) {\n  const bufferView = gltf.bufferViews[accessor.bufferView];\n  const arrayBuffer = buffers[bufferView.buffer];\n  const accessorByteOffset = accessor.hasOwnProperty(\"byteOffset\") ? accessor.byteOffset : 0;\n  const bufferViewByteOffset = bufferView.hasOwnProperty(\"byteOffset\") ? bufferView.byteOffset : 0;\n  const byteOffset = accessorByteOffset + bufferViewByteOffset;\n  const accessorTypeSize = getAccessorTypeSize(accessor.type);\n  const length = accessorTypeSize * accessor.count;\n  const byteStride = bufferView.byteStride ?? 0;\n\n  const arrayType = getComponentType(accessor.componentType);\n  let uint8Array;\n  if (byteStride) {\n    uint8Array = new Uint8Array(length * arrayType.BYTES_PER_ELEMENT);\n    const originalBufferView = new Uint8Array(arrayBuffer, bufferViewByteOffset, bufferView.byteLength);\n    let viewAccessor = 0;\n    const accessorByteSize = accessorTypeSize * arrayType.BYTES_PER_ELEMENT;\n    for (let i = 0; i < accessor.count; i++) {\n      viewAccessor = i * byteStride + accessorByteOffset;\n      for (let j = 0; j < accessorByteSize; j++) {\n        uint8Array[i * accessorByteSize + j] = originalBufferView[viewAccessor + j];\n      }\n    }\n  } else {\n    uint8Array = new Uint8Array(arrayBuffer, byteOffset, length * arrayType.BYTES_PER_ELEMENT);\n    uint8Array = new Uint8Array(uint8Array);\n  }\n\n  return new arrayType(uint8Array.buffer);\n}\n\n/**\n * Get buffer data\n * @param bufferView\n * @param buffers\n * @returns {Blob|ArrayBuffer|Array.<T>|string}\n * @private\n */\nexport function getBufferData(bufferView, buffers) {\n  // get bufferView\n  const arrayBuffer = buffers[bufferView.buffer];\n  const byteOffset = bufferView.byteOffset || 0;\n  return arrayBuffer.slice(byteOffset, byteOffset + bufferView.byteLength);\n}\n\nexport function getVertexStride(accessor): number {\n  const size = getAccessorTypeSize(accessor.type);\n  const componentType = getComponentType(accessor.componentType);\n  return size * componentType.BYTES_PER_ELEMENT;\n}\n\nexport function createVertexElement(gltf, semantic, accessor, index: number): VertexElement {\n  const size = getAccessorTypeSize(accessor.type);\n  return new VertexElement(semantic, 0, getElementFormat(accessor.componentType, size), index);\n}\n\nexport function getIndexFormat(type: number): IndexFormat {\n  switch (type) {\n    case DataType.UNSIGNED_BYTE:\n      return IndexFormat.UInt8;\n    case DataType.UNSIGNED_SHORT:\n      return IndexFormat.UInt16;\n    case DataType.UNSIGNED_INT:\n      return IndexFormat.UInt32;\n  }\n}\n\nexport function getElementFormat(type: number, size: number): VertexElementFormat {\n  if (type == DataType.FLOAT) {\n    switch (size) {\n      case 1:\n        return VertexElementFormat.Float;\n      case 2:\n        return VertexElementFormat.Vector2;\n      case 3:\n        return VertexElementFormat.Vector3;\n      case 4:\n        return VertexElementFormat.Vector4;\n    }\n  }\n  if (type == DataType.UNSIGNED_SHORT) {\n    switch (size) {\n      case 2:\n        return VertexElementFormat.UShort2;\n      case 4:\n        return VertexElementFormat.UShort4;\n    }\n  }\n}\n\n/**\n * Load image buffer\n * @param imageBuffer\n * @param type\n * @param callback\n */\nexport function loadImageBuffer(imageBuffer: ArrayBuffer, type: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const blob = new window.Blob([imageBuffer], { type });\n    const img = new Image();\n    img.src = URL.createObjectURL(blob);\n\n    img.crossOrigin = \"anonymous\";\n    img.onerror = function () {\n      reject(new Error(\"Failed to load image buffer\"));\n    };\n    img.onload = function () {\n      // Call requestAnimationFrame to avoid iOS's bug.\n      requestAnimationFrame(() => {\n        resolve(img);\n      });\n    };\n  });\n}\n\nfunction isRelativeUrl(url: string): boolean {\n  // 47 is /\n  return url.charCodeAt(0) !== 47 && url.match(/:\\/\\//) === null;\n}\n\nfunction isAbsoluteUrl(url: string): boolean {\n  return /^(?:http|blob|data:|\\/)/.test(url);\n}\n\nexport function parseRelativeUrl(baseUrl: string, relativeUrl: string): string {\n  if (isAbsoluteUrl(relativeUrl)) {\n    return relativeUrl;\n  }\n  // TODO: implement ../path\n  return baseUrl.substring(0, baseUrl.lastIndexOf(\"/\") + 1) + relativeUrl;\n}\n","import { DRACODecoder } from \"@oasis-engine/draco\";\nimport { getComponentType, getBufferData } from \"./Util\";\n\nlet decoder;\n\nexport const glTFDracoMeshCompression = {\n  init() {\n    if (!decoder) {\n      decoder = new DRACODecoder();\n    }\n  },\n  parse(extension, gltfPrimitive, gltf, buffers) {\n    const { bufferViews, accessors } = gltf;\n    const bufferViewIndex = extension.bufferView;\n    const gltfAttributeMap = extension.attributes;\n    const attributeMap = {};\n    const attributeTypeMap = {};\n\n    for (let attributeName in gltfAttributeMap) {\n      attributeMap[attributeName] = gltfAttributeMap[attributeName];\n    }\n\n    for (let attributeName in gltfPrimitive.attributes) {\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        const accessorDef = accessors[gltfPrimitive.attributes[attributeName]];\n        attributeTypeMap[attributeName] = getComponentType(accessorDef.componentType).name;\n      }\n    }\n    const indexAccessor = accessors[gltfPrimitive.indices];\n    const indexType = getComponentType(indexAccessor.componentType).name;\n    const taskConfig = {\n      attributeIDs: attributeMap,\n      attributeTypes: attributeTypeMap,\n      useUniqueIDs: true,\n      indexType\n    };\n    const buffer = getBufferData(bufferViews[bufferViewIndex], buffers);\n\n    return decoder.decode(buffer, taskConfig).then((parsedGeometry) => parsedGeometry);\n  }\n};\n","import {\n  AlphaMode,\n  Animation,\n  AnimationClip,\n  BlinnPhongMaterial,\n  Buffer,\n  BufferBindFlag,\n  BufferUsage,\n  Camera,\n  Engine,\n  EngineObject,\n  Entity,\n  IndexBufferBinding,\n  IndexFormat,\n  InterpolationType,\n  Logger,\n  Material,\n  Mesh,\n  MeshRenderer,\n  PBRMaterial,\n  Primitive,\n  PrimitiveTopology,\n  Scene,\n  Skin,\n  SkinnedMeshRenderer,\n  SubPrimitive,\n  Texture2D,\n  TypedArray,\n  VertexElement\n} from \"@oasis-engine/core\";\nimport { Color, Matrix, Quaternion, Vector3 } from \"@oasis-engine/math\";\nimport { LoadedGLTFResource } from \"../GLTF\";\nimport { glTFDracoMeshCompression } from \"./glTFDracoMeshCompression\";\nimport { createVertexElement, getAccessorData, getAccessorTypeSize, getIndexFormat, getVertexStride } from \"./Util\";\n\n// KHR_lights:  https://github.com/MiiBond/glTF/tree/khr_lights_v1/extensions/2.0/Khronos/KHR_lights\n//              https://github.com/KhronosGroup/glTF/pull/1223\n//              https://github.com/KhronosGroup/glTF/issues/945\n// KHR_materials_common:  https://github.com/donmccurdy/glTF/tree/donmccurdy-KHR_materials_common/extensions/Khronos/KHR_materials_common_v2\n//                        https://github.com/KhronosGroup/glTF/pull/1150\n//                        https://github.com/KhronosGroup/glTF/issues/947\n\nconst TARGET_PATH_MAP = {\n  translation: \"position\",\n  rotation: \"rotation\",\n  scale: \"scale\",\n  weights: \"weights\"\n};\n\nlet nodeCount = 0;\n\nconst RegistedObjs = {};\nconst RegistedCustomMaterials = {};\n\nconst getDefaultMaterial = (function () {\n  // let defaultMateril: BlinnPhongMaterial;\n  return (engine: Engine) => {\n    // if (!defaultMateril) {\n    let defaultMateril: BlinnPhongMaterial = new BlinnPhongMaterial(engine);\n    defaultMateril.emissiveColor = new Color(0.749, 0.749, 0.749, 1);\n    // }\n    return defaultMateril;\n  };\n})();\n\n/**\n * Extension dedicated registration key.\n */\nexport const HandledExtensions = {\n  PBRMaterial: \"PBRMaterial\",\n  KHR_lights: \"KHR_lights\",\n  KHR_materials_unlit: \"KHR_materials_unlit\",\n  KHR_materials_pbrSpecularGlossiness: \"KHR_materials_pbrSpecularGlossiness\",\n  KHR_techniques_webgl: \"KHR_techniques_webgl\",\n  KHR_draco_mesh_compression: \"KHR_draco_mesh_compression\"\n};\n\nlet KHR_lights = null;\n\nconst extensionParsers = {\n  KHR_lights: KHR_lights,\n  KHR_materials_unlit: PBRMaterial, // Also have other materials\n  KHR_materials_pbrSpecularGlossiness: PBRMaterial,\n  KHR_techniques_webgl: Material,\n  KHR_draco_mesh_compression: glTFDracoMeshCompression\n};\n\n/**\n * Register extension components to glTF loader.\n * @param extobj - Need to add extensions\n */\nexport function RegistExtension(extobj) {\n  Object.keys(extobj).forEach((name) => {\n    if (RegistedObjs[name] === undefined) {\n      RegistedObjs[name] = extobj[name];\n\n      switch (name) {\n        case HandledExtensions.PBRMaterial:\n          extensionParsers.KHR_materials_unlit = PBRMaterial;\n          break;\n        case HandledExtensions.KHR_lights:\n          KHR_lights = extobj[name];\n          extensionParsers.KHR_lights = KHR_lights;\n          break;\n        default:\n          if (Material.isPrototypeOf(extobj[name]) && extobj[name].TECH_NAME)\n            RegistedCustomMaterials[extobj[name].TECH_NAME] = extobj[name];\n          break;\n      }\n    }\n  });\n}\n\nexport interface GLTFParsed extends LoadedGLTFResource {\n  asset: Partial<GLTFResource>;\n  engine?: Engine;\n}\n\nexport class GLTFResource extends EngineObject {\n  defaultSceneRoot: Entity;\n  defaultScene: Scene;\n  scenes: Scene[];\n  textures?: Texture2D[];\n  animations?: AnimationClip[];\n  materials?: Material[];\n  meshes?: Mesh[];\n  skins?: Skin[];\n  cameras?: Camera[];\n  meta: any;\n}\n\n/**\n * Parse the glTF structure.\n * @param resource\n * @returns {*}\n * @private\n */\nexport function parseGLTF(data: LoadedGLTFResource, engine: Engine): Promise<GLTFResource> {\n  // Start processing glTF data.\n  const resources: GLTFParsed = {\n    engine,\n    gltf: data.gltf,\n    buffers: data.buffers,\n    asset: new GLTFResource(engine)\n  };\n  resources.asset.textures = data.textures;\n  resources.asset.meta = data.gltf;\n\n  if (resources.gltf.asset && resources.gltf.asset.version) {\n    resources.gltf.version = Number(resources.gltf.asset.version);\n    resources.gltf.isGltf2 = resources.gltf.version >= 2 && resources.gltf.version <= 3;\n  }\n\n  parseExtensions(resources);\n  // parse all related resources\n  return (\n    parseResources(resources, \"materials\", parseMaterial)\n      .then(() => parseResources(resources, \"meshes\", parseMesh))\n      // .then(() => parseResources(resources, \"cameras\", parseCamera))\n      .then(() => parseResources(resources, \"nodes\", parseNode))\n      .then(() => parseResources(resources, \"scenes\", parseScene))\n      .then(() => parseResources(resources, \"skins\", parseSkin))\n      .then(() => parseResources(resources, \"animations\", parseAnimation))\n      .then(() => buildSceneGraph(resources))\n  );\n}\n\nfunction parseExtensions(resources) {\n  const { gltf, asset } = resources;\n  const { extensions, extensionsUsed, extensionsRequired } = gltf;\n  if (extensionsUsed) {\n    Logger.info(\"extensionsUsed: \", extensionsUsed);\n    for (let i = 0; i < extensionsUsed.length; i++) {\n      if (Object.keys(extensionParsers).indexOf(extensionsUsed[i]) > -1) {\n        if (!extensionParsers[extensionsUsed[i]]) {\n          Logger.warn(\"extension \" + extensionsUsed[i] + \" is used, you can add this extension into gltf\");\n        }\n      } else {\n        Logger.warn(\"extensionsUsed has unsupported extension \" + extensionsUsed[i]);\n      }\n    }\n  }\n\n  if (extensionsRequired) {\n    Logger.info(`extensionsRequired: ${extensionsRequired}`);\n    for (let i = 0; i < extensionsRequired.length; i++) {\n      if (\n        Object.keys(extensionParsers).indexOf(extensionsRequired[i]) < 0 ||\n        !extensionParsers[extensionsRequired[i]]\n      ) {\n        Logger.error(`model has not supported required extension ${extensionsRequired[i]}`);\n      }\n      if (extensionsRequired[i] === HandledExtensions.KHR_draco_mesh_compression) {\n        extensionParsers.KHR_draco_mesh_compression.init();\n      }\n    }\n  }\n\n  if (extensions) {\n    if (KHR_lights && extensions.KHR_lights) {\n      asset.lights = KHR_lights.parseLights(extensions.KHR_lights.lights);\n    }\n  }\n}\n\n/**\n * General resource analysis method.\n * @param resources - Existing resources\n * @param name - Name\n * @param handler - Resource resolver\n * @private\n */\nfunction parseResources(resources: GLTFParsed, name: string, handler) {\n  const { gltf, asset } = resources;\n  if (!asset[name]) {\n    asset[name] = [];\n  }\n  if (gltf.hasOwnProperty(name)) {\n    const entities = gltf[name] || [];\n    Logger.debug(name + \":\", entities);\n    const promises = [];\n    for (let i = entities.length - 1; i >= 0; i--) {\n      promises.push(handler(entities[i], resources));\n    }\n    return Promise.all(promises).then((results) => {\n      for (let i = 0; i < results.length; i++) {\n        asset[name].push(results[i]);\n      }\n    });\n  }\n  return Promise.resolve();\n}\n\n/**\n * Parse material.\n * @param gltfMaterial\n * @param resources\n * @private\n */\nexport function parseMaterial(gltfMaterial, resources) {\n  const { gltf, asset } = resources;\n  const material: PBRMaterial = new PBRMaterial(resources.engine);\n\n  if (gltf.isGltf2 && typeof gltfMaterial.technique === \"undefined\") {\n    const {\n      pbrMetallicRoughness,\n      normalTexture,\n      emissiveTexture,\n      emissiveFactor,\n      occlusionTexture,\n      alphaMode,\n      alphaCutoff,\n      doubleSided,\n      extensions\n    } = gltfMaterial;\n\n    if (pbrMetallicRoughness) {\n      const {\n        baseColorFactor,\n        baseColorTexture,\n        metallicFactor,\n        roughnessFactor,\n        metallicRoughnessTexture\n      } = pbrMetallicRoughness;\n      if (baseColorTexture) {\n        material.baseColorTexture = getItemByIdx(\"textures\", baseColorTexture.index || 0, resources, false);\n      }\n      if (baseColorFactor) {\n        material.baseColor = new Color(...baseColorFactor);\n      }\n      material.metallicFactor = metallicFactor !== undefined ? metallicFactor : 1;\n      material.roughnessFactor = roughnessFactor !== undefined ? roughnessFactor : 1;\n      if (metallicRoughnessTexture) {\n        material.metallicRoughnessTexture = getItemByIdx(\n          \"textures\",\n          metallicRoughnessTexture.index || 0,\n          resources,\n          false\n        );\n      }\n    }\n\n    if (normalTexture) {\n      const { index, texCoord, scale } = normalTexture;\n      material.normalTexture = getItemByIdx(\"textures\", index || 0, resources, false);\n\n      if (typeof scale !== undefined) {\n        material.normalScale = scale;\n      }\n    }\n\n    if (emissiveTexture) {\n      material.emissiveTexture = getItemByIdx(\"textures\", emissiveTexture.index || 0, resources, false);\n    }\n\n    if (emissiveFactor) {\n      material.emissiveColor = new Color(...emissiveFactor);\n    }\n\n    if (occlusionTexture) {\n      material.occlusionTexture = getItemByIdx(\"textures\", occlusionTexture.index || 0, resources, false);\n\n      if (occlusionTexture.strength !== undefined) {\n        material.occlusionStrength = occlusionTexture.strength;\n      }\n    }\n\n    material.doubleSided = doubleSided;\n\n    switch (alphaMode) {\n      case \"OPAQUE\":\n        material.alphaMode = AlphaMode.Opaque;\n        break;\n      case \"BLEND\":\n        material.alphaMode = AlphaMode.Blend;\n        break;\n      case \"MASK\":\n        material.alphaMode = AlphaMode.CutOff;\n        material.alphaCutoff = alphaCutoff === undefined ? 0.5 : alphaCutoff;\n        break;\n    }\n\n    if (extensions) {\n      if (extensions.KHR_materials_unlit) {\n        material.unLight = true;\n      }\n\n      // High gloss.\n      if (extensions.KHR_materials_pbrSpecularGlossiness) {\n        const {\n          diffuseFactor,\n          diffuseTexture,\n          specularFactor,\n          glossinessFactor,\n          specularGlossinessTexture\n        } = extensions.KHR_materials_pbrSpecularGlossiness;\n\n        material.isMetallicWorkflow = false;\n        if (diffuseFactor) {\n          material.baseColor = new Color(...diffuseFactor);\n        }\n        if (diffuseTexture) {\n          material.baseColorTexture = getItemByIdx(\"textures\", diffuseTexture.index || 0, resources, false);\n        }\n        if (specularFactor) {\n          material.specularColor = new Color(...specularFactor);\n        }\n        if (glossinessFactor !== undefined) {\n          material.glossinessFactor = glossinessFactor;\n        }\n        if (specularGlossinessTexture) {\n          material.specularGlossinessTexture = getItemByIdx(\n            \"textures\",\n            specularGlossinessTexture.index || 0,\n            resources,\n            false\n          );\n        }\n      }\n    }\n  } else {\n    const techniqueName = gltfMaterial.technique;\n    Logger.warn(\"Deprecated: Please use a model that meets the glTF 2.0 specification\");\n    // TODO: support KHR_UNLIT_MATERIAL in the future.\n    if (techniqueName === \"Texture\") {\n      material.unLight = true;\n      const index = gltfMaterial.values._MainTex[0];\n      material.baseColorTexture = getItemByIdx(\"textures\", index || 0, resources, false);\n    }\n  }\n  return Promise.resolve(material);\n}\n\n/**\n * Parse skin.\n * @param gltfSkin\n * @param resources\n * @private\n */\nexport function parseSkin(gltfSkin, resources) {\n  const { gltf, buffers } = resources;\n\n  const jointCount = gltfSkin.joints.length;\n\n  // FIXME: name is null\n  const skin = new Skin(gltfSkin.name);\n  // parse IBM\n  const accessor = gltf.accessors[gltfSkin.inverseBindMatrices];\n  const buffer = getAccessorData(gltf, accessor, buffers);\n  const MAT4_LENGTH = 16;\n\n  for (let i = 0; i < jointCount; i++) {\n    const startIdx = MAT4_LENGTH * i;\n    const endIdx = startIdx + MAT4_LENGTH;\n    skin.inverseBindMatrices[i] = new Matrix(...buffer.subarray(startIdx, endIdx));\n  }\n\n  // get joints\n  for (let i = 0; i < jointCount; i++) {\n    const node = getItemByIdx(\"nodes\", gltfSkin.joints[i], resources);\n    skin.joints[i] = node.name;\n  }\n\n  // get skeleton\n  const node = getItemByIdx(\"nodes\", gltfSkin.skeleton == null ? gltfSkin.joints[0] : gltfSkin.skeleton, resources);\n  skin.skeleton = node.name;\n\n  return Promise.resolve(skin);\n}\n\nfunction parsePrimitiveVertex(\n  mesh: Mesh,\n  primitive: Primitive,\n  primitiveGroup: SubPrimitive,\n  gltfPrimitive,\n  gltf,\n  getVertexBufferData: (string) => TypedArray,\n  getIndexBufferData: () => TypedArray,\n  engine\n) {\n  // load vertices\n  let i = 0;\n  const vertexElements: VertexElement[] = [];\n  for (const attributeSemantic in gltfPrimitive.attributes) {\n    const accessorIdx = gltfPrimitive.attributes[attributeSemantic];\n    const accessor = gltf.accessors[accessorIdx];\n    const stride = getVertexStride(accessor);\n    const vertexELement = createVertexElement(gltf, attributeSemantic, accessor, i);\n\n    vertexElements.push(vertexELement);\n    const bufferData = getVertexBufferData(attributeSemantic);\n    const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, bufferData.byteLength, BufferUsage.Static);\n    vertexBuffer.setData(bufferData);\n    primitive.setVertexBufferBinding(vertexBuffer, stride, i++);\n\n    // compute bounds\n    if (vertexELement.semantic == \"POSITION\") {\n      const position = new Vector3();\n      const vertexCount = bufferData.length / 3;\n      const { min, max } = mesh.bounds;\n      for (let i = 0; i < vertexCount; i++) {\n        const offset = i * 3;\n        position.setValue(bufferData[offset], bufferData[offset + 1], bufferData[offset + 2]);\n        Vector3.min(min, position, min);\n        Vector3.max(max, position, max);\n      }\n    }\n  }\n  primitive.setVertexElements(vertexElements);\n\n  // load indices\n  const indexAccessor = gltf.accessors[gltfPrimitive.indices];\n  const indexData = getIndexBufferData();\n\n  const indexCount = indexAccessor.count;\n  const indexFormat = getIndexFormat(indexAccessor.componentType);\n  const indexByteSize = indexFormat == IndexFormat.UInt32 ? 4 : indexFormat == IndexFormat.UInt16 ? 2 : 1;\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indexCount * indexByteSize, BufferUsage.Static);\n\n  indexBuffer.setData(indexData);\n  primitive.setIndexBufferBinding(new IndexBufferBinding(indexBuffer, indexFormat));\n  primitiveGroup.start = 0;\n  primitiveGroup.count = indexCount;\n  return Promise.resolve(primitive);\n}\n\nfunction parserPrimitiveTarget(primitive, gltfPrimitive, gltf, buffers) {}\n\n/**\n * Parse Mesh\n * @param gltfMesh\n * @param resources\n * @private\n */\nexport function parseMesh(gltfMesh, resources) {\n  const { gltf, buffers, engine } = resources;\n\n  const mesh = new Mesh(gltfMesh.name);\n  // mesh.type = resources.assetType;\n  // parse all primitives then link to mesh\n  // TODO: use hash cached primitives\n  const primitivePromises = [];\n  const groups = [];\n  for (let i = 0; i < gltfMesh.primitives.length; i++) {\n    primitivePromises.push(\n      new Promise((resolve, reject) => {\n        const gltfPrimitive = gltfMesh.primitives[i];\n        // FIXME: use index as primitive's name\n        const primitive = new Primitive(engine, gltfPrimitive.name || gltfMesh.name || i);\n        const subPrimitive = new SubPrimitive();\n        groups.push(subPrimitive);\n        // primitive.type = resources.assetType;\n        subPrimitive.topology = gltfPrimitive.mode == null ? PrimitiveTopology.Triangles : gltfPrimitive.mode;\n        if (gltfPrimitive.hasOwnProperty(\"targets\")) {\n          primitive.targets = [];\n          (mesh as any).weights = gltfMesh.weights || new Array(gltfPrimitive.targets.length).fill(0);\n        }\n        let vertexPromise;\n        if (gltfPrimitive.extensions && gltfPrimitive.extensions[HandledExtensions.KHR_draco_mesh_compression]) {\n          const extensionParser = extensionParsers.KHR_draco_mesh_compression;\n          const extension = gltfPrimitive.extensions[HandledExtensions.KHR_draco_mesh_compression];\n          vertexPromise = extensionParser.parse(extension, gltfPrimitive, gltf, buffers).then((decodedGeometry) => {\n            return parsePrimitiveVertex(\n              mesh,\n              primitive,\n              subPrimitive,\n              gltfPrimitive,\n              gltf,\n              (attributeSemantic) => {\n                for (let i = 0; i < decodedGeometry.attributes.length; i++) {\n                  if (decodedGeometry.attributes[i].name === attributeSemantic) {\n                    return decodedGeometry.attributes[i].array;\n                  }\n                }\n                return null;\n              },\n              () => {\n                return decodedGeometry.index.array;\n              },\n              resources.engine\n            );\n          });\n        } else {\n          vertexPromise = parsePrimitiveVertex(\n            mesh,\n            primitive,\n            subPrimitive,\n            gltfPrimitive,\n            gltf,\n            (attributeSemantic) => {\n              const accessorIdx = gltfPrimitive.attributes[attributeSemantic];\n              const accessor = gltf.accessors[accessorIdx];\n              return getAccessorData(gltf, accessor, buffers);\n            },\n            () => {\n              const indexAccessor = gltf.accessors[gltfPrimitive.indices];\n              return getAccessorData(gltf, indexAccessor, buffers);\n            },\n            resources.engine\n          );\n        }\n        vertexPromise\n          .then((processedPrimitive) => {\n            parserPrimitiveTarget(processedPrimitive, gltfPrimitive, gltf, buffers);\n            resolve(processedPrimitive);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      })\n    );\n  }\n  return Promise.all(primitivePromises).then((primitives: Primitive[]) => {\n    for (let i = 0; i < primitives.length; i++) {\n      mesh.primitives.push(primitives[i]);\n      mesh.groups.push(groups[i]);\n    }\n    return mesh;\n  });\n}\n\n/**\n * Parse Animation.\n * @param gltfAnimation\n * @param resources\n * @returns {*}\n * @private\n */\nexport function parseAnimation(gltfAnimation, resources) {\n  const { gltf, buffers } = resources;\n  const gltfSamplers = gltfAnimation.samplers || [];\n  const gltfChannels = gltfAnimation.channels || [];\n\n  const animationIdx = gltf.animations.indexOf(gltfAnimation);\n  const animationClip = new AnimationClip(gltfAnimation.name || `Animation${animationIdx}`);\n\n  let duration = -1;\n  let durationIndex = -1;\n  // parse samplers\n  for (let i = 0; i < gltfSamplers.length; i++) {\n    const gltfSampler = gltfSamplers[i];\n    // input\n    const inputAccessor = gltf.accessors[gltfSampler.input];\n    const outputAccessor = gltf.accessors[gltfSampler.output];\n    const input = getAccessorData(gltf, inputAccessor, buffers);\n    const output = getAccessorData(gltf, outputAccessor, buffers);\n    let outputAccessorSize = getAccessorTypeSize(outputAccessor.type);\n    if (outputAccessorSize * input.length !== output.length) outputAccessorSize = output.length / input.length;\n\n    // TODO: support\n    // LINEAR, STEP, CUBICSPLINE\n    let samplerInterpolation = InterpolationType.LINEAR;\n    switch (gltfSampler.interpolation) {\n      case \"CUBICSPLINE\":\n        samplerInterpolation = InterpolationType.CUBICSPLINE;\n        break;\n      case \"STEP\":\n        samplerInterpolation = InterpolationType.STEP;\n        break;\n    }\n    const maxTime = input[input.length - 1];\n    if (maxTime > duration) {\n      duration = maxTime;\n      durationIndex = i;\n    }\n    animationClip.addSampler(input, output, outputAccessorSize, samplerInterpolation);\n  }\n\n  animationClip.durationIndex = durationIndex;\n  animationClip.duration = duration;\n\n  for (let i = 0; i < gltfChannels.length; i++) {\n    const gltfChannel = gltfChannels[i];\n    const target = gltfChannel.target;\n    const samplerIndex = gltfChannel.sampler;\n    const targetNode = getItemByIdx(\"nodes\", target.node, resources);\n    const targetPath = TARGET_PATH_MAP[target.path];\n\n    animationClip.addChannel(samplerIndex, targetNode.name, targetPath);\n  }\n\n  return Promise.resolve(animationClip);\n}\n\n/**\n * Parse the node of glTF.\n * @param gltfNode\n * @param resources\n * @private\n */\nexport function parseNode(gltfNode, resources: GLTFParsed) {\n  // TODO: undefined name?\n  const entity = new Entity(resources.engine, gltfNode.name || `GLTF_NODE_${nodeCount++}`);\n\n  if (gltfNode.hasOwnProperty(\"matrix\")) {\n    const m = gltfNode.matrix;\n    const mat = new Matrix();\n    mat.setValueByArray(m);\n    const pos = new Vector3();\n    const scale = new Vector3(1, 1, 1);\n    const rot = new Quaternion();\n    mat.decompose(pos, rot, scale);\n\n    entity.transform.position = pos;\n    entity.transform.rotationQuaternion = rot;\n    entity.transform.scale = scale;\n  } else {\n    for (const key in TARGET_PATH_MAP) {\n      if (gltfNode.hasOwnProperty(key)) {\n        const mapKey = TARGET_PATH_MAP[key];\n        if (mapKey === \"weights\") {\n          entity[mapKey] = gltfNode[key];\n        } else {\n          const arr = gltfNode[key];\n          const len = arr.length;\n          const obj = entity[mapKey];\n          if (len === 2) {\n            obj.setValue(arr[0], arr[1]);\n          } else if (len === 3) {\n            obj.setValue(arr[0], arr[1], arr[2]);\n          } else if (len === 4) {\n            obj.setValue(arr[0], arr[1], arr[2], arr[3]);\n          }\n          entity[mapKey] = obj;\n        }\n      }\n    }\n  }\n\n  if (gltfNode.camera !== undefined) {\n    const cameraOptions = resources.gltf.cameras[gltfNode.camera];\n    const camera = entity.addComponent(Camera);\n    if (cameraOptions.type === \"orthographic\") {\n      camera.isOrthographic = true;\n      let { ymag, xmag, zfar, znear } = cameraOptions.orthographic;\n      if (znear !== undefined) {\n        camera.nearClipPlane = znear;\n      }\n      if (zfar !== undefined) {\n        camera.farClipPlane = zfar;\n      }\n      if (ymag && xmag) {\n        camera.orthographicSize = Math.max(ymag, xmag) / 2;\n      }\n      if (ymag !== undefined && xmag) {\n        camera.orthographicSize = xmag / 2;\n      }\n      if (xmag !== undefined && ymag) {\n        camera.orthographicSize = ymag / 2;\n      }\n    } else {\n      const { aspectRatio, yfov, zfar, znear } = cameraOptions.perspective;\n      if (aspectRatio !== undefined) {\n        camera.aspectRatio = aspectRatio;\n      }\n      if (yfov !== undefined) {\n        camera.fieldOfView = yfov;\n      }\n      if (zfar !== undefined) {\n        camera.farClipPlane = zfar;\n      }\n      if (znear !== undefined) {\n        camera.nearClipPlane = znear;\n      }\n    }\n  }\n\n  if (gltfNode.extensions) {\n    if (KHR_lights && gltfNode.extensions.KHR_lights) {\n      const lightIdx = gltfNode.extensions.KHR_lights.light;\n      if (lightIdx !== undefined) {\n        const light = getItemByIdx(\"lights\", lightIdx, resources);\n        if (light) {\n          const lightCon = entity.addComponent(light.ability);\n          Object.assign(lightCon, light.props);\n        }\n      }\n    }\n  }\n\n  return Promise.resolve(entity);\n}\n\n/**\n * parse the scene of glTF.\n * @param gltfScene\n * @param resources\n * @returns {{nodes: Array}}\n * @private\n */\nexport function parseScene(gltfScene, resources) {\n  const sceneNodes = [];\n  for (let i = 0; i < gltfScene.nodes.length; i++) {\n    const node = getItemByIdx(\"nodes\", gltfScene.nodes[i], resources);\n    sceneNodes.push(node);\n  }\n\n  if (gltfScene.extensions) {\n    if (KHR_lights && gltfScene.extensions.KHR_lights) {\n      const lightIdx = gltfScene.extensions.KHR_lights.light;\n      if (lightIdx !== undefined) {\n        const light = getItemByIdx(\"lights\", lightIdx, resources);\n        if (light) sceneNodes[0].addComponent(light.ability, light.props);\n      }\n    }\n  }\n\n  return Promise.resolve({\n    nodes: sceneNodes\n  });\n}\n\n/**\n * Get content through index.\n * @param name\n * @param idx\n * @param resources\n * @returns {*}\n * @private\n */\nexport function getItemByIdx(name, idx, resources, inverse: boolean = true) {\n  const { asset } = resources;\n\n  const itemIdx = inverse ? asset[name].length - idx - 1 : idx;\n  return asset[name][itemIdx];\n}\n\n/**\n * Construct scene graph and create Ability according to node configuration.\n * @param resources\n * @private\n */\nexport function buildSceneGraph(resources: GLTFParsed): GLTFResource {\n  const { asset, gltf } = resources;\n\n  const gltfNodes = gltf.nodes || [];\n  const gltfMeshes = gltf.meshes;\n\n  asset.defaultScene = getItemByIdx(\"scenes\", gltf.scene ?? 0, resources);\n\n  for (let i = gltfNodes.length - 1; i >= 0; i--) {\n    const gltfNode = gltfNodes[i];\n    const node = getItemByIdx(\"nodes\", i, resources);\n\n    if (gltfNode.hasOwnProperty(\"children\")) {\n      const children = gltfNode.children || [];\n      for (let j = children.length - 1; j >= 0; j--) {\n        const childNode = getItemByIdx(\"nodes\", children[j], resources);\n\n        node.addChild(childNode);\n      }\n    }\n\n    // link mesh\n    if (gltfNode.hasOwnProperty(\"mesh\")) {\n      const meshIndex = gltfNode.mesh;\n      node.meshIndex = meshIndex;\n      const gltfMeshPrimitives = gltfMeshes[meshIndex].primitives;\n      const mesh = getItemByIdx(\"meshes\", meshIndex, resources);\n\n      let renderer: MeshRenderer;\n      if (gltfNode.hasOwnProperty(\"skin\") || mesh.hasOwnProperty(\"weights\")) {\n        const skin = getItemByIdx(\"skins\", gltfNode.skin, resources);\n        const weights = mesh.weights;\n        const skinRenderer: SkinnedMeshRenderer = node.addComponent(SkinnedMeshRenderer);\n        skinRenderer.mesh = mesh;\n        skinRenderer.skin = skin;\n        skinRenderer.setWeights(weights);\n        renderer = skinRenderer;\n      } else {\n        renderer = node.addComponent(MeshRenderer);\n        renderer.mesh = mesh;\n      }\n      for (let j = 0, m = gltfMeshPrimitives.length; j < m; j++) {\n        const materialIndex = gltfMeshPrimitives[j].material;\n        mesh.primitives[j].materialIndex = materialIndex;\n        const material =\n          materialIndex !== undefined\n            ? getItemByIdx(\"materials\", materialIndex, resources)\n            : getDefaultMaterial(node.engine);\n        renderer.setSharedMaterial(j, material);\n      }\n    }\n  }\n\n  //@ts-ignore\n  const nodes = asset.defaultScene.nodes;\n  if (nodes.length === 1) {\n    asset.defaultSceneRoot = nodes[0];\n  } else {\n    const rootNode = new Entity(resources.engine);\n    for (let i = 0; i < nodes.length; i++) {\n      rootNode.addChild(nodes[i]);\n    }\n    asset.defaultSceneRoot = rootNode;\n  }\n\n  const animator = asset.defaultSceneRoot.addComponent(Animation);\n  const animations = asset.animations;\n  if (animations) {\n    animations.forEach((clip: AnimationClip) => {\n      animator.addAnimationClip(clip, clip.name);\n    });\n  }\n  return resources.asset as GLTFResource;\n}\n","import { decodeText } from \"./Util\";\n\n/**\n * Parse the glb format.\n * @param glb - Binary data\n * @returns GlTF information and bin information in Object glb.\n * @private\n */\nexport function parseGLB(glb) {\n  const UINT32_LENGTH = 4;\n  const GLB_HEADER_MAGIC = 0x46546c67; // 'glTF'\n  const GLB_HEADER_LENGTH = 12;\n  const GLB_CHUNK_TYPES = { JSON: 0x4e4f534a, BIN: 0x004e4942 };\n\n  const dataView = new DataView(glb);\n\n  // read header\n  const header = {\n    magic: dataView.getUint32(0, true),\n    version: dataView.getUint32(UINT32_LENGTH, true),\n    length: dataView.getUint32(2 * UINT32_LENGTH, true)\n  };\n\n  if (header.magic !== GLB_HEADER_MAGIC) {\n    console.error(\"Invalid glb magic number. Expected 0x46546C67, found 0x\" + header.magic.toString(16));\n    return null;\n  }\n\n  // read main data\n  let chunkLength = dataView.getUint32(GLB_HEADER_LENGTH, true);\n  let chunkType = dataView.getUint32(GLB_HEADER_LENGTH + UINT32_LENGTH, true);\n\n  // read glTF json\n  if (chunkType !== GLB_CHUNK_TYPES.JSON) {\n    console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n    return null;\n  }\n\n  const glTFData = new Uint8Array(glb, GLB_HEADER_LENGTH + 2 * UINT32_LENGTH, chunkLength);\n  const gltf = JSON.parse(decodeText(glTFData));\n\n  // read all buffers\n  const buffers = [];\n  let byteOffset = GLB_HEADER_LENGTH + 2 * UINT32_LENGTH + chunkLength;\n\n  while (byteOffset < header.length) {\n    chunkLength = dataView.getUint32(byteOffset, true);\n    chunkType = dataView.getUint32(byteOffset + UINT32_LENGTH, true);\n\n    if (chunkType !== GLB_CHUNK_TYPES.BIN) {\n      console.error(\"Invalid glb chunk type. Expected 0x004E4942, found 0x\" + chunkType.toString(16));\n      return null;\n    }\n\n    const currentOffset = byteOffset + 2 * UINT32_LENGTH;\n    const buffer = glb.slice(currentOffset, currentOffset + chunkLength);\n    buffers.push(buffer);\n\n    byteOffset += chunkLength + 2 * UINT32_LENGTH;\n  }\n\n  // start parse glTF\n  return {\n    gltf,\n    buffers\n  };\n}\n","import {\n  resourceLoader,\n  Loader,\n  AssetPromise,\n  AssetType,\n  LoadItem,\n  ResourceManager,\n  Texture2D\n} from \"@oasis-engine/core\";\nimport { GlTf, LoadedGLTFResource } from \"./GLTF\";\nimport { parseGLTF, GLTFResource } from \"./gltf/glTF\";\nimport { parseGLB } from \"./gltf/glb\";\nimport { loadImageBuffer, getBufferData, parseRelativeUrl } from \"./gltf/Util\";\n\n@resourceLoader(AssetType.Perfab, [\"gltf\", \"glb\"])\nexport class GLTFLoader extends Loader<GLTFResource> {\n  private baseUrl: string;\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<GLTFResource> {\n    return new AssetPromise((resolve, reject) => {\n      const requestGLTFResource = this.isGLB(item.url) ? this.requestGLB : this.requestGLTF;\n      requestGLTFResource(item, resourceManager)\n        .then((res) => {\n          parseGLTF(res, resourceManager.engine).then((gltf) => {\n            resolve(gltf);\n          });\n        })\n        .catch((e) => {\n          console.error(e);\n          reject(\"Error loading glTF JSON from \" + item.url);\n        });\n    });\n  }\n\n  private requestGLTF = (item: LoadItem, resourceManager: ResourceManager): Promise<LoadedGLTFResource> => {\n    return this.request<GlTf>(item.url, {\n      ...item,\n      type: \"json\"\n    }).then((res) => this._loadGLTFResources(item, res, resourceManager));\n  };\n\n  private requestGLB = (item: LoadItem, resourceManager: ResourceManager): Promise<LoadedGLTFResource> => {\n    return this.request<GlTf>(item.url, {\n      ...item,\n      type: \"arraybuffer\"\n    })\n      .then(parseGLB)\n      .then((res) => {\n        return { ...res, baseUrl: item.url, resourceManager };\n      })\n      .then(this._loadImages);\n  };\n\n  private isGLB(url: string): boolean {\n    return url.substring(url.lastIndexOf(\".\") + 1) === \"glb\";\n  }\n\n  /**\n   * Load resources in gltf.\n   * @param gltf\n   * @param resourceManager\n   */\n  private _loadGLTFResources(\n    item: LoadItem,\n    gltf: GlTf,\n    resourceManager: ResourceManager\n  ): Promise<LoadedGLTFResource> {\n    // Buffer must be loaded first, then image.\n    return this._loadBuffers(item.url, gltf, resourceManager).then(this._loadImages);\n  }\n\n  private _loadBuffers(baseUrl: string, gltf: GlTf, resourceManager: ResourceManager): Promise<LoadedGLTFResource> {\n    if (gltf.buffers) {\n      return Promise.all(\n        gltf.buffers.map((item) => {\n          if (item instanceof ArrayBuffer) {\n            return Promise.resolve(item);\n          }\n          return resourceManager.load<ArrayBuffer>({\n            url: parseRelativeUrl(baseUrl, item.uri),\n            type: AssetType.Buffer\n          });\n        })\n      ).then((buffers) => {\n        return { buffers, gltf, baseUrl, resourceManager };\n      });\n    }\n    return Promise.resolve({ baseUrl, gltf, resourceManager });\n  }\n\n  private _loadImages = ({\n    gltf,\n    buffers,\n    baseUrl,\n    resourceManager\n  }: LoadedGLTFResource & { baseUrl: string; resourceManager: ResourceManager }): Promise<any> => {\n    if (gltf.images) {\n      return Promise.all(\n        gltf.images.map(({ uri, bufferView: bufferViewIndex, mimeType }) => {\n          if (uri) {\n            // Use base64 or url.\n            return resourceManager.load({ url: parseRelativeUrl(baseUrl, uri), type: AssetType.Texture2D });\n          } else {\n            // Use bufferView.\n            const bufferView = gltf.bufferViews[bufferViewIndex];\n            const bufferData = getBufferData(bufferView, buffers);\n            return loadImageBuffer(bufferData, mimeType).then((image) => {\n              const tex = new Texture2D(resourceManager.engine, image.width, image.height);\n              tex.setImageSource(image);\n              tex.generateMipmaps();\n              return tex;\n            });\n          }\n        })\n      ).then((textures) => {\n        return { gltf, buffers, textures };\n      });\n    }\n    return Promise.resolve({ gltf, buffers });\n  };\n}\n","import { resourceLoader, Loader, AssetPromise, AssetType, LoadItem } from \"@oasis-engine/core\";\n\n@resourceLoader(AssetType.JSON, [\"json\"], false)\nclass JSONLoader extends Loader<string> {\n  load(item: LoadItem): AssetPromise<string> {\n    return this.request(item.url, {\n      ...item,\n      type: \"json\"\n    });\n  }\n}\n","/**\n *\n * ported from https://github.com/BabylonJS/Babylon.js/blob/master/src/Tools/babylon.khronosTextureContainer.ts\n */\n\nimport { Mipmap, KTXContainer } from \"./type\";\nimport { GLCompressedTextureInternalFormat, TextureFormat } from \"@oasis-engine/core\";\n\nconst HEADER_LEN = 12 + 13 * 4; // identifier + header elements (not including key value meta-data pairs)\n\n// load types\nconst COMPRESSED_2D = 0; // uses a gl.compressedTexImage2D()\nconst COMPRESSED_3D = 1; // uses a gl.compressedTexImage3D()\nconst TEX_2D = 2; // uses a gl.texImage2D()\nconst TEX_3D = 3; // uses a gl.texImage3D()\n\nfunction getMipmaps(ktxContainer: KTXContainer, loadMipmaps: boolean): Mipmap[] {\n  const mipmaps = [];\n\n  // initialize width & height for level 1\n  var dataOffset = HEADER_LEN + ktxContainer.bytesOfKeyValueData;\n  var width = ktxContainer.pixelWidth;\n  var height = ktxContainer.pixelHeight;\n  var mipmapCount = loadMipmaps ? ktxContainer.numberOfMipmapLevels : 1;\n\n  for (var level = 0; level < mipmapCount; level++) {\n    var imageSize = new Int32Array(ktxContainer.buffer, dataOffset, 1)[0]; // size per face, since not supporting array cubemaps\n    dataOffset += 4; // size of the image + 4 for the imageSize field\n\n    for (var face = 0; face < ktxContainer.numberOfFaces; face++) {\n      var byteArray = new Uint8Array(ktxContainer.buffer, dataOffset, imageSize);\n\n      mipmaps.push({ data: byteArray, width: width, height: height });\n\n      dataOffset += imageSize;\n      dataOffset += 3 - ((imageSize + 3) % 4); // add padding for odd sized image\n    }\n    width = Math.max(1.0, width * 0.5);\n    height = Math.max(1.0, height * 0.5);\n  }\n\n  return mipmaps;\n}\n\n/**\n * Checks if the given data starts with a KTX file identifier.\n * @param data the data to check\n * @returns true if the data is a KTX file or false otherwise\n */\nfunction isValid(data: ArrayBuffer): boolean {\n  if (data.byteLength >= 12) {\n    // '«', 'K', 'T', 'X', ' ', '1', '1', '»', '\\r', '\\n', '\\x1A', '\\n'\n    const identifier = new Uint8Array(data, 0, 12);\n    if (\n      identifier[0] === 0xab &&\n      identifier[1] === 0x4b &&\n      identifier[2] === 0x54 &&\n      identifier[3] === 0x58 &&\n      identifier[4] === 0x20 &&\n      identifier[5] === 0x31 &&\n      identifier[6] === 0x31 &&\n      identifier[7] === 0xbb &&\n      identifier[8] === 0x0d &&\n      identifier[9] === 0x0a &&\n      identifier[10] === 0x1a &&\n      identifier[11] === 0x0a\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getEngineFormat(internalFormat: GLint): TextureFormat {\n  switch (internalFormat) {\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT3_EXT:\n    // case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n    // break;\n    case GLCompressedTextureInternalFormat.RGB_S3TC_DXT1_EXT:\n      return TextureFormat.DXT1;\n    case GLCompressedTextureInternalFormat.RGBA_S3TC_DXT5_EXT:\n      return TextureFormat.DXT5;\n    case GLCompressedTextureInternalFormat.RGB_ETC1_WEBGL:\n      return TextureFormat.ETC1_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_ETC2:\n      return TextureFormat.ETC2_RGB;\n    case GLCompressedTextureInternalFormat.RGB8_PUNCHTHROUGH_ALPHA1_ETC2:\n      return TextureFormat.ETC2_RGBA5;\n    case GLCompressedTextureInternalFormat.RGBA8_ETC2_EAC:\n      return TextureFormat.ETC2_RGBA8;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB2;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_2BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA2;\n    case GLCompressedTextureInternalFormat.RGB_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGB4;\n    case GLCompressedTextureInternalFormat.RGBA_PVRTC_4BPPV1_IMG:\n      return TextureFormat.PVRTC_RGBA4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_4X4_KHR:\n      return TextureFormat.ASTC_4x4;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_5X5_KHR:\n      return TextureFormat.ASTC_5x5;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_6X6_KHR:\n      return TextureFormat.ASTC_6x6;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_8X8_KHR:\n      return TextureFormat.ASTC_8x8;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_10X10_KHR:\n      return TextureFormat.ASTC_10x10;\n    case GLCompressedTextureInternalFormat.RGBA_ASTC_12X12_KHR:\n      return TextureFormat.ASTC_12x12;\n    default:\n      const formatName: any = GLCompressedTextureInternalFormat[internalFormat];\n      throw new Error(`this format is not supported in Oasis Engine: ${formatName}`);\n  }\n}\n/**\n * for description see https://www.khronos.org/opengles/sdk/tools/KTX/\n * for file layout see https://www.khronos.org/opengles/sdk/tools/KTX/file_format_spec/\n */\nexport const khronosTextureContainerParser = {\n  /**\n   *\n   * @param buffer contents of the KTX container file\n   * @param facesExpected should be either 1 or 6, based whether a cube texture or or\n   * @param threeDExpected provision for indicating that data should be a 3D texture, not implemented\n   * @param textureArrayExpected provision for indicating that data should be a texture array, not implemented\n   * @param mapEngineFormat get Oasis Engine native TextureFormat?\n   */\n  parse(\n    buffer: ArrayBuffer,\n    facesExpected: number,\n    withMipmaps: boolean,\n    mapEngineFormat: boolean = false\n  ): KTXContainer {\n    if (!isValid(buffer)) {\n      throw new Error(\"khronosTextureContainerParser: invalid KTX file, texture missing KTX identifier\");\n    }\n\n    // load the reset of the header in native 32 bit uint\n    const dataSize = Uint32Array.BYTES_PER_ELEMENT;\n    const headerDataView = new DataView(buffer, 12, 13 * dataSize);\n    const endianness = headerDataView.getUint32(0, true);\n    const littleEndian = endianness === 0x04030201;\n\n    const parsedResult: KTXContainer = {\n      buffer: buffer,\n      glType: headerDataView.getUint32(1 * dataSize, littleEndian), // must be 0 for compressed textures\n      glTypeSize: headerDataView.getUint32(2 * dataSize, littleEndian), // must be 1 for compressed textures\n      glFormat: headerDataView.getUint32(3 * dataSize, littleEndian), // must be 0 for compressed textures\n      glInternalFormat: headerDataView.getUint32(4 * dataSize, littleEndian), // the value of arg passed to gl.compressedTexImage2D(,,x,,,,)\n      glBaseInternalFormat: headerDataView.getUint32(5 * dataSize, littleEndian), // specify GL_RGB, GL_RGBA, GL_ALPHA, etc (un-compressed only)\n      pixelWidth: headerDataView.getUint32(6 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,x,,,)\n      pixelHeight: headerDataView.getUint32(7 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage2D(,,,,x,,)\n      pixelDepth: headerDataView.getUint32(8 * dataSize, littleEndian), // level 0 value of arg passed to gl.compressedTexImage3D(,,,,,x,,)\n      numberOfArrayElements: headerDataView.getUint32(9 * dataSize, littleEndian), // used for texture arrays\n      numberOfFaces: headerDataView.getUint32(10 * dataSize, littleEndian), // used for cubemap textures, should either be 1 or 6\n      numberOfMipmapLevels: headerDataView.getUint32(11 * dataSize, littleEndian), // number of levels; disregard possibility of 0 for compressed textures\n      bytesOfKeyValueData: headerDataView.getUint32(12 * dataSize, littleEndian), // the amount of space after the header for meta-data\n      // would need to make this more elaborate & adjust checks above to support more than one load type\n      loadType: COMPRESSED_2D\n    };\n\n    // Make sure we have a compressed type.  Not only reduces work, but probably better to let dev know they are not compressing.\n    if (parsedResult.glType !== 0) {\n      throw new Error(\"only compressed formats currently supported\");\n    } else {\n      // value of zero is an indication to generate mipmaps @ runtime.  Not usually allowed for compressed, so disregard.\n      parsedResult.numberOfMipmapLevels = Math.max(1, parsedResult.numberOfMipmapLevels);\n    }\n\n    if (parsedResult.pixelHeight === 0 || parsedResult.pixelDepth !== 0) {\n      throw new Error(\"only 2D textures currently supported\");\n    }\n\n    if (parsedResult.numberOfArrayElements !== 0) {\n      throw new Error(\"texture arrays not currently supported\");\n    }\n\n    if (parsedResult.numberOfFaces !== facesExpected) {\n      throw new Error(\"number of faces expected\" + facesExpected + \", but found \" + parsedResult.numberOfFaces);\n    }\n\n    if (withMipmaps) {\n      parsedResult.mipmaps = getMipmaps(parsedResult, true);\n    }\n\n    if (mapEngineFormat) {\n      parsedResult.engineFormat = getEngineFormat(parsedResult.glInternalFormat);\n    }\n    return parsedResult;\n  }\n};\n","import { CompressedTextureData, CompressedCubeData } from \"./type\";\nimport { khronosTextureContainerParser } from \"./KhronosTextureContainer\";\nimport { TextureFormat } from \"@oasis-engine/core\";\n\nexport function parseSingleKTX(data: ArrayBuffer): CompressedTextureData {\n  const ktx = khronosTextureContainerParser.parse(data, 1, true, true);\n  return {\n    mipmaps: ktx.mipmaps,\n    engineFormat: ktx.engineFormat,\n    internalFormat: ktx.glInternalFormat,\n    width: ktx.pixelWidth,\n    height: ktx.pixelHeight\n  };\n}\n\nexport function parseCubeKTX(dataArray: ArrayBuffer[]): CompressedCubeData {\n  const mipmapsFaces = [];\n  let internalFormat: number;\n  let engineFormat: TextureFormat;\n  let width: number;\n  let height: number;\n  for (let i = 0; i < dataArray.length; i++) {\n    const ktx = khronosTextureContainerParser.parse(dataArray[i], 1, true, true);\n    mipmapsFaces.push(ktx.mipmaps);\n    if (i === 0) {\n      width = ktx.pixelWidth;\n      height = ktx.pixelHeight;\n      internalFormat = ktx.glInternalFormat;\n      engineFormat = ktx.engineFormat;\n    }\n  }\n  return {\n    mipmapsFaces,\n    engineFormat,\n    internalFormat,\n    width,\n    height\n  };\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  TextureCubeFace,\n  TextureCubeMap\n} from \"@oasis-engine/core\";\nimport { parseCubeKTX } from \"./compressed-texture\";\n\n@resourceLoader(AssetType.KTXCube, [])\nclass KTXCubeLoader extends Loader<TextureCubeMap> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<TextureCubeMap> {\n    return new AssetPromise((resolve, reject) => {\n      Promise.all(\n        item.urls.map((url) =>\n          this.request<ArrayBuffer>(url, {\n            ...item,\n            type: \"arraybuffer\"\n          })\n        )\n      )\n        .then((data) => {\n          const parsedData = parseCubeKTX(data);\n          const { width, mipmapsFaces, engineFormat } = parsedData;\n          const mipmap = mipmapsFaces[0].length > 1;\n          const texture = new TextureCubeMap(resourceManager.engine, width, engineFormat, mipmap);\n\n          for (let face = 0; face < 6; face++) {\n            const length = mipmapsFaces[face].length;\n\n            for (let miplevel = 0; miplevel < length; miplevel++) {\n              const { data, width, height } = mipmapsFaces[face][miplevel];\n\n              texture.setPixelBuffer(TextureCubeFace.PositiveX + face, data, miplevel, 0, 0, width, height);\n            }\n          }\n\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  Texture2D\n} from \"@oasis-engine/core\";\nimport { parseSingleKTX } from \"./compressed-texture\";\n\n@resourceLoader(AssetType.KTX, [\"ktx\"])\nexport class KTXLoader extends Loader<Texture2D> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<Texture2D> {\n    return new AssetPromise((resolve, reject) => {\n      this.request<ArrayBuffer>(item.url, {\n        ...item,\n        type: \"arraybuffer\"\n      })\n        .then((bin) => {\n          const parsedData = parseSingleKTX(bin);\n          const { width, height, mipmaps, engineFormat } = parsedData;\n          const mipmap = mipmaps.length > 1;\n          const texture = new Texture2D(resourceManager.engine, width, height, engineFormat, mipmap);\n\n          for (let miplevel = 0; miplevel < mipmaps.length; miplevel++) {\n            const { width, height, data } = mipmaps[miplevel];\n            texture.setPixelBuffer(data, miplevel, 0, 0, width, height);\n          }\n\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  Texture2D\n} from \"@oasis-engine/core\";\n\n@resourceLoader(AssetType.Texture2D, [\"png\", \"jpg\", \"webp\", \"jpeg\"])\nclass Texture2DLoader extends Loader<Texture2D> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<Texture2D> {\n    return new AssetPromise((resolve, reject) => {\n      this.request<HTMLImageElement>(item.url, {\n        ...item,\n        type: \"image\"\n      })\n        .then((image) => {\n          const texture = new Texture2D(resourceManager.engine, image.width, image.height);\n          if (!texture._glTexture) return;\n          texture.setImageSource(image);\n          texture.generateMipmaps();\n\n          if (item.url.indexOf(\"data:\") !== 0) {\n            const splitPath = item.url.split(\"/\");\n            texture.name = splitPath[splitPath.length - 1];\n          }\n          resolve(texture);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import {\n  AssetPromise,\n  AssetType,\n  Loader,\n  LoadItem,\n  resourceLoader,\n  ResourceManager,\n  TextureCubeFace,\n  TextureCubeMap\n} from \"@oasis-engine/core\";\n\n@resourceLoader(AssetType.TextureCube, [\"\"])\nclass TextureCubeLoader extends Loader<TextureCubeMap> {\n  load(item: LoadItem, resourceManager: ResourceManager): AssetPromise<TextureCubeMap> {\n    return new AssetPromise((resolve, reject) => {\n      Promise.all(\n        item.urls.map((url) =>\n          this.request<HTMLImageElement>(url, {\n            ...item,\n            type: \"image\"\n          })\n        )\n      )\n        .then((images) => {\n          const { width, height } = images[0];\n\n          if (width !== height) {\n            console.error(\"The cube texture must have the same width and height\");\n            return;\n          }\n\n          const tex = new TextureCubeMap(resourceManager.engine, width);\n\n          if (!tex._glTexture) return;\n\n          for (let faceIndex = 0; faceIndex < 6; faceIndex++) {\n            tex.setImageSource(TextureCubeFace.PositiveX + faceIndex, images[faceIndex], 0);\n          }\n\n          tex.generateMipmaps();\n          resolve(tex);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n}\n","import { Component, Entity, WrapMode, Animation } from \"@oasis-engine/core\";\nimport { GLTFResource } from \"./gltf/glTF\";\n\n/**\n * @deprecated\n * Temporarily only for editor use.\n * Remove when editor finish change from gltf to prefab.\n */\nexport class GLTFModel extends Component {\n  get asset() {\n    return this._asset;\n  }\n\n  set asset(value: GLTFResource) {\n    if (value && value.defaultSceneRoot === this.GLTFNode) {\n      return;\n    }\n    if (!this._hasBuiltNode) {\n      (this.GLTFNode as any).clearChildren();\n      if (value !== null) {\n        if (this.GLTFNode) {\n          this.GLTFNode.destroy();\n        }\n        this.GLTFNode = value.defaultSceneRoot.clone();\n        this._animator = this.GLTFNode.getComponent(Animation);\n        this.entity.addChild(this.GLTFNode);\n      }\n    }\n    this._asset = value;\n  }\n\n  get animator() {\n    return this._animator;\n  }\n\n  get autoPlay() {\n    return this._autoPlay;\n  }\n\n  set autoPlay(value: string) {\n    if (this._animator) {\n      // Play bone animation.\n      if (value) {\n        this._animator.playAnimationClip(value, {\n          wrapMode: this._loop\n        });\n      } else {\n        this._animator.stop(false);\n      }\n    }\n    this._autoPlay = value;\n  }\n\n  get loop() {\n    return this._loop;\n  }\n\n  set loop(value: WrapMode) {\n    if (this._animator && this.autoPlay) {\n      // Play bone animation\n      this._animator.playAnimationClip(this._autoPlay, {\n        wrapMode: value\n      });\n    }\n    this._loop = value;\n  }\n\n  public _animator: Animation;\n  public animationsNames: String[];\n\n  private _asset: GLTFResource;\n  private GLTFNode: Entity;\n  private _loop: number;\n  private _autoPlay: string;\n  private _hasBuiltNode: boolean = false;\n\n  constructor(entity) {\n    super(entity);\n  }\n\n  /**\n   * Init.\n   * @param props - Init props\n   */\n  init(props): void {\n    const { asset = null, autoPlay, loop, isClone } = props;\n    if (isClone) {\n      const rootName = (props as any).gltfRootName;\n      if (rootName) {\n        this.GLTFNode = this.entity.findByName(rootName);\n      }\n    }\n    if (!this.GLTFNode) {\n      const rootName = `GLTF-${Date.now()}`;\n      (props as any).gltfRootName = rootName;\n      this.GLTFNode = this.entity.createChild(rootName);\n      this._hasBuiltNode = false;\n    } else {\n      this._hasBuiltNode = true;\n    }\n\n    this.asset = asset;\n    this.loop = loop;\n    this.autoPlay = autoPlay;\n  }\n\n  /**\n   * @override\n   */\n  _onEnable(): void {\n    this.GLTFNode.isActive = true;\n  }\n\n  /**\n   * @override\n   */\n  _onDisable(): void {\n    this.GLTFNode.isActive = false;\n  }\n}\n","import { Component, Entity } from \"@oasis-engine/core\";\nimport { Oasis } from \"../Oasis\";\nimport { SchemaResource } from \"../resources\";\nimport { Plugin } from \"./Plugin\";\nexport class PluginManager implements PluginHook {\n  private registeredPlugins: Set<Plugin> = new Set();\n  private plugins: PluginHook[] = [];\n\n  register(plugin: Plugin) {\n    this.registeredPlugins.add(plugin);\n  }\n\n  boot(oasis: Oasis) {\n    for (let plugin of this.registeredPlugins.values()) {\n      if (typeof plugin === \"function\") {\n        plugin = plugin(oasis);\n      }\n      this.plugins.push(plugin);\n    }\n  }\n\n  reset() {\n    this.registeredPlugins.clear();\n    this.plugins = [];\n  }\n\n  nodeAdded(entity: Entity) {\n    this.delegateMethod(\"nodeAdded\", entity);\n  }\n\n  private delegateMethod(name: keyof PluginHook, ...args) {\n    this.plugins.forEach((plugin) => plugin[name] && (plugin[name] as any)(...args));\n  }\n}\n\nexport interface PluginHook {\n  oasis?: Oasis;\n  nodeAdded?(entity: Entity): any;\n  beforeNodeUpdated?(id: string, key: string, value: any): any;\n  nodeUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  abilityAdded?(ability: Component): any;\n  beforeAbilityAdded?(config: any): any;\n  beforeAbilityUpdated?(id: string, key: string, value: any): any;\n  abilityUpdated?(updateConfig?: { id: string; key: string; value: any }): any;\n  schemaParsed?(): any;\n  abilityDeleted?(id: string): any;\n  beforeAbilityDeleted?(id: string): any;\n  beforeNodeDeleted?(config: any): any;\n  beforeResourceRemove?(id: string): any;\n  resourceUpdated?(info: { resource: SchemaResource; id: string; key: string; value: any }): any;\n  beforeResourceUpdate?(id: string, key: string, value: any): any;\n  // todo type\n  beforeResourceAdd?(resource: any): any;\n  resourceAdded?(resource: any): any;\n}\n\nexport function pluginHook(options: Partial<{ before: keyof PluginHook; after: keyof PluginHook }>): MethodDecorator {\n  return function (target: any, propertyName: string, descriptor: TypedPropertyDescriptor<any>) {\n    const method = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n      options.before && this.oasis.pluginManager.delegateMethod(options.before, ...args);\n      return Promise.resolve(method.apply(this, arguments)).then((returnObj) => {\n        options.after && this.oasis.pluginManager.delegateMethod(options.after, returnObj);\n        return returnObj;\n      });\n    };\n  };\n}\n","export function switchElementsIndex(elements: any[], currentIndex: number, targetIndex: number) {\n  if (currentIndex === targetIndex || targetIndex === null || targetIndex === undefined) {\n    return;\n  }\n  [elements[currentIndex], elements[targetIndex]] = [elements[targetIndex], elements[currentIndex]];\n}\n\nexport function isAsset(config: any): boolean {\n  return config && config.type === \"asset\";\n}\n\nexport function getAllGetters(obj: any): Array<string> {\n  const result = [];\n  const prototype = Object.getPrototypeOf(obj);\n  const prototype_property_descriptors = Object.getOwnPropertyDescriptors(prototype);\n  for (const [property, descriptor] of Object.entries(prototype_property_descriptors)) {\n    if (typeof descriptor.get === \"function\") {\n      result.push(property);\n    }\n  }\n  return result;\n}\n\nexport function union(arr1: Array<any>, arr2: Array<any>): Array<any> {\n  return arr1.concat(arr2.filter((v) => !(arr1.indexOf(v) > -1)));\n}\n\n// https://github.com/BabylonJS/Babylon.js/blob/d780145531ac1b1cee85cbfba4d836dcc24ab58e/src/Engines/Extensions/engine.textureSelector.ts#L70\n// Intelligently add supported compressed formats in order to check for.\n// Check for ASTC support first as it is most powerful and to be very cross platform.\n// Next PVRTC & DXT, which are probably superior to ETC1/2.\n// Likely no hardware which supports both PVR & DXT, so order matters little.\n// ETC2 is newer and handles ETC1 (no alpha capability), so check for first.\nexport const compressedTextureLoadOrder = {\n  astc: 1,\n  s3tc: 2,\n  pvrtc: 3,\n  etc: 4,\n  etc1: 5\n};\n","import { Logger, ResourceManager } from \"@oasis-engine/core\";\nimport { Oasis } from \"../Oasis\";\nimport { SchemaResourceManager } from \"../ResourceManager\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { isAsset } from \"../utils\";\n\ninterface IResourceMeta {\n  name?: string;\n  url?: string;\n  size?: number;\n  source?: string;\n}\n\nexport abstract class SchemaResource {\n  protected _meta: IResourceMeta = {};\n  protected _attachedResources: Array<SchemaResource> = [];\n\n  /**\n   * Resource\n   */\n  get resource() {\n    return this._resource;\n  }\n\n  get meta(): IResourceMeta {\n    return this._meta;\n  }\n\n  get attachedResources() {\n    return this._attachedResources;\n  }\n\n  protected setMeta() {}\n\n  constructor(protected resourceManager: SchemaResourceManager, protected _resource?: any) {\n    this.setMeta();\n  }\n\n  abstract load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<SchemaResource>;\n  loadWithAttachedResources(\n    resourceLoader: any,\n    assetConfig: AssetConfig,\n    oasis: Oasis\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve, reject) => {\n      this.load(resourceLoader, assetConfig, oasis)\n        .then(() => {\n          resolve({\n            resources: [this],\n            structure: {\n              index: 0,\n              props: {}\n            }\n          });\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  getProps(): any {\n    return {};\n  }\n\n  bind(): void {}\n  attach(): void {}\n\n  update(key: string, value: any) {\n    if (isAsset(value)) {\n      const resource = this.resourceManager.get(value.id);\n      if (resource) {\n        this._resource[key] = resource.resource;\n      } else {\n        Logger.warn(`SchemaResource: ${this.meta.name} can't find asset, which id is: ${value.id}`);\n      }\n    } else {\n      this._resource[key] = value;\n    }\n  }\n\n  updateMeta(key: string, value: any) {\n    this._meta[key] = value;\n  }\n\n  onDestroy() {}\n}\n","import { AssetType, GLCapabilityType, ResourceManager } from \"@oasis-engine/core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig } from \"../types\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nexport class TextureResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<TextureResource> {\n    return new Promise((resolve, reject) => {\n      let url: string;\n      let assetType = AssetType.Texture2D;\n      if (this.resourceManager.useCompressedTexture && assetConfig?.props?.compression?.compressions.length) {\n        const rhi = oasis.engine._hardwareRenderer;\n        const compressions = assetConfig.props.compression.compressions;\n        for (let i = 0; i < compressions.length; i++) {\n          const compression = compressions[i];\n          if (compression.container === \"ktx\" && rhi.canIUse(GLCapabilityType[compression.type])) {\n            url = compression.url;\n            assetType = AssetType.KTX;\n            break;\n          }\n        }\n      }\n\n      url = url ?? assetConfig.url;\n\n      resourceManager\n        .load({ url, type: assetType })\n        .then((res) => {\n          this._resource = res;\n          resolve(this);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this._meta.name = this.resource.name;\n      if (this.resource.image) {\n        this._meta.url = this.resource.image.src;\n      }\n    }\n  }\n}\n","import { Logger, PBRMaterial, ResourceManager, Texture } from \"@oasis-engine/core\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { getAllGetters, isAsset } from \"../utils\";\nimport { SchemaResource } from \"./SchemaResource\";\nimport { TextureResource } from \"./TextureResource\";\n\nexport class PBRMaterialResource extends SchemaResource {\n  private configProps;\n\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig): Promise<PBRMaterialResource> {\n    return new Promise((resolve) => {\n      const assetObj = new PBRMaterial(resourceManager.engine);\n      this.configProps = assetConfig.props;\n\n      for (let k in this.configProps) {\n        if (!isAsset(this.configProps[k])) {\n          assetObj[k] = this.configProps[k];\n        }\n      }\n      this._resource = assetObj;\n      this.setMeta();\n      resolve(this);\n    });\n  }\n\n  loadWithAttachedResources(\n    resourceManager: ResourceManager,\n    assetConfig: AssetConfig\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve, reject) => {\n      let loadPromise;\n      if (assetConfig.resource instanceof PBRMaterial) {\n        loadPromise = new Promise((resolve) => {\n          this._resource = assetConfig.resource;\n          this.setMeta();\n          resolve(this);\n        });\n      } else if (assetConfig.props) {\n        loadPromise = this.load(resourceManager, assetConfig);\n      } else {\n        reject(\"Load PBRMaterial Error\");\n      }\n      if (loadPromise) {\n        loadPromise.then(() => {\n          const result: any = {\n            resources: [this],\n            structure: {\n              index: 0,\n              props: {}\n            }\n          };\n\n          const material = this._resource;\n          getAllGetters(this._resource).forEach((attr) => {\n            if (!(material[attr] instanceof Texture)) return;\n            const textureResource = new TextureResource(this.resourceManager, material[attr]);\n            this.attachedResources.push(textureResource);\n            result.resources.push(textureResource);\n            result.structure.props[attr] = {\n              index: result.resources.length - 1\n            };\n          });\n          resolve(result);\n        });\n      }\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n\n  getProps() {\n    const result = {};\n    const props = getAllGetters(this.resource);\n    props.forEach((prop) => (result[prop] = this.resource[prop]));\n    return result;\n  }\n\n  bind() {\n    const resource = this._resource;\n    Object.keys(this.configProps).forEach((attr) => {\n      const value = this.configProps[attr];\n      if (isAsset(value)) {\n        const textureResource = this.resourceManager.get(value.id);\n        if (textureResource && textureResource instanceof TextureResource) {\n          resource[attr] = textureResource.resource;\n          this._attachedResources.push(textureResource);\n        } else {\n          resource[attr] = null;\n          Logger.warn(`PBRMaterialResource: ${this.meta.name} can't find asset \"${attr}\", which id is: ${value.id}`);\n        }\n      } else {\n        if (attr === \"side\") {\n          return;\n        }\n\n        resource[attr] = value;\n      }\n    });\n  }\n}\n","import { AssetType, Logger, ResourceManager, MeshRenderer, Material } from \"@oasis-engine/core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig, LoadAttachedResourceResult } from \"../types\";\nimport { PBRMaterialResource } from \"./PBRMaterialResource\";\nimport { SchemaResource } from \"./SchemaResource\";\nimport { glTFDracoMeshCompression } from \"../../gltf/glTFDracoMeshCompression\";\n\nexport class GLTFResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<any> {\n    if (!!assetConfig.props?.compression) {\n      glTFDracoMeshCompression.init();\n    }\n    return resourceManager\n      .load<any>({ url: assetConfig.url, type: AssetType.Perfab })\n      .then((res) => {\n        const gltf = res;\n        if (assetConfig.props) {\n          gltf.newMaterial = (assetConfig.props as any).newMaterial;\n        }\n        this._resource = gltf;\n      });\n  }\n\n  loadWithAttachedResources(\n    resourceManager: ResourceManager,\n    assetConfig: AssetConfig,\n    oasis: Oasis\n  ): Promise<LoadAttachedResourceResult> {\n    return new Promise((resolve) => {\n      this.load(resourceManager, assetConfig, oasis).then(() => {\n        const gltf = this.resource;\n        const { materials } = gltf;\n        const loadPromises = [];\n        const result = {\n          resources: [this],\n          structure: {\n            index: 0,\n            props: {\n              newMaterial: []\n            }\n          }\n        };\n        for (let i = 0; i < materials.length; i++) {\n          const material = materials[i];\n\n          const materialResource = new PBRMaterialResource(this.resourceManager);\n          this._attachedResources.push(materialResource);\n          loadPromises.push(\n            materialResource.loadWithAttachedResources(resourceManager, {\n              type: \"PBRMaterial\",\n              name: material.name,\n              resource: material\n            })\n          );\n        }\n        Promise.all(loadPromises).then((res) => {\n          const newMaterial = result.structure.props.newMaterial;\n          res.forEach((mat) => {\n            const matStructure = mat.structure;\n            const matResource = mat.resources[matStructure.index];\n            result.resources.push(matResource);\n            matStructure.index = result.resources.length - 1;\n            for (const key in matStructure.props) {\n              if (matStructure.props.hasOwnProperty(key)) {\n                const textureStructure = matStructure.props[key];\n                const textureResource = mat.resources[textureStructure.index];\n                result.resources.push(textureResource);\n                textureStructure.index = result.resources.length - 1;\n              }\n            }\n            newMaterial.push(matStructure);\n          });\n          resolve(result);\n        });\n      });\n    });\n  }\n\n  setMeta(assetConfig?: AssetConfig) {\n    if (assetConfig) {\n      this.meta.name = assetConfig.name;\n    }\n  }\n\n  bind() {\n    const resource = this._resource;\n    this.bindMaterials(resource.newMaterial);\n  }\n\n  update(key: string, value: any) {\n    if (key === \"newMaterial\") {\n      this.bindMaterials(value);\n    } else {\n      this._resource[key] = value;\n    }\n  }\n\n  private bindMaterials(materials) {\n    if (!materials || !materials.length) {\n      return;\n    }\n    const gltf = this._resource;\n    const meshes = gltf.meshes;\n\n    for (let i = 0; i < materials.length; i++) {\n      const mtlResource = this.resourceManager.get(materials[i].id);\n      if (mtlResource) {\n        this._attachedResources.push(mtlResource);\n        gltf.materials[i] = mtlResource.resource;\n      } else {\n        Logger.warn(`GLTFResource: ${this.meta.name} can't find asset \"material\", which id is: ${materials[i].id}`);\n      }\n    }\n    for (let j = 0; j < meshes.length; j++) {\n      const node = this.getNodeByMeshIndex(gltf.nodes, meshes.length - 1 - j);\n      if (node) {\n        for (let k = 0; k < meshes[j].primitives.length; k++) {\n          const primitive = meshes[j].primitives[k];\n          const meshRenderer = node.getComponent(MeshRenderer);\n          const material = gltf.materials[gltf.materials.length - 1 - primitive.materialIndex];\n          if (meshRenderer && material && material instanceof Material) {\n            meshRenderer.setSharedMaterial(k, material);\n          }\n        }\n      }\n    }\n  }\n\n  private getNodeByMeshIndex(nodes, index) {\n    for (let i = 0; i <= nodes.length; i++) {\n      const node = nodes[i];\n      if (node.meshIndex === index) {\n        return node;\n      }\n    }\n    return null;\n  }\n}\n","import { SchemaResource } from \"./SchemaResource\";\nimport { AssetConfig } from \"../types\";\nimport { Oasis } from \"../Oasis\";\nimport { Parser } from \"../Parser\";\n\nexport const scriptAbility = {};\nexport function script(name: string) {\n  return (target: any) => {\n    scriptAbility[name] = target;\n  };\n}\nexport class ScriptResource extends SchemaResource {\n  private isInit = false;\n\n  private initScriptContext() {\n    if (this.isInit) {\n      return;\n    }\n    this.isInit = true;\n    (window as any).__o3_script_context__ = {\n      o3: Parser._components[\"o3\"],\n      script: (name: string) => {\n        return (target: any) => {\n          scriptAbility[name] = target;\n        };\n      }\n    };\n  }\n\n  load(resourceLoader, assetConfig: AssetConfig, oasis: Oasis): Promise<ScriptResource> {\n    this.initScriptContext();\n    return new Promise((resolve) => {\n      const config = assetConfig as any;\n      const scripts = config.props.scripts;\n\n      if (!this.resourceManager.isLocal) {\n        const scriptDom = document.createElement(\"script\");\n        scriptDom.crossOrigin = \"anonymous\";\n        this.setMeta(assetConfig);\n        scriptDom.onload = () => {\n          const o3Scripts = (window as any).o3Scripts;\n          for (let i = 0; i < scripts.length; i++) {\n            const name = scripts[i].name;\n            this._resource = o3Scripts && o3Scripts[name];\n            scriptAbility[name] = this._resource;\n          }\n          resolve(this);\n        };\n        scriptDom.src = assetConfig.url;\n        document.body.appendChild(scriptDom);\n      } else {\n        for (let i = 0; i < scripts.length; i++) {\n          const name = scripts[i].name;\n          scriptAbility[name] = oasis.options?.scripts[name];\n        }\n        resolve(this);\n      }\n    });\n  }\n\n  setMeta(assetConfig?: AssetConfig) {\n    if (assetConfig) {\n      this._meta.name = assetConfig.name;\n      this._meta.url = assetConfig.url;\n      this._meta.source = assetConfig.source;\n    }\n  }\n}\n","import { BlinnPhongMaterial, ResourceManager } from \"@oasis-engine/core\";\nimport { AssetConfig } from \"../types\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nexport class BlinnPhongMaterialResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig): Promise<BlinnPhongMaterialResource> {\n    return new Promise((resolve) => {\n      const assetObj = new BlinnPhongMaterial(resourceManager.engine);\n      for (let k in assetConfig.props) {\n        assetObj[k] = assetConfig.props[k];\n      }\n      this._resource = assetObj;\n      this.setMeta();\n      resolve(this);\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n}\n","import { AssetType, GLCapabilityType, ResourceManager } from \"@oasis-engine/core\";\nimport { Oasis } from \"../Oasis\";\nimport { AssetConfig } from \"../types\";\nimport { SchemaResource } from \"./SchemaResource\";\n\nconst imageOrderMap = {\n  px: 0,\n  nx: 1,\n  py: 2,\n  ny: 3,\n  pz: 4,\n  nz: 5\n};\n\nexport class TextureCubeMapResource extends SchemaResource {\n  load(resourceManager: ResourceManager, assetConfig: AssetConfig, oasis: Oasis): Promise<TextureCubeMapResource> {\n    return new Promise((resolve, reject) => {\n      const imageUrls = [];\n      let type = AssetType.TextureCube;\n      if (this.resourceManager.useCompressedTexture && assetConfig?.props?.compression?.compressions.length) {\n        const rhi = oasis.engine._hardwareRenderer;\n        const compressions = assetConfig.props.compression.compressions;\n        for (let i = 0; i < compressions.length; i++) {\n          const compression = compressions[i];\n          if (compression.container === \"ktx\" && rhi.canIUse(GLCapabilityType[compression.type])) {\n            for (const key in compression.files) {\n              if (compression.files.hasOwnProperty(key)) {\n                const image = compression.files[key];\n                imageUrls[imageOrderMap[key]] = image.url;\n              }\n            }\n            console.warn(compression.type);\n            type = AssetType.KTXCube;\n            break;\n          }\n        }\n      }\n\n      if (type === AssetType.TextureCube) {\n        for (const key in assetConfig.props.images) {\n          if (assetConfig.props.images.hasOwnProperty(key)) {\n            const image = assetConfig.props.images[key];\n            imageUrls[imageOrderMap[key]] = image.url;\n          }\n        }\n      }\n\n      resourceManager\n        .load({\n          urls: imageUrls,\n          type: type\n        })\n        .then((res) => {\n          this._resource = res;\n          resolve(this);\n        })\n        .catch((e) => {\n          reject(e);\n        });\n    });\n  }\n\n  setMeta() {\n    if (this.resource) {\n      this.meta.name = this.resource.name;\n    }\n  }\n}\n","import { SchemaResource } from \"./SchemaResource\";\nimport { AssetConfig } from \"../types\";\n\nexport class BaseResource extends SchemaResource {\n  load(resourceLoader, assetConfig: AssetConfig): Promise<BaseResource> {\n    return new Promise((resolve) => {\n      this._resource = assetConfig;\n      this.setMetaData(\"name\", this.resource.name);\n      this.setMetaData(\"url\", this.resource.url);\n      resolve(this);\n    });\n  }\n\n  setMetaData(key, value) {\n    this._meta[key] = value;\n  }\n}\n","import { Component, Logger } from \"@oasis-engine/core\";\nimport { Oasis } from \"./Oasis\";\nimport { Parser } from \"./Parser\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport { scriptAbility } from \"./resources\";\nimport { ComponentConfig, Props } from \"./types\";\nimport { switchElementsIndex } from \"./utils\";\n\nexport class AbilityManager {\n  private abilityMap: { [id: string]: Component } = {};\n\n  constructor(private oasis: Oasis) {}\n\n  @pluginHook({ after: \"abilityAdded\", before: \"beforeAbilityAdded\" })\n  public add(abilityConfig: ComponentConfig) {\n    const { type, node: nodeId, props, id, index } = abilityConfig;\n\n    const node = this.oasis.nodeManager.get(nodeId);\n    const AbilityConstructor = this.getCompConstructor(type);\n    if (!AbilityConstructor) {\n      Logger.error(`${type} abiltiy is not defined`);\n      return;\n    }\n\n    const abilityProps = this.mixPropsToExplicitProps(props);\n    const ability = node.addComponent(AbilityConstructor);\n    const { enabled } = abilityProps;\n    if (enabled !== undefined) {\n      ability.enabled = enabled;\n    }\n\n    if (type === \"Model\" || type === \"GLTFModel\" || type === \"ParticleRenderer\") {\n      // TODO\n      (ability as any).init(abilityProps);\n    } else {\n      for (let k in abilityProps) {\n        if (abilityProps[k] !== null) {\n          ability[k] = abilityProps[k];\n        }\n      }\n    }\n\n    //@ts-ignore\n    const abilityArray = node._components;\n    const currentIndex = abilityArray.length - 1;\n    switchElementsIndex(abilityArray, currentIndex, index);\n    (ability as any).id = id;\n    this.abilityMap[id] = ability;\n    return ability;\n  }\n\n  @pluginHook({ before: \"beforeAbilityUpdated\", after: \"abilityUpdated\" })\n  public update(id: string, key: string, value: any) {\n    if (this.get(id).constructor.name === \"Model\") {\n      // TODO\n      if (value && this.checkIsAsset(value)) {\n        (this.get(id) as any).setProp(key, this.oasis.resourceManager.get(value.id).resource);\n      } else {\n        (this.get(id) as any).setProp(key, value);\n      }\n    } else {\n      if (value && this.checkIsAsset(value)) {\n        this.get(id)[key] = this.oasis.resourceManager.get(value.id).resource;\n      } else {\n        this.get(id)[key] = value;\n      }\n    }\n\n    return { id, key, value };\n  }\n\n  public get(id: string): Component {\n    return this.abilityMap[id];\n  }\n\n  @pluginHook({ after: \"abilityDeleted\", before: \"beforeAbilityDeleted\" })\n  public delete(id: string) {\n    const ability = this.abilityMap[id];\n    ability.destroy();\n    delete this.abilityMap[id];\n    return id;\n  }\n\n  private getCompConstructor(type: string) {\n    const splits = type.split(\".\");\n    // script\n    if (splits[0] === \"script\") {\n      return scriptAbility[splits[1]];\n    }\n\n    const constructor = Parser._components[\"o3\"][type];\n    if (!constructor) {\n      throw new Error(`${type} is not defined`);\n    }\n    return constructor;\n  }\n\n  private mixPropsToExplicitProps(props: Props) {\n    const explicitProps = { ...props };\n    for (let k in props) {\n      const prop = props[k];\n      if (prop && this.checkIsAsset(prop)) {\n        const res = this.oasis.resourceManager.get(prop.id);\n        if (res) {\n          explicitProps[k] = res.resource;\n        } else {\n          explicitProps[k] = null;\n          Logger.warn(`AbilityManager: can't get asset \"${k}\", which id is ${prop.id}`);\n        }\n      }\n    }\n    return explicitProps;\n  }\n\n  private checkIsAsset(prop: any): boolean {\n    return prop.type === \"asset\";\n  }\n}\n","import { Entity } from \"@oasis-engine/core\";\nimport { Vector3 } from \"@oasis-engine/math\";\nimport { Oasis } from \"./Oasis\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport { NodeConfig } from \"./types\";\nimport { switchElementsIndex } from \"./utils\";\n\nexport class NodeManager {\n  private nodeMap: { [id: string]: Entity } = {};\n  private readonly root: Entity;\n\n  constructor(private oasis: Oasis) {\n    this.root = new Entity(this.oasis.engine, \"root\");\n  }\n\n  public addRootEntity() {\n    this.oasis.engine.sceneManager.activeScene.addRootEntity(this.root);\n  }\n\n  @pluginHook({ after: \"nodeAdded\" })\n  public add(nodeConfig: NodeConfig) {\n    this.create(nodeConfig);\n    this.append(nodeConfig.id, nodeConfig.parent, nodeConfig.index);\n    return this.get(nodeConfig.id);\n  }\n\n  @pluginHook({ before: \"beforeNodeUpdated\", after: \"nodeUpdated\" })\n  public update(id: string, key: string, value: any) {\n    this.get(id)[key] = value;\n    return { id, key, value };\n  }\n\n  public get(id: string): Entity {\n    return this.nodeMap[id];\n  }\n\n  public reset() {\n    this.nodeMap = {};\n  }\n\n  @pluginHook({ before: \"beforeNodeDeleted\" })\n  public delete(id: string) {\n    this.nodeMap[id].destroy();\n    delete this.nodeMap[id];\n  }\n\n  private create(nodeConfig: NodeConfig): Entity {\n    const { isActive, position, rotation, scale, id, name } = nodeConfig;\n    const entity = new Entity(this.oasis.engine, name);\n    entity.isActive = isActive;\n    entity.transform.position = new Vector3(position[0], position[1], position[2]);\n    entity.transform.rotation = new Vector3(rotation[0], rotation[1], rotation[2]);\n    entity.transform.scale = new Vector3(scale[0], scale[1], scale[2]);\n    (entity as any).id = id;\n    this.nodeMap[id] = entity;\n    return entity;\n  }\n\n  private append(childId: string, parentId: string, index: number) {\n    const child = this.nodeMap[childId];\n    const parent = this.nodeMap[parentId] || this.root;\n    parent.addChild(child);\n    //@ts-ignore\n    const children = parent._children;\n    const currentIndex = children.length - 1;\n    switchElementsIndex(children, currentIndex, index);\n  }\n}\n","import { ResourceManager, ObjectValues } from \"@oasis-engine/core\";\nimport { Oasis } from \"./Oasis\";\nimport { pluginHook } from \"./plugins/PluginManager\";\nimport {\n  BaseResource,\n  BlinnPhongMaterialResource,\n  GLTFResource,\n  PBRMaterialResource,\n  SchemaResource,\n  ScriptResource,\n  TextureCubeMapResource,\n  TextureResource\n} from \"./resources\";\nimport { AssetConfig } from \"./types\";\n\nexport const RESOURCE_CLASS = {\n  script: ScriptResource,\n  gltf: GLTFResource,\n  texture: TextureResource,\n  // 'image': TextureResource,\n  cubeTexture: TextureCubeMapResource,\n  PBRMaterial: PBRMaterialResource,\n  PBRSpecularMaterial: PBRMaterialResource,\n  unlitMaterial: PBRMaterialResource,\n  BlinnPhongMaterial: BlinnPhongMaterialResource,\n  // Animation: Animation,\n  base: BaseResource\n};\n\nconst RESOURCE_TYPE: Map<SchemaResource, string> = new Map();\nfor (const key in RESOURCE_CLASS) {\n  if (RESOURCE_CLASS.hasOwnProperty(key)) {\n    const element = RESOURCE_CLASS[key];\n\n    if (element === PBRMaterialResource) {\n      RESOURCE_TYPE.set(element, \"PBRMaterial\");\n    } else {\n      RESOURCE_TYPE.set(element, key);\n    }\n  }\n}\n\nconst resourceFactory = {\n  createResource(resourceManager: SchemaResourceManager, type: string): SchemaResource {\n    return new RESOURCE_CLASS[type](resourceManager);\n  }\n};\n\nexport function registerResource(type: string, resource: any) {\n  if (!RESOURCE_CLASS.hasOwnProperty(type)) {\n    RESOURCE_CLASS[type] = resource;\n    RESOURCE_TYPE.set(resource, type);\n  }\n}\n\nexport class SchemaResourceManager {\n  private resourceMap: { [id: string]: SchemaResource } = {};\n  private resourceIdMap: WeakMap<SchemaResource, string> = new WeakMap();\n  private maxId = 0;\n  private readonly engineResourceManager: ResourceManager;\n\n  constructor(private oasis: Oasis) {\n    this.engineResourceManager = this.oasis.engine.resourceManager;\n  }\n\n  load(asset: AssetConfig): Promise<SchemaResource> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    const loadPromise = resource.load(this.oasis.engine.resourceManager, asset, this.oasis);\n    this.maxId = Math.max(+asset.id, this.maxId);\n    loadPromise.then(() => {\n      this.resourceMap[asset.id] = resource;\n      this.resourceIdMap.set(resource, asset.id);\n    });\n    return loadPromise;\n  }\n\n  add(asset: AssetConfig): Promise<any> {\n    const resource = resourceFactory.createResource(this, asset.type);\n    return new Promise((resolve) => {\n      resource.loadWithAttachedResources(this.oasis.engine.resourceManager, asset, this.oasis).then((result) => {\n        resolve(this.getAddResourceResult(result.resources, result.structure));\n      });\n    });\n  }\n\n  @pluginHook({ before: \"beforeResourceRemove\" })\n  remove(id: string): Promise<Array<string>> {\n    return new Promise((resolve) => {\n      const resource = this.resourceMap[id];\n      const result = [id];\n      let hasAttachedResource = false;\n      delete this.resourceMap[id];\n      if (resource) {\n        const attached = resource.attachedResources;\n        for (let index = 0; index < attached.length; index++) {\n          const attachedResource = attached[index];\n          const attachedResourceId = this.resourceIdMap.get(attachedResource);\n          if (attachedResourceId) {\n            hasAttachedResource = true;\n            this.remove(attachedResourceId).then((attachedResourceRemoveResult) => {\n              result.push(...attachedResourceRemoveResult);\n              resolve(result);\n            });\n          }\n        }\n      }\n      if (!hasAttachedResource) {\n        resolve(result);\n      }\n    });\n  }\n\n  @pluginHook({ after: \"resourceUpdated\", before: \"beforeResourceUpdate\" })\n  update(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.update(key, value);\n    }\n    return {\n      resource,\n      id,\n      key,\n      value\n    };\n  }\n\n  updateMeta(id: string, key: string, value: any) {\n    const resource = this.get(id);\n    if (resource) {\n      resource.updateMeta(key, value);\n    }\n  }\n\n  get(id: string): SchemaResource {\n    return this.resourceMap[id];\n  }\n\n  getAll(): Array<SchemaResource> {\n    return ObjectValues(this.resourceMap);\n  }\n\n  private getAddResourceResult(resources, structure) {\n    const addResourceResult: any = {};\n    const resource = resources[structure.index];\n    const id = `${++this.maxId}`;\n    this.resourceMap[id] = resource;\n    this.resourceIdMap.set(resource, id);\n\n    addResourceResult.id = this.maxId;\n    addResourceResult.type = RESOURCE_TYPE.get(resource.constructor);\n    addResourceResult.meta = resource.meta;\n    addResourceResult.props = {};\n    for (const key in structure.props) {\n      if (structure.props.hasOwnProperty(key)) {\n        const element = structure.props[key];\n        if (element) {\n          if (Array.isArray(element)) {\n            addResourceResult.props[key] = element.map((child) => this.getAddResourceResult(resources, child));\n          } else {\n            addResourceResult.props[key] = this.getAddResourceResult(resources, element);\n          }\n        }\n      }\n    }\n    return addResourceResult;\n  }\n\n  get isLocal(): boolean {\n    return this.oasis.options.local;\n  }\n\n  get useCompressedTexture(): boolean {\n    return this.oasis.options.useCompressedTexture ?? true;\n  }\n}\n","import { Engine, EventDispatcher, ObjectValues } from \"@oasis-engine/core\";\nimport { AbilityManager } from \"./AbilityManager\";\nimport { NodeManager } from \"./NodeManager\";\nimport { pluginHook, PluginManager } from \"./plugins/PluginManager\";\nimport { RESOURCE_CLASS, SchemaResourceManager } from \"./ResourceManager\";\nimport { Options, Schema } from \"./types\";\n\nexport class Oasis extends EventDispatcher {\n  public readonly engine: Engine = null;\n  public readonly nodeManager: NodeManager;\n  public readonly abilityManager: AbilityManager;\n  public resourceManager: SchemaResourceManager;\n  public _canvas: HTMLCanvasElement;\n  private schema: Schema;\n  public timeout: number;\n  private oasis = this;\n\n  private constructor(private _options: Options, public readonly pluginManager: PluginManager) {\n    super(_options.engine);\n    this.engine = _options.engine;\n    this.schema = _options.config;\n    this.timeout = _options.timeout;\n    _options.scripts = _options.scripts ?? {};\n    this.nodeManager = new NodeManager(this);\n    this.abilityManager = new AbilityManager(this);\n    this.nodeManager.add = this.nodeManager.add.bind(this.nodeManager);\n    this.abilityManager.add = this.abilityManager.add.bind(this.abilityManager);\n    this.resourceManager = new SchemaResourceManager(this);\n    if (_options.fps) {\n      this.engine.targetFrameRate = _options.fps;\n      this.engine.vSyncCount = 0;\n    }\n  }\n\n  public get canvas(): HTMLCanvasElement {\n    return this._options.canvas;\n  }\n\n  public get options(): Readonly<Options> {\n    return this._options;\n  }\n\n  public updateConfig(config: Schema): void {\n    this.schema = config;\n\n    this.init();\n  }\n\n  @pluginHook({ after: \"schemaParsed\" })\n  private init(): Promise<any> {\n    return this.loadResources().then(() => {\n      this.bindResources();\n      this.parseEntities();\n      this.parseNodeAbilities();\n      this.attach();\n      this.nodeManager.addRootEntity();\n      this.pluginManager.boot(this);\n    });\n  }\n\n  private loadResources(): Promise<any> {\n    const { assets = {} } = this.schema;\n\n    const loadingPromises = ObjectValues(assets)\n      .filter((asset) => {\n        if (RESOURCE_CLASS[asset.type]) {\n          return true;\n        }\n        console.warn(`${asset.type} loader is not defined. the ${asset.type} type will be ignored.`);\n        return false;\n      })\n      .map((asset) => this.resourceManager.load(asset));\n\n    return Promise.all(loadingPromises);\n  }\n\n  private bindResources() {\n    this.resourceManager.getAll().forEach((resource) => {\n      resource.bind();\n    });\n  }\n\n  private parseEntities(): void {\n    const { nodes } = this.schema;\n    const indices = this.bfsNodes();\n    indices.map((index) => nodes[index]).forEach(this.nodeManager.add);\n  }\n\n  private parseNodeAbilities(): void {\n    const { abilities } = this.schema;\n    Object.keys(abilities)\n      .map((id) => ({ id, ...abilities[id] }))\n      .forEach(this.abilityManager.add);\n  }\n\n  private bfsNodes(): number[] {\n    const { nodes } = this.schema;\n    const roots = ObjectValues(nodes)\n      .filter((node) => !nodes[node.parent])\n      .map((node) => node.id);\n\n    let result = [];\n    const traverseChildren = (roots: string[]) => {\n      result = result.concat(roots);\n      roots.forEach((id) => {\n        const children = nodes[id].children;\n        children && traverseChildren(children);\n      });\n    };\n    traverseChildren(roots);\n    return result;\n  }\n\n  private attach() {\n    this.resourceManager.getAll().forEach((resource) => {\n      resource.attach();\n    });\n  }\n\n  static create(options: Options, pluginManager: PluginManager): Promise<Oasis> {\n    const oasis = new Oasis(options, pluginManager);\n    return oasis.init().then(() => {\n      options.autoPlay && oasis.engine.run();\n      return oasis;\n    });\n  }\n}\n","import { Color, Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\n\n/**\n * temp compa\n * @param config\n */\nexport function compatibleToV2(config) {\n  const { abilities = {}, assets = {} } = config;\n  const ids = Object.keys(abilities);\n  const assetKeys = Object.keys(assets);\n\n  for (let i = 0, l = ids.length; i < l; ++i) {\n    handleComponents(abilities[ids[i]].props);\n  }\n\n  for (let i = 0, l = assetKeys.length; i < l; ++i) {\n    handleAssets(assets[assetKeys[i]].props);\n  }\n\n  return config;\n}\n\n// TODO temp\nfunction handleComponents(props) {\n  const keys = Object.keys(props);\n  for (let i = 0, l = keys.length; i < l; ++i) {\n    const k = keys[i];\n    const v = props[k];\n\n    if (Array.isArray(v)) {\n      if ([\"color\", \"diffuseColor\", \"specularColor\"].indexOf(k) !== -1) {\n        props[k] = new Color(v[0], v[1], v[2], v[3]);\n      } else if (v.length === 4) {\n        props[k] = new Vector4(v[0], v[1], v[2], v[3]);\n      } else if (v.length === 3) {\n        props[k] = new Vector3(v[0], v[1], v[2]);\n      } else if (v.length === 2) {\n        props[k] = new Vector2(v[0], v[1]);\n      }\n    }\n  }\n}\n\nfunction handleAssets(props: any = {}) {\n  if (!props) {\n    return;\n  }\n  const keys = Object.keys(props);\n  for (let i = 0, l = keys.length; i < l; i++) {\n    const key = keys[i];\n    const value = props[key];\n\n    if (key === \"newMaterial\" || key === \"scripts\") {\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      if ([\"ambientColor\", \"emissiveColor\", \"diffuseColor\", \"specularColor\", \"baseColor\"].indexOf(key) !== -1) {\n        props[key] = new Color(value[0], value[1], value[2], value[3]);\n      } else if (value.length === 4) {\n        props[key] = new Vector4(value[0], value[1], value[2], value[3]);\n      } else if (value.length === 3) {\n        props[key] = new Vector3(value[0], value[1], value[2]);\n      } else if (value.length === 2) {\n        props[key] = new Vector2(value[0], value[1]);\n      }\n    }\n  }\n}\n","import { Component } from \"@oasis-engine/core\";\nimport { Oasis } from \"./Oasis\";\nimport { Plugin } from \"./plugins/Plugin\";\nimport { PluginManager } from \"./plugins/PluginManager\";\nimport { Options } from \"./types\";\nimport { compatibleToV2 } from \"./temp.compatible\";\n\nconst CURRENT_SCHEMA_VERSION = 3;\n\nexport class Parser {\n  private pluginManager: PluginManager = new PluginManager();\n  /**\n   * Parse a scene config.\n   * @param options - Options of scene\n   */\n  public parse(options: Options): Promise<Oasis> {\n    if (options?.config?.version !== CURRENT_SCHEMA_VERSION) {\n      console.warn(\n        `schema-parser: schema version \"${options?.config?.version}\" is out of date, please re-pull the latest version (version ${CURRENT_SCHEMA_VERSION}) of the schema`\n      );\n    }\n    compatibleToV2(options.config);\n    return Oasis.create(options, this.pluginManager);\n  }\n\n  register(plugin: Plugin) {\n    this.pluginManager.register(plugin);\n  }\n\n  resetPlugins() {\n    this.pluginManager.reset();\n  }\n\n  private constructor() {}\n\n  static create(): Parser {\n    const parser = new Parser();\n    return parser;\n  }\n\n  /** @internal */\n  public static _components: { [namespace: string]: { [compName: string]: Component } } = {};\n  /**\n   * Register parsing component\n   * @param namespace - Namespace\n   * @param components - Components\n   */\n  static registerComponents(namespace: string, components: { [key: string]: any }) {\n    if (!this._components[namespace]) {\n      this._components[namespace] = {};\n    }\n    Object.assign(this._components[namespace], components);\n  }\n}\n\nexport const parser = Parser.create();\n"],"names":["isBase64","url","test","resourceLoader","AssetType","Buffer","load","item","AssetPromise","resolve","base64Str","slice","RegExp","$1","length","result","Uint8Array","from","atob","c","charCodeAt","buffer","request","type","Loader","WEBGL_COMPONENT_TYPES","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","decodeText","array","TextDecoder","decode","s","i","il","String","fromCharCode","decodeURIComponent","encodeURIComponent","getAccessorTypeSize","accessorType","ACCESSOR_TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","getComponentType","componentType","getAccessorData","gltf","accessor","buffers","bufferView","bufferViews","arrayBuffer","accessorByteOffset","hasOwnProperty","byteOffset","bufferViewByteOffset","accessorTypeSize","count","byteStride","arrayType","uint8Array","BYTES_PER_ELEMENT","originalBufferView","byteLength","viewAccessor","accessorByteSize","j","getBufferData","getVertexStride","size","createVertexElement","semantic","index","VertexElement","getElementFormat","getIndexFormat","DataType","UNSIGNED_BYTE","IndexFormat","UInt8","UNSIGNED_SHORT","UInt16","UNSIGNED_INT","UInt32","FLOAT","VertexElementFormat","Float","Vector2","Vector3","Vector4","UShort2","UShort4","loadImageBuffer","imageBuffer","Promise","reject","blob","window","Blob","img","Image","src","URL","createObjectURL","crossOrigin","onerror","Error","onload","requestAnimationFrame","isAbsoluteUrl","parseRelativeUrl","baseUrl","relativeUrl","substring","lastIndexOf","decoder","glTFDracoMeshCompression","init","DRACODecoder","parse","extension","gltfPrimitive","accessors","bufferViewIndex","gltfAttributeMap","attributes","attributeMap","attributeTypeMap","attributeName","undefined","accessorDef","name","indexAccessor","indices","indexType","taskConfig","attributeIDs","attributeTypes","useUniqueIDs","then","parsedGeometry","TARGET_PATH_MAP","translation","rotation","scale","weights","nodeCount","RegistedObjs","RegistedCustomMaterials","getDefaultMaterial","engine","defaultMateril","BlinnPhongMaterial","emissiveColor","Color","HandledExtensions","PBRMaterial","KHR_lights","KHR_materials_unlit","KHR_materials_pbrSpecularGlossiness","KHR_techniques_webgl","KHR_draco_mesh_compression","extensionParsers","Material","RegistExtension","extobj","Object","keys","forEach","isPrototypeOf","TECH_NAME","GLTFResource","defaultSceneRoot","defaultScene","scenes","textures","animations","materials","meshes","skins","cameras","meta","EngineObject","parseGLTF","data","resources","asset","version","Number","isGltf2","parseExtensions","parseResources","parseMaterial","parseMesh","parseNode","parseScene","parseSkin","parseAnimation","buildSceneGraph","extensions","extensionsUsed","extensionsRequired","Logger","info","indexOf","warn","error","lights","parseLights","handler","entities","debug","promises","push","all","results","gltfMaterial","material","technique","pbrMetallicRoughness","normalTexture","emissiveTexture","emissiveFactor","occlusionTexture","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","getItemByIdx","baseColor","texCoord","normalScale","strength","occlusionStrength","AlphaMode","Opaque","Blend","CutOff","unLight","diffuseFactor","diffuseTexture","specularFactor","glossinessFactor","specularGlossinessTexture","isMetallicWorkflow","specularColor","techniqueName","values","_MainTex","gltfSkin","jointCount","joints","skin","Skin","inverseBindMatrices","MAT4_LENGTH","startIdx","endIdx","Matrix","subarray","node","skeleton","parsePrimitiveVertex","mesh","primitive","primitiveGroup","getVertexBufferData","getIndexBufferData","vertexElements","attributeSemantic","accessorIdx","stride","vertexELement","bufferData","vertexBuffer","BufferBindFlag","VertexBuffer","BufferUsage","Static","setData","setVertexBufferBinding","position","vertexCount","bounds","min","max","offset","setValue","setVertexElements","indexData","indexCount","indexFormat","indexByteSize","indexBuffer","IndexBuffer","setIndexBufferBinding","IndexBufferBinding","start","gltfMesh","Mesh","primitivePromises","groups","primitives","Primitive","subPrimitive","SubPrimitive","topology","mode","PrimitiveTopology","Triangles","targets","Array","fill","vertexPromise","extensionParser","decodedGeometry","processedPrimitive","catch","e","gltfAnimation","gltfSamplers","samplers","gltfChannels","channels","animationIdx","animationClip","AnimationClip","duration","durationIndex","gltfSampler","inputAccessor","input","outputAccessor","output","outputAccessorSize","samplerInterpolation","InterpolationType","LINEAR","interpolation","CUBICSPLINE","STEP","maxTime","addSampler","gltfChannel","target","samplerIndex","sampler","targetNode","targetPath","path","addChannel","gltfNode","entity","Entity","m","matrix","mat","setValueByArray","pos","rot","Quaternion","decompose","transform","rotationQuaternion","key","mapKey","arr","len","obj","camera","cameraOptions","addComponent","Camera","isOrthographic","orthographic","ymag","xmag","zfar","znear","nearClipPlane","farClipPlane","orthographicSize","Math","perspective","aspectRatio","yfov","fieldOfView","lightIdx","light","lightCon","ability","props","gltfScene","sceneNodes","nodes","idx","inverse","itemIdx","gltfNodes","gltfMeshes","scene","children","childNode","addChild","meshIndex","gltfMeshPrimitives","renderer","skinRenderer","SkinnedMeshRenderer","setWeights","MeshRenderer","materialIndex","setSharedMaterial","rootNode","animator","Animation","clip","addAnimationClip","parseGLB","glb","UINT32_LENGTH","GLB_HEADER_MAGIC","GLB_HEADER_LENGTH","GLB_CHUNK_TYPES","JSON","BIN","dataView","DataView","header","magic","getUint32","console","toString","chunkLength","chunkType","glTFData","currentOffset","Perfab","requestGLTF","resourceManager","res","_loadGLTFResources","requestGLB","_loadImages","images","map","uri","mimeType","Texture2D","image","tex","width","height","setImageSource","generateMipmaps","requestGLTFResource","isGLB","_loadBuffers","ArrayBuffer","HEADER_LEN","COMPRESSED_2D","getMipmaps","ktxContainer","loadMipmaps","mipmaps","dataOffset","bytesOfKeyValueData","pixelWidth","pixelHeight","mipmapCount","numberOfMipmapLevels","level","imageSize","Int32Array","face","numberOfFaces","byteArray","isValid","identifier","getEngineFormat","internalFormat","GLCompressedTextureInternalFormat","RGB_S3TC_DXT1_EXT","TextureFormat","DXT1","RGBA_S3TC_DXT5_EXT","DXT5","RGB_ETC1_WEBGL","ETC1_RGB","RGB8_ETC2","ETC2_RGB","RGB8_PUNCHTHROUGH_ALPHA1_ETC2","ETC2_RGBA5","RGBA8_ETC2_EAC","ETC2_RGBA8","RGB_PVRTC_2BPPV1_IMG","PVRTC_RGB2","RGBA_PVRTC_2BPPV1_IMG","PVRTC_RGBA2","RGB_PVRTC_4BPPV1_IMG","PVRTC_RGB4","RGBA_PVRTC_4BPPV1_IMG","PVRTC_RGBA4","RGBA_ASTC_4X4_KHR","ASTC_4x4","RGBA_ASTC_5X5_KHR","ASTC_5x5","RGBA_ASTC_6X6_KHR","ASTC_6x6","RGBA_ASTC_8X8_KHR","ASTC_8x8","RGBA_ASTC_10X10_KHR","ASTC_10x10","RGBA_ASTC_12X12_KHR","ASTC_12x12","formatName","khronosTextureContainerParser","facesExpected","withMipmaps","mapEngineFormat","dataSize","headerDataView","endianness","littleEndian","parsedResult","glType","glTypeSize","glFormat","glInternalFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","loadType","engineFormat","parseSingleKTX","ktx","parseCubeKTX","dataArray","mipmapsFaces","KTXCube","urls","parsedData","mipmap","texture","TextureCubeMap","miplevel","setPixelBuffer","TextureCubeFace","PositiveX","KTX","bin","_glTexture","splitPath","split","TextureCube","faceIndex","GLTFModel","_asset","value","GLTFNode","_hasBuiltNode","clearChildren","destroy","clone","_animator","getComponent","_autoPlay","playAnimationClip","wrapMode","_loop","stop","autoPlay","animationsNames","loop","isClone","rootName","gltfRootName","findByName","Date","now","createChild","_onEnable","isActive","_onDisable","Component","PluginManager","registeredPlugins","Set","plugins","register","plugin","add","boot","oasis","reset","clear","nodeAdded","delegateMethod","args","pluginHook","options","propertyName","descriptor","method","before","pluginManager","apply","arguments","returnObj","after","switchElementsIndex","elements","currentIndex","targetIndex","isAsset","config","getAllGetters","prototype","getPrototypeOf","prototype_property_descriptors","getOwnPropertyDescriptors","entries","property","get","SchemaResource","setMeta","_resource","_meta","_attachedResources","loadWithAttachedResources","assetConfig","structure","getProps","bind","attach","update","resource","id","updateMeta","onDestroy","TextureResource","assetType","useCompressedTexture","compression","compressions","rhi","_hardwareRenderer","container","canIUse","GLCapabilityType","PBRMaterialResource","configProps","assetObj","k","loadPromise","attr","Texture","textureResource","attachedResources","prop","newMaterial","loadPromises","materialResource","matStructure","matResource","textureStructure","bindMaterials","mtlResource","getNodeByMeshIndex","meshRenderer","scriptAbility","script","ScriptResource","isInit","initScriptContext","__o3_script_context__","o3","Parser","_components","scripts","isLocal","scriptDom","document","createElement","o3Scripts","body","appendChild","source","BlinnPhongMaterialResource","imageOrderMap","px","nx","py","ny","pz","nz","TextureCubeMapResource","imageUrls","files","BaseResource","setMetaData","AbilityManager","abilityMap","abilityConfig","nodeId","nodeManager","AbilityConstructor","getCompConstructor","abilityProps","mixPropsToExplicitProps","enabled","abilityArray","constructor","checkIsAsset","setProp","delete","splits","explicitProps","NodeManager","nodeMap","root","addRootEntity","sceneManager","activeScene","nodeConfig","create","append","parent","childId","parentId","child","_children","RESOURCE_CLASS","cubeTexture","PBRSpecularMaterial","unlitMaterial","base","RESOURCE_TYPE","Map","element","set","resourceFactory","createResource","registerResource","SchemaResourceManager","resourceMap","resourceIdMap","WeakMap","maxId","engineResourceManager","getAddResourceResult","remove","hasAttachedResource","attached","attachedResource","attachedResourceId","attachedResourceRemoveResult","getAll","ObjectValues","addResourceResult","isArray","local","Oasis","_options","abilityManager","_canvas","schema","timeout","fps","targetFrameRate","vSyncCount","updateConfig","loadResources","bindResources","parseEntities","parseNodeAbilities","assets","loadingPromises","filter","bfsNodes","abilities","roots","traverseChildren","concat","run","canvas","EventDispatcher","compatibleToV2","ids","assetKeys","l","handleComponents","handleAssets","v","CURRENT_SCHEMA_VERSION","resetPlugins","parser","registerComponents","namespace","components"],"mappings":"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"}