{"version":3,"file":"module.js","sources":["../src/GLTexture.ts","../src/WebCanvas.ts","../src/GLCapability.ts","../src/GLExtensions.ts","../src/GLPrimitive.ts","../src/GLRenderStates.ts","../src/GLSprite.ts","../src/GLSpriteMaterial.ts","../src/GLSpriteBatcher.ts","../src/WebGLRenderer.ts","../src/WebGLEngine.ts"],"sourcesContent":["import { Texture } from \"@oasis-engine/core\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * @private\n */\nexport class GLTexture {\n  protected _gl;\n  private _glTexture: WebGLTexture;\n  protected _config: Texture;\n  protected _type;\n\n  constructor(rhi: WebGLRenderer, config: Texture, type) {\n    this._gl = rhi.gl;\n    this._glTexture = config._glTexture;\n    this._config = config;\n    this._type = type;\n  }\n\n  get glTexture() {\n    return this._glTexture;\n  }\n\n  activeBinding(textureIndex) {\n    const gl = this._gl;\n\n    gl.activeTexture(gl.TEXTURE0 + textureIndex);\n    gl.bindTexture(this._type, this._glTexture);\n  }\n\n  /**\n   * Release gl resource.\n   * @private\n   */\n  finalize() {}\n}\n","import { Canvas } from \"@oasis-engine/core\";\nimport { Vector2 } from \"@oasis-engine/math\";\n\n/**\n * The canvas used on the web, which can support HTMLCanvasElement and OffscreenCanvas.\n */\nexport class WebCanvas implements Canvas {\n  _webCanvas: HTMLCanvasElement | OffscreenCanvas;\n\n  private _width: number;\n  private _height: number;\n  private _scale: Vector2 = new Vector2();\n\n  /**\n   * @inheritdoc\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  set width(value: number) {\n    if (this._width !== value) {\n      this._webCanvas.width = value;\n      this._width = value;\n    }\n  }\n\n  /**\n   * @inheritdoc\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  set height(value: number) {\n    if (this._height !== value) {\n      this._webCanvas.height = value;\n      this._height = value;\n    }\n  }\n\n  /**\n   * The scale of canvas, the value is visible width/height divide the render width/height.\n   * @remarks Need to re-assign after modification to ensure that the modification takes effect.\n   */\n  get scale(): Vector2 {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      this._scale.setValue(\n        (webCanvas.clientWidth * devicePixelRatio) / webCanvas.width,\n        (webCanvas.clientHeight * devicePixelRatio) / webCanvas.height\n      );\n    }\n    return this._scale;\n  }\n\n  set scale(value: Vector2) {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      webCanvas.style.transformOrigin = `left top`;\n      webCanvas.style.transform = `scale(${value.x}, ${value.y})`;\n    }\n  }\n\n  /**\n   * Resize the rendering size according to the clientWidth and clientHeight of the canvas.\n   * @param pixelRatio - Pixel ratio\n   */\n  resizeByClientSize(pixelRatio: number = window.devicePixelRatio): void {\n    const webCanvas = this._webCanvas;\n    if (webCanvas instanceof HTMLCanvasElement) {\n      const width = webCanvas.clientWidth;\n      const height = webCanvas.clientHeight;\n      this.width = width * pixelRatio;\n      this.height = height * pixelRatio;\n    }\n  }\n\n  /**\n   * Create a web canvas.\n   * @param webCanvas - Web native canvas\n   */\n  constructor(webCanvas: HTMLCanvasElement | OffscreenCanvas) {\n    const width = webCanvas.width;\n    const height = webCanvas.height;\n    this._webCanvas = webCanvas;\n    this._width = width;\n    this._height = height;\n  }\n\n  /**\n   * Set scale.\n   * @param x - Scale along the X axis\n   * @param y - Scale along the Y axis\n   */\n  setScale(x: number, y: number): void {\n    this._scale.setValue(x, y);\n    this.scale = this._scale;\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType, GLCompressedTextureInternalFormat } from \"@oasis-engine/core\";\n\ntype extensionKey = string;\n\n/**\n * GL capability.\n */\nexport class GLCapability {\n  private _maxDrawBuffers: number;\n  private _maxAnisoLevel: number;\n  private _maxAntiAliasing: number;\n\n  _rhi: WebGLRenderer;\n  capabilityList: Map<GLCapabilityType, boolean>;\n\n  get maxDrawBuffers() {\n    if (!this._maxDrawBuffers) {\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        this._maxDrawBuffers = this._rhi.gl.getParameter(this._rhi.gl.MAX_DRAW_BUFFERS);\n      } else {\n        this._maxDrawBuffers = 1;\n      }\n    }\n    return this._maxDrawBuffers;\n  }\n\n  /**\n   * Max anisoLevel.\n   */\n  get maxAnisoLevel(): number {\n    if (!this._maxAnisoLevel) {\n      const ext = this._rhi.requireExtension(GLCapabilityType.textureFilterAnisotropic);\n      this._maxAnisoLevel = ext ? this._rhi.gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1;\n    }\n    return this._maxAnisoLevel;\n  }\n\n  /**\n   * Max MSAA count.\n   */\n  get maxAntiAliasing(): number {\n    if (!this._maxAntiAliasing) {\n      const gl = this._rhi.gl;\n      const canMSAA = this.canIUse(GLCapabilityType.multipleSample);\n\n      this._maxAntiAliasing = canMSAA ? gl.getParameter(gl.MAX_SAMPLES) : 1;\n    }\n    return this._maxAntiAliasing;\n  }\n\n  get rhi() {\n    return this._rhi;\n  }\n\n  constructor(rhi: WebGLRenderer) {\n    this._rhi = rhi;\n    this.capabilityList = new Map();\n\n    this.init();\n    this.compatibleAllInterface();\n  }\n\n  /**\n   * Check device capabilities.\n   */\n  public canIUse(capabilityType: GLCapabilityType): boolean {\n    return this.capabilityList.get(capabilityType);\n  }\n\n  /**\n   * Check if can use some compressed texture format.\n   */\n  public canIUseCompressedTextureInternalFormat(internalType: GLCompressedTextureInternalFormat): boolean {\n    const {\n      // astc\n      RGBA_ASTC_4X4_KHR,\n      RGBA_ASTC_12X12_KHR,\n      SRGB8_ALPHA8_ASTC_4X4_KHR,\n      SRGB8_ALPHA8_ASTC_12X12_KHR,\n      // etc1\n      RGB_ETC1_WEBGL,\n      // etc\n      R11_EAC,\n      SRGB8_ALPHA8_ETC2_EAC,\n      // pvrtc\n      RGB_PVRTC_4BPPV1_IMG,\n      RGBA_PVRTC_2BPPV1_IMG,\n      // s3tc\n      RGB_S3TC_DXT1_EXT,\n      RGBA_S3TC_DXT5_EXT\n    } = GLCompressedTextureInternalFormat;\n    if (\n      (internalType >= RGBA_ASTC_4X4_KHR && RGBA_ASTC_12X12_KHR <= RGBA_ASTC_12X12_KHR) ||\n      (internalType >= SRGB8_ALPHA8_ASTC_4X4_KHR && internalType <= SRGB8_ALPHA8_ASTC_12X12_KHR)\n    ) {\n      return this.canIUse(GLCapabilityType.astc);\n    } else if (internalType === RGB_ETC1_WEBGL) {\n      return this.canIUse(GLCapabilityType.etc1);\n    } else if (internalType >= R11_EAC && internalType <= SRGB8_ALPHA8_ETC2_EAC) {\n      return this.canIUse(GLCapabilityType.etc);\n    } else if (internalType >= RGB_PVRTC_4BPPV1_IMG && internalType <= RGBA_PVRTC_2BPPV1_IMG) {\n      return this.canIUse(GLCapabilityType.pvrtc);\n    } else if (internalType >= RGB_S3TC_DXT1_EXT && internalType <= RGBA_S3TC_DXT5_EXT) {\n      return this.canIUse(GLCapabilityType.s3tc);\n    }\n    return false;\n  }\n\n  /**\n   * If can use more joints.\n   */\n  public get canIUseMoreJoints() {\n    return (\n      this.canIUse(GLCapabilityType.textureFloat) &&\n      this.rhi.renderStates.getParameter(this.rhi.gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0\n    );\n  }\n\n  /**\n   *  Init capabilities.\n   */\n  private init() {\n    const cap = this.capabilityList;\n    const { isWebGL2 } = this.rhi;\n    const requireExtension = this.rhi.requireExtension.bind(this.rhi);\n\n    const {\n      standardDerivatives,\n      shaderTextureLod,\n      elementIndexUint,\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      multipleSample,\n      drawBuffers,\n\n      astc,\n      astc_webkit,\n      etc,\n      etc_webkit,\n      etc1,\n      etc1_webkit,\n      pvrtc,\n      pvrtc_webkit,\n      s3tc,\n      s3tc_webkit,\n\n      textureFloat,\n      textureHalfFloat,\n      textureFloatLinear,\n      textureHalfFloatLinear,\n      WEBGL_colorBufferFloat,\n      colorBufferFloat,\n      colorBufferHalfFloat,\n      textureFilterAnisotropic\n    } = GLCapabilityType;\n    cap.set(standardDerivatives, isWebGL2 || !!requireExtension(standardDerivatives));\n    cap.set(shaderTextureLod, isWebGL2 || !!requireExtension(shaderTextureLod));\n    cap.set(elementIndexUint, isWebGL2 || !!requireExtension(elementIndexUint));\n    cap.set(depthTexture, isWebGL2 || !!requireExtension(depthTexture));\n    cap.set(vertexArrayObject, isWebGL2 || !!requireExtension(vertexArrayObject));\n    cap.set(instancedArrays, isWebGL2 || !!requireExtension(instancedArrays));\n    cap.set(multipleSample, isWebGL2);\n    cap.set(drawBuffers, isWebGL2 || !!requireExtension(drawBuffers));\n    cap.set(textureFloat, isWebGL2 || !!requireExtension(textureFloat));\n    cap.set(textureHalfFloat, isWebGL2 || !!requireExtension(textureHalfFloat));\n    cap.set(textureFloatLinear, !!requireExtension(textureFloatLinear));\n    cap.set(textureHalfFloatLinear, isWebGL2 || !!requireExtension(textureHalfFloatLinear));\n    cap.set(\n      colorBufferFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(WEBGL_colorBufferFloat)\n    );\n    cap.set(\n      colorBufferHalfFloat,\n      (isWebGL2 && !!requireExtension(colorBufferFloat)) || !!requireExtension(colorBufferHalfFloat)\n    );\n    cap.set(textureFilterAnisotropic, !!requireExtension(textureFilterAnisotropic));\n\n    cap.set(astc, !!(requireExtension(astc) || requireExtension(astc_webkit)));\n    cap.set(etc, !!(requireExtension(etc) || requireExtension(etc_webkit)));\n    cap.set(etc1, !!(requireExtension(etc1) || requireExtension(etc1_webkit)));\n    cap.set(pvrtc, !!(requireExtension(pvrtc) || requireExtension(pvrtc_webkit)));\n    cap.set(s3tc, !!(requireExtension(s3tc) || requireExtension(s3tc_webkit)));\n  }\n\n  /**\n   * If there are extensions that can supplement this ability, smooth out the difference.\n   * @example\n   * compatible(GLCapabilityType.depthTexture,{\n   *    UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n   * })\n   * gl.UNSIGNED_INT_24_8 = ext.UNSIGNED_INT_24_8_WEBGL\n   */\n  private compatibleInterface(capabilityType: GLCapabilityType, flatItem: { [glKey: string]: extensionKey }) {\n    const rhi = this.rhi;\n    const gl = rhi.gl;\n    let ext = null;\n\n    if ((ext = rhi.requireExtension(capabilityType))) {\n      for (let glKey in flatItem) {\n        const extensionKey = flatItem[glKey];\n        const extensionVal = ext[extensionKey];\n\n        // Mini game hack the native function,use “.bind” to smooth out if is “Funcion”.\n        if (extensionVal?.bind) {\n          gl[glKey] = extensionVal.bind(ext);\n        } else {\n          gl[glKey] = extensionVal;\n        }\n      }\n    }\n  }\n\n  private compatibleAllInterface() {\n    const {\n      depthTexture,\n      vertexArrayObject,\n      instancedArrays,\n      drawBuffers,\n      textureFilterAnisotropic,\n      textureHalfFloat,\n      colorBufferHalfFloat,\n      WEBGL_colorBufferFloat\n    } = GLCapabilityType;\n    const { isWebGL2 } = this.rhi;\n\n    if (!isWebGL2) {\n      this.compatibleInterface(depthTexture, {\n        UNSIGNED_INT_24_8: \"UNSIGNED_INT_24_8_WEBGL\"\n      });\n      this.compatibleInterface(vertexArrayObject, {\n        createVertexArray: \"createVertexArrayOES\",\n        deleteVertexArray: \"deleteVertexArrayOES\",\n        isVertexArray: \"isVertexArrayOES\",\n        bindVertexArray: \"bindVertexArrayOES\"\n      });\n      this.compatibleInterface(instancedArrays, {\n        drawArraysInstanced: \"drawArraysInstancedANGLE\",\n        drawElementsInstanced: \"drawElementsInstancedANGLE\",\n        vertexAttribDivisor: \"vertexAttribDivisorANGLE\"\n      });\n      this.compatibleInterface(drawBuffers, {\n        MAX_DRAW_BUFFERS: \"MAX_DRAW_BUFFERS_WEBGL\"\n      });\n      const items = {};\n      if (this.canIUse(GLCapabilityType.drawBuffers)) {\n        const maxDrawBuffers = this.maxDrawBuffers;\n        for (let i = 0; i < maxDrawBuffers; i++) {\n          i != 0 && (items[`COLOR_ATTACHMENT${i}`] = `COLOR_ATTACHMENT${i}_WEBGL`);\n          items[`DRAW_BUFFER${i}`] = `DRAW_BUFFER${i}_WEBGL`;\n        }\n        this.compatibleInterface(drawBuffers, {\n          drawBuffers: \"drawBuffersWEBGL\",\n          ...items\n        });\n      }\n      this.compatibleInterface(textureHalfFloat, {\n        HAFL_FLOAT: \"HALF_FLOAT_OES\"\n      });\n      this.compatibleInterface(colorBufferHalfFloat, {\n        RGBA16F: \"RBGA16F_EXT\"\n      });\n      this.compatibleInterface(WEBGL_colorBufferFloat, {\n        RGBA32F: \"RBGA32F_EXT\"\n      });\n    }\n\n    this.compatibleInterface(textureFilterAnisotropic, {\n      TEXTURE_MAX_ANISOTROPY_EXT: \"TEXTURE_MAX_ANISOTROPY_EXT\"\n    });\n  }\n}\n","import { WebGLRenderer } from \"./WebGLRenderer\";\nimport { GLCapabilityType } from \"@oasis-engine/core\";\n\n/**\n * GLContext extension.\n */\nexport class GLExtensions {\n  private rhi: WebGLRenderer;\n  private _requireResult;\n\n  constructor(rhi: WebGLRenderer) {\n    this.rhi = rhi;\n    this._requireResult = {};\n  }\n\n  /**\n   * Require an extension.\n   */\n  requireExtension(ext: GLCapabilityType) {\n    if (this._requireResult[ext] !== undefined) {\n      return this._requireResult[ext];\n    }\n\n    this._requireResult[ext] = this.rhi.gl.getExtension(ext);\n    return this._requireResult[ext];\n  }\n}\n","import { GLCapabilityType, Logger, Primitive } from \"@oasis-engine/core\";\nimport { SubPrimitive } from \"@oasis-engine/core/types/graphic/SubPrimitive\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { WebGLExtension } from \"./type\";\nimport { WebGLRenderer } from \"./WebGLRenderer\";\n\n/**\n * Improvement of VAO:\n * 1) WebGL2.0 must support VAO, almost all devices support vao extensions in webgl1.0, we can use PollyFill,only keep VAO mode.\n * 2) VAO implementation now has bugs, change IndexBuffer、VertexBuffer、VertexElements need to update VAO.\n */\n\n/**\n * GL platform primtive.\n */\nexport class GLPrimitive implements IPlatformPrimitive {\n  protected readonly _primitive: Primitive;\n  protected attribLocArray: number[];\n  protected readonly canUseInstancedArrays: boolean;\n\n  private gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private vao: Map<number, WebGLVertexArrayObject> = new Map();\n  private readonly _useVao: boolean;\n\n  constructor(rhi: WebGLRenderer, primitive: Primitive) {\n    this._primitive = primitive;\n    this.canUseInstancedArrays = rhi.canIUse(GLCapabilityType.instancedArrays);\n    this._useVao = rhi.canIUse(GLCapabilityType.vertexArrayObject);\n    this.gl = rhi.gl;\n  }\n\n  /**\n   * Draw the primitive.\n   */\n  draw(shaderProgram: any, subPrimitive: SubPrimitive) {\n    const gl = this.gl;\n    const primitive = this._primitive;\n\n    if (this._useVao) {\n      if (!this.vao.has(shaderProgram.id)) {\n        this.registerVAO(shaderProgram);\n      }\n      const vao = this.vao.get(shaderProgram.id);\n      gl.bindVertexArray(vao);\n    } else {\n      this.bindBufferAndAttrib(shaderProgram);\n    }\n\n    const { indexBufferBinding, instanceCount, _glIndexType } = primitive;\n    const { topology, start, count } = subPrimitive;\n\n    if (!instanceCount) {\n      if (indexBufferBinding) {\n        if (this._useVao) {\n          gl.drawElements(topology, count, _glIndexType, start);\n        } else {\n          const { _nativeBuffer } = indexBufferBinding.buffer;\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n          gl.drawElements(topology, count, _glIndexType, start);\n          gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        }\n      } else {\n        gl.drawArrays(topology, start, count);\n      }\n    } else {\n      if (this.canUseInstancedArrays) {\n        if (indexBufferBinding) {\n          if (this._useVao) {\n            gl.drawElementsInstanced(topology, count, _glIndexType, start, instanceCount);\n          } else {\n            const { _nativeBuffer } = indexBufferBinding.buffer;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _nativeBuffer);\n            gl.drawElementsInstanced(topology, count, _glIndexType, start, instanceCount);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n          }\n        } else {\n          gl.drawArraysInstanced(topology, start, count, instanceCount);\n        }\n      } else {\n        Logger.error(\"ANGLE_instanced_arrays extension is not supported\");\n      }\n    }\n\n    // unbind\n    if (this._useVao) {\n      gl.bindVertexArray(null);\n    } else {\n      this.disableAttrib();\n    }\n  }\n\n  destroy() {\n    if (this._useVao) {\n      const gl = this.gl;\n      this.vao.forEach((vao) => {\n        gl.deleteVertexArray(vao);\n      });\n    }\n  }\n\n  /**\n   * Bind buffer and attribute.\n   */\n  protected bindBufferAndAttrib(shaderProgram: any) {\n    const gl = this.gl;\n    const primitive = this._primitive;\n    const vertexBufferBindings = primitive.vertexBufferBindings;\n\n    this.attribLocArray = [];\n    const attributeLocation = shaderProgram.attributeLocation;\n    const attributes = primitive._vertexElementMap;\n\n    let vbo: WebGLBuffer;\n    let lastBoundVbo: WebGLBuffer;\n\n    for (const name in attributeLocation) {\n      const loc = attributeLocation[name];\n      if (loc === -1) continue;\n\n      const element = attributes[name];\n      if (element) {\n        const { buffer, stride } = vertexBufferBindings[element.bindingIndex];\n        vbo = buffer._nativeBuffer;\n        // prevent binding the vbo which already bound at the last loop, e.g. a buffer with multiple attributes.\n        if (lastBoundVbo !== vbo) {\n          lastBoundVbo = vbo;\n          gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n        }\n\n        gl.enableVertexAttribArray(loc);\n        const { size, type } = element._glElementInfo;\n        gl.vertexAttribPointer(loc, size, type, element.normalized, stride, element.offset);\n        if (this.canUseInstancedArrays) {\n          gl.vertexAttribDivisor(loc, element.instanceDivisor);\n        }\n        this.attribLocArray.push(loc);\n      } else {\n        Logger.warn(\"vertex attribute not found: \" + name);\n      }\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  protected disableAttrib() {\n    const gl = this.gl;\n    for (let i = 0, l = this.attribLocArray.length; i < l; i++) {\n      gl.disableVertexAttribArray(this.attribLocArray[i]);\n    }\n  }\n\n  private registerVAO(shaderProgram: any): void {\n    const gl = this.gl;\n    const vao = gl.createVertexArray();\n\n    /** register VAO */\n    gl.bindVertexArray(vao);\n\n    const { indexBufferBinding } = this._primitive;\n    if (indexBufferBinding) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBufferBinding.buffer._nativeBuffer);\n    }\n    this.bindBufferAndAttrib(shaderProgram);\n\n    /** unbind */\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    this.disableAttrib();\n\n    this.vao.set(shaderProgram.id, vao);\n  }\n}\n","/**\n * @private\n */\nexport class GLRenderStates {\n  private _gl: WebGLRenderingContext;\n  private _parameters = {};\n  /**\n   * @param {WebGLRenderingContext} gl\n   */\n  constructor(gl: WebGLRenderingContext) {\n    this._gl = gl;\n    this._parameters = {}; // current gl state parameters\n\n    /** cache */\n    this._parameters[gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this._parameters[gl.MAX_VERTEX_UNIFORM_VECTORS] = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n    this._parameters[gl.MAX_VERTEX_ATTRIBS] = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n    this._parameters[gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS] = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\n    // init blend state same as BlendState default value.\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n    gl.colorMask(true, true, true, true);\n    gl.blendColor(0, 0, 0, 0);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\n    // init depth state same as DpethState default value.\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthFunc(gl.LESS);\n    gl.depthMask(true);\n\n    // init stencil state same as StencilState default value.\n    gl.disable(gl.STENCIL_TEST);\n    gl.stencilFuncSeparate(gl.FRONT, gl.ALWAYS, 0, 0xff);\n    gl.stencilFuncSeparate(gl.BACK, gl.ALWAYS, 0, 0xff);\n    gl.stencilOpSeparate(gl.FRONT, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilOpSeparate(gl.BACK, gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.stencilMask(0xff);\n\n    // init raster state same as RasterState default value.\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.BACK);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(0, 0);\n  }\n\n  /**\n   * Get a parameter.\n   */\n  getParameter(pname) {\n    return this._parameters[pname];\n  }\n}\n","import { Logger } from \"@oasis-engine/core\";\nimport { Vector2, Vector3, Vector4 } from \"@oasis-engine/math\";\n\n/**\n * @private\n */\nexport class GLSprite {\n  private gl: WebGLRenderingContext;\n  private _vbo: WebGLBuffer;\n  private _maxBatchCount: number;\n  private _vertBuffer;\n  private _vertCursor: number;\n  private _drawSpriteCount: number;\n  private _vertAttributes;\n  constructor(gl) {\n    this.gl = gl;\n\n    //-- vertex attributes\n    this._initVertexAttributes(gl);\n\n    this._vbo = gl.createBuffer();\n    this._maxBatchCount = 0;\n    this._vertBuffer = null;\n    this._vertCursor = 0;\n    this._drawSpriteCount = 0;\n  }\n\n  setMaxBatchCount(count) {\n    const requireSize = count * 6 * 9;\n    if (this._vertBuffer && this._vertBuffer.length >= requireSize) {\n      return;\n    }\n\n    this._maxBatchCount = count;\n    this._vertBuffer = new Float32Array(requireSize);\n  }\n\n  beginDraw(count) {\n    this._vertCursor = 0;\n    this._drawSpriteCount = 0;\n\n    // Dynamic resize\n    if (count > this._maxBatchCount) {\n      this.setMaxBatchCount(count);\n    }\n  }\n\n  drawSprite(positionQuad, uvRect, tintColor) {\n    this._drawSpriteCount++;\n    if (this._drawSpriteCount > this._maxBatchCount) {\n      Logger.warn(\"Sprite: sprite count overflow\");\n      return;\n    }\n\n    const color = tintColor;\n\n    const u = uvRect.u;\n    const v = uvRect.v;\n    const p = uvRect.u + uvRect.width;\n    const q = uvRect.v + uvRect.height;\n\n    this._pushVertex(positionQuad.leftTop, new Vector2(u, v), color);\n    this._pushVertex(positionQuad.leftBottom, new Vector2(u, q), color);\n    this._pushVertex(positionQuad.rightBottom, new Vector2(p, q), color);\n\n    this._pushVertex(positionQuad.rightBottom, new Vector2(p, q), color);\n    this._pushVertex(positionQuad.rightTop, new Vector2(p, v), color);\n    this._pushVertex(positionQuad.leftTop, new Vector2(u, v), color);\n  }\n\n  endDraw(shaderProgram) {\n    const vertCount = this._vertCursor / 9;\n    if (vertCount <= 0) return;\n\n    var gl = this.gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, this._vertBuffer, gl.DYNAMIC_DRAW);\n\n    const attributeLocation = shaderProgram.attributeLocation;\n    for (const k in attributeLocation) {\n      const location = attributeLocation[k];\n      const attrib = this._vertAttributes[k];\n      gl.vertexAttribPointer(location, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\n      gl.enableVertexAttribArray(location);\n    }\n\n    gl.drawArrays(gl.TRIANGLES, 0, vertCount);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    // disable attributes\n    for (const k in attributeLocation) {\n      gl.disableVertexAttribArray(attributeLocation[k]);\n    }\n  }\n\n  _initVertexAttributes(gl) {\n    const vertexStride = (3 + 2 + 4) * 4;\n    const posAtt: any = {};\n    posAtt.name = \"a_pos\";\n    posAtt.size = 3;\n    posAtt.offset = 0;\n\n    const uvAtt: any = {};\n    uvAtt.name = \"a_uv\";\n    uvAtt.size = 2;\n    uvAtt.offset = 3 * 4;\n\n    const colorAtt: any = {};\n    colorAtt.name = \"a_color\";\n    colorAtt.size = 4;\n    colorAtt.offset = 5 * 4;\n\n    this._vertAttributes = { a_pos: posAtt, a_uv: uvAtt, a_color: colorAtt };\n    for (const k in this._vertAttributes) {\n      const att = this._vertAttributes[k];\n      att.type = gl.FLOAT;\n      att.normalized = false;\n      att.stride = vertexStride;\n    }\n  }\n\n  _pushVertex(pos: Vector3, uv: Vector2, color: Vector4) {\n    const vb = this._vertBuffer;\n    const id = this._vertCursor;\n\n    //-- pos\n    vb[id] = pos.x;\n    vb[id + 1] = pos.y;\n    vb[id + 2] = pos.z;\n\n    //-- uv\n    vb[id + 3] = uv.x;\n    vb[id + 4] = uv.y;\n\n    //-- color\n    vb[id + 5] = color.x;\n    vb[id + 6] = color.y;\n    vb[id + 7] = color.z;\n    vb[id + 8] = color.w;\n\n    //--\n    this._vertCursor += 9;\n  }\n\n  finalize() {\n    if (this._vbo) {\n      this.gl.deleteBuffer(this._vbo);\n      this._vbo = null;\n    }\n  }\n}\n","\"use strict\";\n\nimport { Shader } from \"@oasis-engine/core\";\n\nconst spriteVertShader = `\nprecision highp float;\n\nuniform mat4 matProjection;\nuniform mat4 matView;\n\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvoid main()\n{\n  gl_Position = matProjection * matView * vec4(a_pos,1.0);\n  v_uv = a_uv;\n  v_color = a_color;\n}\n`;\n\nconst spriteFragmentShader = `\nprecision mediump float;\nprecision mediump int;\n\nuniform sampler2D s_diffuse;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvoid main()\n{\n  // Only use the Alpha of the texture as a mask, so that the tint color can still be controlled to fade out.\n  vec4 baseColor = texture2D(s_diffuse, v_uv);\n  gl_FragColor = baseColor * v_color;\n}\n`;\n\nShader.create(\"Sprite\", spriteVertShader, spriteFragmentShader);\n","import { Camera, Engine, Logger, Material, RenderQueue } from \"@oasis-engine/core\";\nimport { GLSprite } from \"./GLSprite\";\nimport \"./GLSpriteMaterial\";\n\n/**\n * @private\n */\nexport class GLSpriteBatcher {\n  private _gl: WebGLRenderingContext;\n  private _batchedQueue;\n  private _targetTexture;\n  private _glSprite: GLSprite;\n  private _camera;\n\n  constructor(rhi) {\n    this._gl = rhi.gl;\n\n    this._batchedQueue = [];\n    this._targetTexture = null;\n\n    this._glSprite = new GLSprite(rhi.gl);\n\n    this._camera = null;\n  }\n\n  flush(engine: Engine, material: Material) {\n    if (this._batchedQueue.length === 0) {\n      return;\n    }\n\n    if (!this._targetTexture) {\n      Logger.error(\"No texture!\");\n      return;\n    }\n\n    const materialData = material.shaderData;\n    materialData.setTexture(\"s_diffuse\", this._targetTexture);\n    materialData.setMatrix(\"matView\", this._camera.viewMatrix);\n    materialData.setMatrix(\"matProjection\", this._camera.projectionMatrix);\n\n    //@ts-ignore\n    const compileMacros = RenderQueue.compileMacros;\n    compileMacros.clear();\n\n    //@ts-ignore\n    const program = material.shader._getShaderProgram(engine, compileMacros);\n    if (!program.isValid) {\n      return;\n    }\n\n    program.groupingOtherUniformBlock();\n    program.uploadAll(program.materialUniformBlock, materialData);\n\n    //@ts-ignore\n    material.renderState._apply(engine);\n\n    this._glSprite.beginDraw(this._batchedQueue.length);\n    for (let i = 0, len = this._batchedQueue.length; i < len; i++) {\n      const positionQuad = this._batchedQueue[i].positionQuad;\n      const uvRect = this._batchedQueue[i].uvRect;\n      const tintColor = this._batchedQueue[i].tintColor;\n      this._glSprite.drawSprite(positionQuad, uvRect, tintColor);\n    }\n    this._glSprite.endDraw(program);\n\n    this._batchedQueue = [];\n    this._targetTexture = null;\n    this._camera = null;\n  }\n\n  canBatch(texture, renderMode, camera: Camera) {\n    if (this._targetTexture === null) {\n      return true;\n    }\n    return texture === this._targetTexture && camera === this._camera;\n  }\n\n  drawSprite(material: Material, positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    if (!this.canBatch(texture, renderMode, camera)) {\n      this.flush(camera.engine, material);\n    }\n\n    this._targetTexture = texture;\n    this._camera = camera;\n    this._batchedQueue.push({ positionQuad, uvRect, tintColor });\n  }\n\n  finalize() {\n    this._glSprite.finalize();\n  }\n}\n","import {\n  Camera,\n  Canvas,\n  ClearMode,\n  Engine,\n  GLCapabilityType,\n  HardwareRenderer,\n  Logger,\n  Material,\n  Primitive,\n  RenderTarget,\n  SubPrimitive,\n  TextureCubeFace\n} from \"@oasis-engine/core\";\nimport { IPlatformPrimitive } from \"@oasis-engine/design\";\nimport { Vector4 } from \"@oasis-engine/math\";\nimport { GLCapability } from \"./GLCapability\";\nimport { GLExtensions } from \"./GLExtensions\";\nimport { GLPrimitive } from \"./GLPrimitive\";\nimport { GLRenderStates } from \"./GLRenderStates\";\nimport { GLSpriteBatcher } from \"./GLSpriteBatcher\";\nimport { WebGLExtension } from \"./type\";\nimport { WebCanvas } from \"./WebCanvas\";\n\n/**\n * WebGL mode.\n */\nexport enum WebGLMode {\n  /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\n  Auto = 0,\n  /** WebGL2.0. */\n  WebGL2 = 1,\n  /** WebGL1.0, */\n  WebGL1 = 2\n}\n\n/**\n * WebGL renderer options.\n */\nexport interface WebGLRendererOptions extends WebGLContextAttributes {\n  /** WebGL mode.*/\n  webGLMode?: WebGLMode;\n}\n\n/**\n * WebGL renderer, including WebGL1.0 and WebGL2.0.\n */\nexport class WebGLRenderer implements HardwareRenderer {\n  _currentBind: any;\n\n  private _options: WebGLRendererOptions;\n  private _gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n  private _renderStates;\n  private _extensions;\n  private _spriteBatcher;\n  private _capability: GLCapability;\n  private _isWebGL2: boolean;\n\n  private _activedTextureID: number;\n  private _activeTextures: WebGLTexture[] = new Array(32);\n\n  get isWebGL2() {\n    return this._isWebGL2;\n  }\n\n  constructor(options: WebGLRendererOptions = {}) {\n    this._options = options;\n  }\n\n  init(canvas: Canvas) {\n    const option = this._options;\n    const webCanvas = (canvas as WebCanvas)._webCanvas;\n    const webGLMode = option.webGLMode || WebGLMode.Auto;\n    let gl: (WebGLRenderingContext & WebGLExtension) | WebGL2RenderingContext;\n\n    if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL2) {\n      gl = webCanvas.getContext(\"webgl2\", option);\n      if (!gl && webCanvas instanceof HTMLCanvasElement) {\n        gl = <WebGL2RenderingContext>webCanvas.getContext(\"experimental-webgl2\", option);\n      }\n      this._isWebGL2 = true;\n    }\n\n    if (!gl) {\n      if (webGLMode == WebGLMode.Auto || webGLMode == WebGLMode.WebGL1) {\n        gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"webgl\", option);\n        if (!gl && webCanvas instanceof HTMLCanvasElement) {\n          gl = <WebGLRenderingContext & WebGLExtension>webCanvas.getContext(\"experimental-webgl\", option);\n        }\n        this._isWebGL2 = false;\n      }\n    }\n\n    if (!gl) {\n      throw new Error(\"Get GL Context FAILED.\");\n    }\n\n    this._gl = gl;\n    this._renderStates = new GLRenderStates(gl);\n    this._extensions = new GLExtensions(this);\n    this._capability = new GLCapability(this);\n\n    this._options = null;\n  }\n\n  createPlatformPrimitive(primitive: Primitive): IPlatformPrimitive {\n    return new GLPrimitive(this, primitive);\n  }\n\n  get gl() {\n    return this._gl;\n  }\n\n  get renderStates(): GLRenderStates {\n    return this._renderStates;\n  }\n\n  get capability(): GLCapability {\n    return this._capability;\n  }\n\n  requireExtension(ext) {\n    return this._extensions.requireExtension(ext);\n  }\n\n  canIUse(capabilityType: GLCapabilityType) {\n    return this.capability.canIUse(capabilityType);\n  }\n\n  canIUseCompressedTextureInternalFormat(type: number) {\n    return this.capability.canIUseCompressedTextureInternalFormat(type);\n  }\n\n  public get canIUseMoreJoints() {\n    return this.capability.canIUseMoreJoints;\n  }\n\n  viewport(x, y, width, height) {\n    // gl.enable(gl.SCISSOR_TEST);\n    // gl.scissor(x, transformY, width, height);\n    const gl = this._gl;\n    gl.viewport(x, gl.drawingBufferHeight - y - height, width, height);\n  }\n\n  colorMask(r, g, b, a) {\n    this._gl.colorMask(r, g, b, a);\n  }\n\n  clearRenderTarget(clearMode, clearParam: Vector4) {\n    const gl = this._gl;\n\n    switch (clearMode) {\n      case ClearMode.SOLID_COLOR: // solid color\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        break;\n      case ClearMode.DEPTH_ONLY: // depth only\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        break;\n      case ClearMode.COLOR_ONLY:\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        break;\n      case ClearMode.STENCIL_ONLY:\n        gl.clear(gl.STENCIL_BUFFER_BIT);\n        break;\n      case ClearMode.ALL_CLEAR:\n        gl.clearColor(clearParam.x, clearParam.y, clearParam.z, clearParam.w);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\n        break;\n\n      case ClearMode.DONT_CLEAR: // dont clear\n        break;\n    }\n  }\n\n  drawPrimitive(primitive: Primitive, subPrimitive: SubPrimitive, shaderProgram: any) {\n    // todo: VAO not support morph animation\n    if (primitive) {\n      //@ts-ignore\n      primitive._draw(shaderProgram, subPrimitive);\n    } else {\n      Logger.error(\"draw primitive failed.\");\n    }\n  }\n\n  drawSprite(material, positionQuad, uvRect, tintColor, texture, renderMode, camera: Camera) {\n    if (!this._spriteBatcher) {\n      this._spriteBatcher = new GLSpriteBatcher(this);\n    }\n\n    this._spriteBatcher.drawSprite(material, positionQuad, uvRect, tintColor, texture, renderMode, camera);\n  }\n\n  flushSprite(engine: Engine, material: Material) {\n    if (this._spriteBatcher) {\n      this._spriteBatcher.flush(engine, material);\n    }\n  }\n\n  activeRenderTarget(renderTarget: RenderTarget, camera: Camera) {\n    const gl = this._gl;\n    if (renderTarget) {\n      renderTarget._activeRenderTarget();\n      const { width, height } = renderTarget;\n      gl.viewport(0.0, 0.0, width, height);\n    } else {\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      const viewport = camera.viewport;\n      const width = gl.drawingBufferWidth;\n      const height = gl.drawingBufferHeight;\n      this.viewport(viewport.x * width, viewport.y * height, viewport.z * width, viewport.w * height);\n    }\n  }\n\n  blitRenderTarget(renderTarget: RenderTarget) {\n    if (renderTarget) {\n      if (renderTarget._MSAAFrameBuffer) {\n        renderTarget._blitRenderTarget();\n        return;\n      }\n    }\n  }\n\n  setRenderTargetFace(renderTarget: RenderTarget, cubeFace: TextureCubeFace) {\n    if (renderTarget) {\n      renderTarget._setRenderTargetFace(cubeFace);\n    }\n  }\n\n  destroy() {}\n\n  activeTexture(textureID: number): void {\n    if (this._activedTextureID !== textureID) {\n      this._gl.activeTexture(textureID);\n      this._activedTextureID = textureID;\n    }\n  }\n\n  bindTexture(target: number, texture: WebGLTexture): void {\n    const gl = this._gl;\n    if (this._activeTextures[this._activedTextureID - gl.TEXTURE0] !== texture) {\n      gl.bindTexture(target, texture);\n      this._activeTextures[this._activedTextureID - gl.TEXTURE0] = texture;\n    }\n  }\n}\n","import { Engine } from \"@oasis-engine/core\";\nimport { WebCanvas } from \"./WebCanvas\";\nimport { WebGLRenderer, WebGLRendererOptions } from \"./WebGLRenderer\";\n\n/**\n * WebGL platform engine,support includes WebGL1.0 and WebGL2.0.\n */\nexport class WebGLEngine extends Engine {\n  /**\n   * Create an engine suitable for the WebGL platform.\n   * @param canvas - Native web canvas\n   * @param webGLRendererOptions - WebGL renderer options\n   */\n  constructor(canvas: string | HTMLCanvasElement | OffscreenCanvas, webGLRendererOptions?: WebGLRendererOptions) {\n    const webCanvas = new WebCanvas(\n      <HTMLCanvasElement | OffscreenCanvas>(typeof canvas === \"string\" ? document.getElementById(canvas) : canvas)\n    );\n    const hardwareRenderer = new WebGLRenderer(webGLRendererOptions);\n\n    super(webCanvas, hardwareRenderer);\n  }\n\n  /**\n   * Web canvas.\n   */\n  get canvas(): WebCanvas {\n    return this._canvas as WebCanvas;\n  }\n}\n"],"names":["GLTexture","rhi","config","type","_gl","_glTexture","_config","_type","gl","activeBinding","textureIndex","activeTexture","TEXTURE0","bindTexture","finalize","WebCanvas","resizeByClientSize","pixelRatio","window","devicePixelRatio","webCanvas","_webCanvas","HTMLCanvasElement","width","clientWidth","height","clientHeight","_width","value","_height","_scale","setValue","style","transformOrigin","transform","x","y","Vector2","setScale","scale","GLCapability","_maxDrawBuffers","canIUse","GLCapabilityType","drawBuffers","_rhi","getParameter","MAX_DRAW_BUFFERS","_maxAnisoLevel","ext","requireExtension","textureFilterAnisotropic","MAX_TEXTURE_MAX_ANISOTROPY_EXT","_maxAntiAliasing","canMSAA","multipleSample","MAX_SAMPLES","capabilityList","Map","init","compatibleAllInterface","capabilityType","get","canIUseCompressedTextureInternalFormat","internalType","RGBA_ASTC_4X4_KHR","GLCompressedTextureInternalFormat","RGBA_ASTC_12X12_KHR","SRGB8_ALPHA8_ASTC_4X4_KHR","SRGB8_ALPHA8_ASTC_12X12_KHR","RGB_ETC1_WEBGL","R11_EAC","SRGB8_ALPHA8_ETC2_EAC","RGB_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_IMG","RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT5_EXT","astc","etc1","etc","pvrtc","s3tc","cap","isWebGL2","bind","standardDerivatives","shaderTextureLod","elementIndexUint","depthTexture","vertexArrayObject","instancedArrays","astc_webkit","etc_webkit","etc1_webkit","pvrtc_webkit","s3tc_webkit","textureFloat","textureHalfFloat","textureFloatLinear","textureHalfFloatLinear","WEBGL_colorBufferFloat","colorBufferFloat","colorBufferHalfFloat","set","compatibleInterface","flatItem","glKey","extensionKey","extensionVal","UNSIGNED_INT_24_8","createVertexArray","deleteVertexArray","isVertexArray","bindVertexArray","drawArraysInstanced","drawElementsInstanced","vertexAttribDivisor","items","maxDrawBuffers","i","HAFL_FLOAT","RGBA16F","RGBA32F","TEXTURE_MAX_ANISOTROPY_EXT","renderStates","MAX_VERTEX_TEXTURE_IMAGE_UNITS","GLExtensions","_requireResult","undefined","getExtension","GLPrimitive","primitive","_primitive","attribLocArray","canUseInstancedArrays","vao","_useVao","draw","shaderProgram","subPrimitive","has","id","registerVAO","bindBufferAndAttrib","indexBufferBinding","instanceCount","_glIndexType","topology","start","count","drawElements","_nativeBuffer","buffer","bindBuffer","ELEMENT_ARRAY_BUFFER","drawArrays","Logger","error","disableAttrib","destroy","forEach","vertexBufferBindings","attributeLocation","attributes","_vertexElementMap","vbo","lastBoundVbo","name","loc","element","bindingIndex","stride","ARRAY_BUFFER","enableVertexAttribArray","_glElementInfo","size","vertexAttribPointer","normalized","offset","instanceDivisor","push","warn","l","length","disableVertexAttribArray","GLRenderStates","_parameters","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VERTEX_ATTRIBS","blendFuncSeparate","ONE","ZERO","blendEquationSeparate","FUNC_ADD","colorMask","blendColor","disable","SAMPLE_ALPHA_TO_COVERAGE","enable","DEPTH_TEST","depthFunc","LESS","depthMask","STENCIL_TEST","stencilFuncSeparate","FRONT","ALWAYS","BACK","stencilOpSeparate","KEEP","stencilMask","CULL_FACE","cullFace","POLYGON_OFFSET_FILL","polygonOffset","pname","GLSprite","_vbo","_maxBatchCount","_vertBuffer","_vertCursor","_drawSpriteCount","_vertAttributes","_initVertexAttributes","createBuffer","setMaxBatchCount","requireSize","Float32Array","beginDraw","drawSprite","positionQuad","uvRect","tintColor","color","u","v","p","q","_pushVertex","leftTop","leftBottom","rightBottom","rightTop","endDraw","vertCount","bufferData","DYNAMIC_DRAW","k","location","attrib","TRIANGLES","vertexStride","posAtt","uvAtt","colorAtt","a_pos","a_uv","a_color","att","FLOAT","pos","uv","vb","z","w","deleteBuffer","spriteVertShader","spriteFragmentShader","Shader","create","GLSpriteBatcher","_batchedQueue","_targetTexture","_glSprite","_camera","flush","engine","material","materialData","shaderData","setTexture","setMatrix","viewMatrix","projectionMatrix","compileMacros","RenderQueue","clear","program","shader","_getShaderProgram","isValid","groupingOtherUniformBlock","uploadAll","materialUniformBlock","renderState","_apply","len","canBatch","texture","renderMode","camera","WebGLMode","WebGLRenderer","_isWebGL2","options","_currentBind","_options","_renderStates","_extensions","_spriteBatcher","_capability","_activedTextureID","_activeTextures","Array","canvas","option","webGLMode","Auto","WebGL2","getContext","WebGL1","Error","createPlatformPrimitive","capability","viewport","drawingBufferHeight","r","g","b","a","clearRenderTarget","clearMode","clearParam","ClearMode","SOLID_COLOR","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_ONLY","COLOR_ONLY","STENCIL_ONLY","STENCIL_BUFFER_BIT","ALL_CLEAR","DONT_CLEAR","drawPrimitive","_draw","flushSprite","activeRenderTarget","renderTarget","_activeRenderTarget","bindFramebuffer","FRAMEBUFFER","drawingBufferWidth","blitRenderTarget","_MSAAFrameBuffer","_blitRenderTarget","setRenderTargetFace","cubeFace","_setRenderTargetFace","textureID","target","canIUseMoreJoints","WebGLEngine","webGLRendererOptions","document","getElementById","hardwareRenderer","_canvas","Engine"],"mappings":"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"}